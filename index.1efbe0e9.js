let e;function t(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}function n(e){return e&&e.__esModule?e.default:e}var r,i,a,o,s,A,l,u,c,h,d,f,p,m,g,v,_,y,x,b,M,w,E,S,T,C,R,P,L=globalThis,D={},O={},I=L.parcelRequire6921;null==I&&((I=function(e){if(e in D)return D[e].exports;if(e in O){var t=O[e];delete O[e];var n={id:e,exports:{}};return D[e]=n,t.call(n.exports,n,n.exports),n.exports}var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(e,t){O[e]=t},L.parcelRequire6921=I);var q=I.register;q("8PNKb",function(e,n){t(e.exports,"Easing",()=>i),t(e.exports,"Tween",()=>u),t(e.exports,"update",()=>c);/**
 * The Ease class provides a collection of easing functions for use with tween.js.
 */var r,i=Object.freeze({Linear:Object.freeze({None:function(e){return e},In:function(e){return this.None(e)},Out:function(e){return this.None(e)},InOut:function(e){return this.None(e)}}),Quadratic:Object.freeze({In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}}),Cubic:Object.freeze({In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}}),Quartic:Object.freeze({In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}}),Quintic:Object.freeze({In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}}),Sinusoidal:Object.freeze({In:function(e){return 1-Math.sin((1-e)*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return .5*(1-Math.sin(Math.PI*(.5-e)))}}),Exponential:Object.freeze({In:function(e){return 0===e?0:Math.pow(1024,e-1)},Out:function(e){return 1===e?1:1-Math.pow(2,-10*e)},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(-Math.pow(2,-10*(e-1))+2)}}),Circular:Object.freeze({In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}}),Elastic:Object.freeze({In:function(e){return 0===e?0:1===e?1:-Math.pow(2,10*(e-1))*Math.sin((e-1.1)*5*Math.PI)},Out:function(e){return 0===e?0:1===e?1:Math.pow(2,-10*e)*Math.sin((e-.1)*5*Math.PI)+1},InOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?-.5*Math.pow(2,10*(e-1))*Math.sin((e-1.1)*5*Math.PI):.5*Math.pow(2,-10*(e-1))*Math.sin((e-1.1)*5*Math.PI)+1}}),Back:Object.freeze({In:function(e){return 1===e?1:e*e*(2.70158*e-1.70158)},Out:function(e){return 0===e?0:--e*e*(2.70158*e+1.70158)+1},InOut:function(e){return(e*=2)<1?.5*(e*e*(3.5949095*e-2.5949095)):.5*((e-=2)*e*(3.5949095*e+2.5949095)+2)}}),Bounce:Object.freeze({In:function(e){return 1-i.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return e<.5?.5*i.Bounce.In(2*e):.5*i.Bounce.Out(2*e-1)+.5}}),generatePow:function(e){return void 0===e&&(e=4),e=(e=e<Number.EPSILON?Number.EPSILON:e)>1e4?1e4:e,{In:function(t){return Math.pow(t,e)},Out:function(t){return 1-Math.pow(1-t,e)},InOut:function(t){return t<.5?Math.pow(2*t,e)/2:(1-Math.pow(2-2*t,e))/2+.5}}}}),a=function(){return performance.now()},o=/** @class */function(){function e(){this._tweens={},this._tweensAddedDuringUpdate={}}return e.prototype.getAll=function(){var e=this;return Object.keys(this._tweens).map(function(t){return e._tweens[t]})},e.prototype.removeAll=function(){this._tweens={}},e.prototype.add=function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},e.prototype.remove=function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},e.prototype.update=function(e,t){void 0===e&&(e=a()),void 0===t&&(t=!1);var n=Object.keys(this._tweens);if(0===n.length)return!1;// Tweens are updated in "batches". If you add a new tween during an
// update, then the new tween will be updated in the next batch.
// If you remove a tween during an update, it may or may not be updated.
// However, if the removed tween was added during the current batch,
// then it will not be updated.
for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var r=0;r<n.length;r++){var i=this._tweens[n[r]],o=!t;i&&!1===i.update(e,o)&&!t&&delete this._tweens[n[r]]}n=Object.keys(this._tweensAddedDuringUpdate)}return!0},e}(),s={Linear:function(e,t){var n=e.length-1,r=n*t,i=Math.floor(r),a=s.Utils.Linear;return t<0?a(e[0],e[1],r):t>1?a(e[n],e[n-1],n-r):a(e[i],e[i+1>n?n:i+1],r-i)},Bezier:function(e,t){for(var n=0,r=e.length-1,i=Math.pow,a=s.Utils.Bernstein,o=0;o<=r;o++)n+=i(1-t,r-o)*i(t,o)*e[o]*a(r,o);return n},CatmullRom:function(e,t){var n=e.length-1,r=n*t,i=Math.floor(r),a=s.Utils.CatmullRom;return e[0]===e[n]?(t<0&&(i=Math.floor(r=n*(1+t))),a(e[(i-1+n)%n],e[i],e[(i+1)%n],e[(i+2)%n],r-i)):t<0?e[0]-(a(e[0],e[0],e[1],e[1],-r)-e[0]):t>1?e[n]-(a(e[n],e[n],e[n-1],e[n-1],r-n)-e[n]):a(e[i?i-1:0],e[i],e[n<i+1?n:i+1],e[n<i+2?n:i+2],r-i)},Utils:{Linear:function(e,t,n){return(t-e)*n+e},Bernstein:function(e,t){var n=s.Utils.Factorial;return n(e)/n(t)/n(e-t)},Factorial:(r=[1],function(e){var t=1;if(r[e])return r[e];for(var n=e;n>1;n--)t*=n;return r[e]=t,t}),CatmullRom:function(e,t,n,r,i){var a=(n-e)*.5,o=(r-t)*.5,s=i*i;return(2*t-2*n+a+o)*(i*s)+(-3*t+3*n-2*a-o)*s+a*i+t}}},A=/** @class */function(){function e(){}return e.nextId=function(){return e._nextId++},e._nextId=0,e}(),l=new o,u=/** @class */function(){function e(e,t){void 0===t&&(t=l),this._object=e,this._group=t,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=i.Linear.None,this._interpolationFunction=s.Linear,// eslint-disable-next-line
this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=A.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1}return e.prototype.getId=function(){return this._id},e.prototype.isPlaying=function(){return this._isPlaying},e.prototype.isPaused=function(){return this._isPaused},e.prototype.to=function(e,t){if(void 0===t&&(t=1e3),this._isPlaying)throw Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=e,this._propertiesAreSetUp=!1,this._duration=t,this},e.prototype.duration=function(e){return void 0===e&&(e=1e3),this._duration=e,this},e.prototype.dynamic=function(e){return void 0===e&&(e=!1),this._isDynamic=e,this},e.prototype.start=function(e,t){if(void 0===e&&(e=a()),void 0===t&&(t=!1),this._isPlaying)return this;if(// eslint-disable-next-line
this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed)for(var n in // If we were reversed (f.e. using the yoyo feature) then we need to
// flip the tween direction back to forward.
this._reversed=!1,this._valuesStartRepeat)this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=e,this._startTime+=this._delayTime,!this._propertiesAreSetUp||t){// If dynamic is not enabled, clone the end values instead of using the passed-in end values.
if(this._propertiesAreSetUp=!0,!this._isDynamic){var r={};for(var i in this._valuesEnd)r[i]=this._valuesEnd[i];this._valuesEnd=r}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,t)}return this},e.prototype.startFromCurrentValues=function(e){return this.start(e,!0)},e.prototype._setupProperties=function(e,t,n,r,i){for(var a in n){var o=e[a],s=Array.isArray(o),A=s?"array":typeof o,l=!s&&Array.isArray(n[a]);// If `to()` specifies a property that doesn't exist in the source object,
// we should not set that property in the object
if("undefined"!==A&&"function"!==A){// Check if an Array was provided as property value
if(l){var u=n[a];if(0===u.length)continue;for(var c=[o],h=0,d=u.length;h<d;h+=1){var f=this._handleRelativeValue(o,u[h]);if(isNaN(f)){l=!1,console.warn("Found invalid interpolation list. Skipping.");break}c.push(f)}l&&(n[a]=c)}// handle the deepness of the values
if(("object"===A||s)&&o&&!l){for(var p in t[a]=s?[]:{},o)t[a][p]=o[p];// TODO? repeat nested values? And yoyo? And array values?
r[a]=s?[]:{};var u=n[a];// If dynamic is not enabled, clone the end values instead of using the passed-in end values.
if(!this._isDynamic){var m={};for(var p in u)m[p]=u[p];n[a]=u=m}this._setupProperties(o,t[a],u,r[a],i)}else(void 0===t[a]||i)&&(t[a]=o),s||// @ts-ignore FIXME?
(t[a]*=1),l?// @ts-ignore FIXME?
r[a]=n[a].slice().reverse():r[a]=t[a]||0}}},e.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying&&(// eslint-disable-next-line
this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object)),this},e.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},e.prototype.pause=function(e){return void 0===e&&(e=a()),this._isPaused||!this._isPlaying||(this._isPaused=!0,this._pauseStart=e,// eslint-disable-next-line
this._group&&this._group.remove(this)),this},e.prototype.resume=function(e){return void 0===e&&(e=a()),this._isPaused&&this._isPlaying&&(this._isPaused=!1,this._startTime+=e-this._pauseStart,this._pauseStart=0,// eslint-disable-next-line
this._group&&this._group.add(this)),this},e.prototype.stopChainedTweens=function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop();return this},e.prototype.group=function(e){return void 0===e&&(e=l),this._group=e,this},e.prototype.delay=function(e){return void 0===e&&(e=0),this._delayTime=e,this},e.prototype.repeat=function(e){return void 0===e&&(e=0),this._initialRepeat=e,this._repeat=e,this},e.prototype.repeatDelay=function(e){return this._repeatDelayTime=e,this},e.prototype.yoyo=function(e){return void 0===e&&(e=!1),this._yoyo=e,this},e.prototype.easing=function(e){return void 0===e&&(e=i.Linear.None),this._easingFunction=e,this},e.prototype.interpolation=function(e){return void 0===e&&(e=s.Linear),this._interpolationFunction=e,this},// eslint-disable-next-line
e.prototype.chain=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this._chainedTweens=e,this},e.prototype.onStart=function(e){return this._onStartCallback=e,this},e.prototype.onEveryStart=function(e){return this._onEveryStartCallback=e,this},e.prototype.onUpdate=function(e){return this._onUpdateCallback=e,this},e.prototype.onRepeat=function(e){return this._onRepeatCallback=e,this},e.prototype.onComplete=function(e){return this._onCompleteCallback=e,this},e.prototype.onStop=function(e){return this._onStopCallback=e,this},/**
     * @returns true if the tween is still playing after the update, false
     * otherwise (calling update on a paused tween still returns true because
     * it is still playing, just paused).
     */e.prototype.update=function(e,t){if(void 0===e&&(e=a()),void 0===t&&(t=!0),this._isPaused)return!0;var n,r,i=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(e>i)return!1;t&&this.start(e,!0)}if(this._goToEnd=!1,e<this._startTime)return!0;!1===this._onStartCallbackFired&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),!1===this._onEveryStartCallbackFired&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0),r=(e-this._startTime)/this._duration,r=0===this._duration||r>1?1:r;var o=this._easingFunction(r);if(// properties transformations
this._updateProperties(this._object,this._valuesStart,this._valuesEnd,o),this._onUpdateCallback&&this._onUpdateCallback(this._object,r),1===r){if(this._repeat>0){// Reassign starting values, restart by making startTime = now
for(n in isFinite(this._repeat)&&this._repeat--,this._valuesStartRepeat)this._yoyo||"string"!=typeof this._valuesEnd[n]||(this._valuesStartRepeat[n]=// @ts-ignore FIXME?
this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];this._yoyo&&(this._reversed=!this._reversed),void 0!==this._repeatDelayTime?this._startTime=e+this._repeatDelayTime:this._startTime=e+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var s=0,A=this._chainedTweens.length;s<A;s++)// even if the `update()` method was called way past the duration of the tween
this._chainedTweens[s].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}}return!0},e.prototype._updateProperties=function(e,t,n,r){for(var i in n)// Don't update properties that do not exist in the source object
if(void 0!==t[i]){var a=t[i]||0,o=n[i],s=Array.isArray(e[i]),A=Array.isArray(o);!s&&A?e[i]=this._interpolationFunction(o,r):"object"==typeof o&&o?// @ts-ignore FIXME?
this._updateProperties(e[i],a,o,r):"number"==typeof// Parses relative end values with start as base (e.g.: +10, -3)
(o=this._handleRelativeValue(a,o))&&// @ts-ignore FIXME?
(e[i]=a+(o-a)*r)}},e.prototype._handleRelativeValue=function(e,t){return"string"!=typeof t?t:"+"===t.charAt(0)||"-"===t.charAt(0)?e+parseFloat(t):parseFloat(t)},e.prototype._swapEndStartRepeatValues=function(e){var t=this._valuesStartRepeat[e],n=this._valuesEnd[e];"string"==typeof n?this._valuesStartRepeat[e]=this._valuesStartRepeat[e]+parseFloat(n):this._valuesStartRepeat[e]=this._valuesEnd[e],this._valuesEnd[e]=t},e}(),c=(A.nextId,l.getAll.bind(l),l.removeAll.bind(l),l.add.bind(l),l.remove.bind(l),l.update.bind(l))}),q("bYoiY",function(e,n){t(e.exports,"Color",()=>i),t(e.exports,"darker",()=>a),t(e.exports,"brighter",()=>o),t(e.exports,"default",()=>y),t(e.exports,"hslConvert",()=>D),t(e.exports,"Rgb",()=>E),t(e.exports,"rgbConvert",()=>M),t(e.exports,"rgb",()=>w),t(e.exports,"hsl",()=>O);var r=I("bfWFq");function i(){}var a=.7,o=1.4285714285714286,s="\\s*([+-]?\\d+)\\s*",A="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",l="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",u=/^#([0-9a-f]{3,8})$/,c=RegExp(`^rgb\\(${s},${s},${s}\\)$`),h=RegExp(`^rgb\\(${l},${l},${l}\\)$`),d=RegExp(`^rgba\\(${s},${s},${s},${A}\\)$`),f=RegExp(`^rgba\\(${l},${l},${l},${A}\\)$`),p=RegExp(`^hsl\\(${A},${l},${l}\\)$`),m=RegExp(`^hsla\\(${A},${l},${l},${A}\\)$`),g={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function v(){return this.rgb().formatHex()}function _(){return this.rgb().formatRgb()}function y(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=u.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?x(t)// #ff0000
:3===n?new E(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1)// #f00
:8===n?b(t>>24&255,t>>16&255,t>>8&255,(255&t)/255)// #ff000000
:4===n?b(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255)// #f000
:null// invalid hex
):(t=c.exec(e))?new E(t[1],t[2],t[3],1)// rgb(255, 0, 0)
:(t=h.exec(e))?new E(255*t[1]/100,255*t[2]/100,255*t[3]/100,1)// rgb(100%, 0%, 0%)
:(t=d.exec(e))?b(t[1],t[2],t[3],t[4])// rgba(255, 0, 0, 1)
:(t=f.exec(e))?b(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4])// rgb(100%, 0%, 0%, 1)
:(t=p.exec(e))?L(t[1],t[2]/100,t[3]/100,1)// hsl(120, 50%, 50%)
:(t=m.exec(e))?L(t[1],t[2]/100,t[3]/100,t[4])// hsla(120, 50%, 50%, 1)
:g.hasOwnProperty(e)?x(g[e])// eslint-disable-line no-prototype-builtins
:"transparent"===e?new E(NaN,NaN,NaN,0):null}function x(e){return new E(e>>16&255,e>>8&255,255&e,1)}function b(e,t,n,r){return r<=0&&(e=t=n=NaN),new E(e,t,n,r)}function M(e){return(e instanceof i||(e=y(e)),e)?new E((e=e.rgb()).r,e.g,e.b,e.opacity):new E}function w(e,t,n,r){return 1==arguments.length?M(e):new E(e,t,n,null==r?1:r)}function E(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function S(){return`#${P(this.r)}${P(this.g)}${P(this.b)}`}function T(){let e=C(this.opacity);return`${1===e?"rgb(":"rgba("}${R(this.r)}, ${R(this.g)}, ${R(this.b)}${1===e?")":`, ${e})`}`}function C(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function R(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function P(e){return((e=R(e))<16?"0":"")+e.toString(16)}function L(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new q(e,t,n,r)}function D(e){if(e instanceof q)return new q(e.h,e.s,e.l,e.opacity);if(e instanceof i||(e=y(e)),!e)return new q;if(e instanceof q)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,a=Math.min(t,n,r),o=Math.max(t,n,r),s=NaN,A=o-a,l=(o+a)/2;return A?(s=t===o?(n-r)/A+(n<r)*6:n===o?(r-t)/A+2:(t-n)/A+4,A/=l<.5?o+a:2-o-a,s*=60):A=l>0&&l<1?0:s,new q(s,A,l,e.opacity)}function O(e,t,n,r){return 1==arguments.length?D(e):new q(e,t,n,null==r?1:r)}function q(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function U(e){return(e=(e||0)%360)<0?e+360:e}function N(e){return Math.max(0,Math.min(1,e||0))}/* From FvD 13.37, CSS Color Module Level 3 */function B(e,t,n){return(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)*255}(0,r.default)(i,y,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:v,formatHex:v,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return D(this).formatHsl()},formatRgb:_,toString:_}),(0,r.default)(E,w,(0,r.extend)(i,{brighter(e){return e=null==e?o:Math.pow(o,e),new E(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=null==e?a:Math.pow(a,e),new E(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new E(R(this.r),R(this.g),R(this.b),C(this.opacity))},displayable(){return -.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:S,formatHex:S,formatHex8:function(){return`#${P(this.r)}${P(this.g)}${P(this.b)}${P((isNaN(this.opacity)?1:this.opacity)*255)}`},formatRgb:T,toString:T})),(0,r.default)(q,O,(0,r.extend)(i,{brighter(e){return e=null==e?o:Math.pow(o,e),new q(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=null==e?a:Math.pow(a,e),new q(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+(this.h<0)*360,t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,i=2*n-r;return new E(B(e>=240?e-240:e+120,i,r),B(e,i,r),B(e<120?e+240:e-120,i,r),this.opacity)},clamp(){return new q(U(this.h),N(this.s),N(this.l),C(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){let e=C(this.opacity);return`${1===e?"hsl(":"hsla("}${U(this.h)}, ${100*N(this.s)}%, ${100*N(this.l)}%${1===e?")":`, ${e})`}`}}))}),q("bfWFq",function(e,n){function r(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function i(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}t(e.exports,"default",()=>r),t(e.exports,"extend",()=>i)});const U={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},N={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},B="srgb",k="srgb-linear",F="display-p3",z="display-p3-linear",G="linear",H="srgb",V="rec709",j="300 es";/**
 * https://github.com/mrdoob/eventdispatcher.js/
 */class W{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let n=this._listeners,r=n[e];if(void 0!==r){let e=r.indexOf(t);-1!==e&&r.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners,n=t[e.type];if(void 0!==n){e.target=this;// Make a copy, in case listeners are removed while iterating.
let t=n.slice(0);for(let n=0,r=t.length;n<r;n++)t[n].call(this,e);e.target=null}}}const X=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Q=1234567;const Y=Math.PI/180,Z=180/Math.PI;// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
function K(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=X[255&e]+X[e>>8&255]+X[e>>16&255]+X[e>>24&255]+"-"+X[255&t]+X[t>>8&255]+"-"+X[t>>16&15|64]+X[t>>24&255]+"-"+X[63&n|128]+X[n>>8&255]+"-"+X[n>>16&255]+X[n>>24&255]+X[255&r]+X[r>>8&255]+X[r>>16&255]+X[r>>24&255];// .toLowerCase() here flattens concatenated strings to save heap memory space.
return i.toLowerCase()}function J(e,t,n){return Math.max(t,Math.min(n,e))}// compute euclidean modulo of m % n
// https://en.wikipedia.org/wiki/Modulo_operation
function $(e,t){return(e%t+t)%t}// https://en.wikipedia.org/wiki/Linear_interpolation
function ee(e,t,n){return(1-n)*e+n*t}function et(e){return(e&e-1)==0&&0!==e}function en(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function er(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function ei(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}const ea={DEG2RAD:Y,RAD2DEG:Z,generateUUID:K,clamp:J,euclideanModulo:$,mapLinear:// Linear mapping from range <a1, a2> to range <b1, b2>
function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},inverseLerp:// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/
function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:ee,damp:// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/
function(e,t,n,r){return ee(e,t,1-Math.exp(-n*r))},pingpong:// https://www.desmos.com/calculator/vcsjnyz7x4
function(e,t=1){return t-Math.abs($(e,2*t)-t)},smoothstep:// http://en.wikipedia.org/wiki/Smoothstep
function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:// Random integer from <low, high> interval
function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:// Random float from <low, high> interval
function(e,t){return e+Math.random()*(t-e)},randFloatSpread:// Random float from <-range/2, range/2> interval
function(e){return e*(.5-Math.random())},seededRandom:// Deterministic pseudo-random float in the interval [ 0, 1 ]
function(e){void 0!==e&&(Q=e);// Mulberry32 generator
let t=Q+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*Y},radToDeg:function(e){return e*Z},isPowerOfTwo:et,ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:en,setQuaternionFromProperEuler:function(e,t,n,r,i){// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles
// rotations are applied to the axes in the order specified by 'order'
// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'
// angles are in radians
let a=Math.cos,o=Math.sin,s=a(n/2),A=o(n/2),l=a((t+r)/2),u=o((t+r)/2),c=a((t-r)/2),h=o((t-r)/2),d=a((r-t)/2),f=o((r-t)/2);switch(i){case"XYX":e.set(s*u,A*c,A*h,s*l);break;case"YZY":e.set(A*h,s*u,A*c,s*l);break;case"ZXZ":e.set(A*c,A*h,s*u,s*l);break;case"XZX":e.set(s*u,A*f,A*d,s*l);break;case"YXY":e.set(A*d,s*u,A*f,s*l);break;case"ZYZ":e.set(A*f,A*d,s*u,s*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}},normalize:ei,denormalize:er};class eo{constructor(e=0,t=0){eo.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return(// assumes min < max, componentwise
this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this)}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){// computes the angle in radians with respect to the positive x-axis
let e=Math.atan2(-this.y,-this.x)+Math.PI;return e}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let n=this.dot(e)/t;// clamp, to handle numerical problems
return Math.acos(J(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class es{constructor(e,t,n,r,i,a,o,s,A){es.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,n,r,i,a,o,s,A)}set(e,t,n,r,i,a,o,s,A){let l=this.elements;return l[0]=e,l[1]=r,l[2]=o,l[3]=t,l[4]=i,l[5]=s,l[6]=n,l[7]=a,l[8]=A,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[3],s=n[6],A=n[1],l=n[4],u=n[7],c=n[2],h=n[5],d=n[8],f=r[0],p=r[3],m=r[6],g=r[1],v=r[4],_=r[7],y=r[2],x=r[5],b=r[8];return i[0]=a*f+o*g+s*y,i[3]=a*p+o*v+s*x,i[6]=a*m+o*_+s*b,i[1]=A*f+l*g+u*y,i[4]=A*p+l*v+u*x,i[7]=A*m+l*_+u*b,i[2]=c*f+h*g+d*y,i[5]=c*p+h*v+d*x,i[8]=c*m+h*_+d*b,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],A=e[7],l=e[8];return t*a*l-t*o*A-n*i*l+n*o*s+r*i*A-r*a*s}invert(){let e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],A=e[7],l=e[8],u=l*a-o*A,c=o*s-l*i,h=A*i-a*s,d=t*u+n*c+r*h;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);let f=1/d;return e[0]=u*f,e[1]=(r*A-l*n)*f,e[2]=(o*n-r*a)*f,e[3]=c*f,e[4]=(l*t-r*s)*f,e[5]=(r*i-o*t)*f,e[6]=h*f,e[7]=(n*s-A*t)*f,e[8]=(a*t-n*i)*f,this}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,a,o){let s=Math.cos(i),A=Math.sin(i);return this.set(n*s,n*A,-n*(s*a+A*o)+a+e,-r*A,r*s,-r*(-A*a+s*o)+o+t,0,0,1),this}//
scale(e,t){return this.premultiply(eA.makeScale(e,t)),this}rotate(e){return this.premultiply(eA.makeRotation(-e)),this}translate(e,t){return this.premultiply(eA.makeTranslation(e,t)),this}// for 2D Transforms
makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){// counterclockwise
let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}//
equals(e){let t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const eA=/*@__PURE__*/new es;function el(e){// assumes larger values usually on last
for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;// account for PRIMITIVE_RESTART_FIXED_INDEX, #24565
return!1}function eu(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const ec={};function eh(e){e in ec||(ec[e]=!0,console.warn(e))}/**
 * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping
 * or clipping. Based on W3C specifications for sRGB and Display P3,
 * and ICC specifications for the D50 connection space. Values in/out
 * are _linear_ sRGB and _linear_ Display P3.
 *
 * Note that both sRGB and Display P3 use the sRGB transfer functions.
 *
 * Reference:
 * - http://www.russellcottrell.com/photo/matrixCalculator.htm
 */const ed=/*@__PURE__*/new es().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),ef=/*@__PURE__*/new es().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),ep={[k]:{transfer:G,primaries:V,toReference:e=>e,fromReference:e=>e},[B]:{transfer:H,primaries:V,toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[z]:{transfer:G,primaries:"p3",toReference:e=>e.applyMatrix3(ef),fromReference:e=>e.applyMatrix3(ed)},[F]:{transfer:H,primaries:"p3",toReference:e=>e.convertSRGBToLinear().applyMatrix3(ef),fromReference:e=>e.applyMatrix3(ed).convertLinearToSRGB()}},em=new Set([k,z]),eg={enabled:!0,_workingColorSpace:k,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(legacyMode){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!legacyMode},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(colorSpace){if(!em.has(colorSpace))throw Error(`Unsupported working color space, "${colorSpace}".`);this._workingColorSpace=colorSpace},convert:function(e,t,n){if(!1===this.enabled||t===n||!t||!n)return e;let r=ep[t].toReference,i=ep[n].fromReference;return i(r(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return ep[e].primaries},getTransfer:function(e){return""===e?G:ep[e].transfer}};function ev(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function e_(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class ey{static getDataURL(t){let n;if(/^data:/i.test(t.src)||"undefined"==typeof HTMLCanvasElement)return t.src;if(t instanceof HTMLCanvasElement)n=t;else{void 0===e&&(e=eu("canvas")),e.width=t.width,e.height=t.height;let r=e.getContext("2d");t instanceof ImageData?r.putImageData(t,0,0):r.drawImage(t,0,0,t.width,t.height),n=e}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=eu("canvas");t.width=e.width,t.height=e.height;let n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);let r=n.getImageData(0,0,e.width,e.height),i=r.data;for(let e=0;e<i.length;e++)i[e]=255*ev(i[e]/255);return n.putImageData(r,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*ev(t[e]/255)):t[e]=ev(t[e]);return{data:t,width:e.width,height:e.height}}}}let ex=0;class eb{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:ex++}),this.uuid=K(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let e;if(Array.isArray(r)){// cube texture
e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(eM(r[t].image)):e.push(eM(r[t]))}else e=eM(r);n.url=e}return t||(e.images[this.uuid]=n),n}}function eM(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?ey.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ew=0;class eE extends W{constructor(e=eE.DEFAULT_IMAGE,t=eE.DEFAULT_MAPPING,n=1001,r=1001,i=1006,a=1008,o=1023,s=1009,A=eE.DEFAULT_ANISOTROPY,l=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ew++}),this.uuid=K(),this.name="",this.source=new eb(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=A,this.format=o,this.internalFormat=null,this.type=s,this.offset=new eo(0,0),this.repeat=new eo(1,1),this.center=new eo(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new es,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof l?this.colorSpace=l:(eh("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=3001===l?B:""),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return eh("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===B?3001:3e3}set encoding(e){eh("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=3001===e?B:""}}eE.DEFAULT_IMAGE=null,eE.DEFAULT_MAPPING=300,eE.DEFAULT_ANISOTROPY=1;class eS{constructor(e=0,t=0,n=0,r=1){eS.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm
// q is assumed to be normalized
this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i;let a=e.elements,o=a[0],s=a[4],A=a[8],l=a[1],u=a[5],c=a[9],h=a[2],d=a[6],f=a[10];if(.01>Math.abs(s-l)&&.01>Math.abs(A-h)&&.01>Math.abs(c-d)){// singularity found
// first check for identity matrix which must have +1 for all terms
// in leading diagonal and zero in other terms
if(.1>Math.abs(s+l)&&.1>Math.abs(A+h)&&.1>Math.abs(c+d)&&.1>Math.abs(o+u+f-3))return(// this singularity is identity matrix so angle = 0
this.set(1,0,0,0),this);// zero angle, arbitrary axis
// otherwise this singularity is angle = 180
t=Math.PI;let e=(o+1)/2,a=(u+1)/2,p=(f+1)/2,m=(s+l)/4,g=(A+h)/4,v=(c+d)/4;return e>a&&e>p?e<.01?(n=0,r=.707106781,i=.707106781):(r=m/(n=Math.sqrt(e)),i=g/n):a>p?a<.01?(n=.707106781,r=0,i=.707106781):(n=m/(r=Math.sqrt(a)),i=v/r):p<.01?(n=.707106781,r=.707106781,i=0):(n=g/(i=Math.sqrt(p)),r=v/i),this.set(n,r,i,t),this;// return 180 deg rotation
}// as we have reached here there are no singularities so we can handle normally
let p=Math.sqrt((d-c)*(d-c)+(A-h)*(A-h)+(l-s)*(l-s));// used to normalize
return .001>Math.abs(p)&&(p=1),// prevent divide by zero, should not happen if matrix is orthogonal and should be
// caught by singularity test above, but I've left it in just in case
this.x=(d-c)/p,this.y=(A-h)/p,this.z=(l-s)/p,this.w=Math.acos((o+u+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return(// assumes min < max, componentwise
this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this)}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}/*
 In options, we can specify:
 * Texture parameters for an auto-generated target texture
 * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
*/class eT extends W{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new eS(0,0,e,t),this.scissorTest=!1,this.viewport=new eS(0,0,e,t),void 0!==n.encoding&&(// @deprecated, r152
eh("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=3001===n.encoding?B:""),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:1006,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new eE({width:e,height:t,depth:1},n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;// ensure image object is not shared, see #20328
let t=Object.assign({},e.texture.image);return this.texture.source=new eb(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class eC extends eT{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class eR extends eE{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class eP{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,i,a,o){// fuzz-free, array-based Quaternion SLERP operation
let s=n[r+0],A=n[r+1],l=n[r+2],u=n[r+3],c=i[a+0],h=i[a+1],d=i[a+2],f=i[a+3];if(0===o){e[t+0]=s,e[t+1]=A,e[t+2]=l,e[t+3]=u;return}if(1===o){e[t+0]=c,e[t+1]=h,e[t+2]=d,e[t+3]=f;return}if(u!==f||s!==c||A!==h||l!==d){let e=1-o,t=s*c+A*h+l*d+u*f,n=t>=0?1:-1,r=1-t*t;// Skip the Slerp for tiny steps to avoid numeric problems:
if(r>Number.EPSILON){let i=Math.sqrt(r),a=Math.atan2(i,t*n);e=Math.sin(e*a)/i,o=Math.sin(o*a)/i}let i=o*n;// Normalize in case we just did a lerp:
if(s=s*e+c*i,A=A*e+h*i,l=l*e+d*i,u=u*e+f*i,e===1-o){let e=1/Math.sqrt(s*s+A*A+l*l+u*u);s*=e,A*=e,l*=e,u*=e}}e[t]=s,e[t+1]=A,e[t+2]=l,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,r,i,a){let o=n[r],s=n[r+1],A=n[r+2],l=n[r+3],u=i[a],c=i[a+1],h=i[a+2],d=i[a+3];return e[t]=o*d+l*u+s*h-A*c,e[t+1]=s*d+l*c+A*u-o*h,e[t+2]=A*d+l*h+o*c-s*u,e[t+3]=l*d-o*u-s*c-A*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){let n=e._x,r=e._y,i=e._z,a=e._order,o=Math.cos,s=Math.sin,A=o(n/2),l=o(r/2),u=o(i/2),c=s(n/2),h=s(r/2),d=s(i/2);switch(a){case"XYZ":this._x=c*l*u+A*h*d,this._y=A*h*u-c*l*d,this._z=A*l*d+c*h*u,this._w=A*l*u-c*h*d;break;case"YXZ":this._x=c*l*u+A*h*d,this._y=A*h*u-c*l*d,this._z=A*l*d-c*h*u,this._w=A*l*u+c*h*d;break;case"ZXY":this._x=c*l*u-A*h*d,this._y=A*h*u+c*l*d,this._z=A*l*d+c*h*u,this._w=A*l*u-c*h*d;break;case"ZYX":this._x=c*l*u-A*h*d,this._y=A*h*u+c*l*d,this._z=A*l*d-c*h*u,this._w=A*l*u+c*h*d;break;case"YZX":this._x=c*l*u+A*h*d,this._y=A*h*u+c*l*d,this._z=A*l*d-c*h*u,this._w=A*l*u-c*h*d;break;case"XZY":this._x=c*l*u-A*h*d,this._y=A*h*u-c*l*d,this._z=A*l*d+c*h*u,this._w=A*l*u+c*h*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm
// assumes axis is normalized
let n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
let t=e.elements,n=t[0],r=t[4],i=t[8],a=t[1],o=t[5],s=t[9],A=t[2],l=t[6],u=t[10],c=n+o+u;if(c>0){let e=.5/Math.sqrt(c+1);this._w=.25/e,this._x=(l-s)*e,this._y=(i-A)*e,this._z=(a-r)*e}else if(n>o&&n>u){let e=2*Math.sqrt(1+n-o-u);this._w=(l-s)/e,this._x=.25*e,this._y=(r+a)/e,this._z=(i+A)/e}else if(o>u){let e=2*Math.sqrt(1+o-n-u);this._w=(i-A)/e,this._x=(r+a)/e,this._y=.25*e,this._z=(s+l)/e}else{let e=2*Math.sqrt(1+u-n-o);this._w=(a-r)/e,this._x=(i+A)/e,this._y=(s+l)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){// assumes direction vectors vFrom and vTo are normalized
let n=e.dot(t)+1;return n<Number.EPSILON?(// vFrom and vTo point in opposite directions
n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3
this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=n,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(J(this.dot(e),-1,1)))}rotateTowards(e,t){let n=this.angleTo(e);if(0===n)return this;let r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){// quaternion is assumed to have unit length
return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm
let n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,A=t._z,l=t._w;return this._x=n*l+a*o+r*A-i*s,this._y=r*l+a*s+i*o-n*A,this._z=i*l+a*A+n*s-r*o,this._w=a*l-n*o-r*s-i*A,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let n=this._x,r=this._y,i=this._z,a=this._w,o=a*e._w+n*e._x+r*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;let s=1-o*o;if(s<=Number.EPSILON){let e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*r+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}let A=Math.sqrt(s),l=Math.atan2(A,o),u=Math.sin((1-t)*l)/A,c=Math.sin(t*l)/A;return this._w=a*u+this._w*c,this._x=n*u+this._x*c,this._y=r*u+this._y*c,this._z=i*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){// Derived from http://planning.cs.uiuc.edu/node198.html
// Note, this source uses w, x, y, z ordering,
// so we swap the order below.
let e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(i),n*Math.cos(i),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class eL{constructor(e=0,t=0,n=0){eL.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(eO.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(eO.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this}applyQuaternion(e){// quaternion q is assumed to have unit length
let t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,A=2*(a*r-o*n),l=2*(o*t-i*r),u=2*(i*n-a*t);return(// v + q.w * t + cross( q.xyz, t );
this.x=t+s*A+a*u-o*l,this.y=n+s*l+o*A-i*u,this.z=r+s*u+i*l-a*A,this)}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){// input: THREE.Matrix4 affine matrix
// vector interpreted as a direction
let t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return(// assumes min < max, componentwise
this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this)}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}// TODO lengthSquared?
lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return eD.copy(this).projectOnVector(e),this.sub(eD)}reflect(e){// reflect incident vector off plane orthogonal to normal
// normal is assumed to have unit length
return this.sub(eD.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let n=this.dot(e)/t;// clamp, to handle numerical problems
return Math.acos(J(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){let r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){// Derived from https://mathworld.wolfram.com/SpherePointPicking.html
let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const eD=/*@__PURE__*/new eL,eO=/*@__PURE__*/new eP;class eI{constructor(e=new eL(1/0,1/0,1/0),t=new eL(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(eU.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(eU.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let n=eU.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes
return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){// Computes the world-axis-aligned bounding box of an object (including its children),
// accounting for both the object's, and children's, world transforms
e.updateWorldMatrix(!1,!1);let n=e.geometry;if(void 0!==n){let r=n.getAttribute("position");// precise AABB computation based on vertex data requires at least a position attribute.
// instancing isn't supported so far and uses the normal (conservative) code path.
if(!0===t&&void 0!==r&&!0!==e.isInstancedMesh)for(let t=0,n=r.count;t<n;t++)!0===e.isMesh?e.getVertexPosition(t,eU):eU.fromBufferAttribute(r,t),eU.applyMatrix4(e.matrixWorld),this.expandByPoint(eU);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),eN.copy(e.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),eN.copy(n.boundingBox)),eN.applyMatrix4(e.matrixWorld),this.union(eN)}let r=e.children;for(let e=0,n=r.length;e<n;e++)this.expandByObject(r[e],t);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){// This can potentially have a divide by zero if the box
// has a size dimension of 0.
return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){// using 6 splitting planes to rule out intersections.
return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){// If that point is inside the sphere, the AABB and sphere intersect.
return(// Find the point on the AABB closest to the sphere center.
this.clampPoint(e.center,eU),eU.distanceToSquared(e.center)<=e.radius*e.radius)}intersectsPlane(e){// We compute the minimum and maximum dot product values. If those values
// are on the same side (back or front) of the plane, then there is no intersection.
let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;// compute box center and extents
this.getCenter(eV),ej.subVectors(this.max,eV),// translate triangle to aabb origin
eB.subVectors(e.a,eV),ek.subVectors(e.b,eV),eF.subVectors(e.c,eV),// compute edge vectors for triangle
ez.subVectors(ek,eB),eG.subVectors(eF,ek),eH.subVectors(eB,eF);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb
// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation
// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)
let t=[0,-ez.z,ez.y,0,-eG.z,eG.y,0,-eH.z,eH.y,ez.z,0,-ez.x,eG.z,0,-eG.x,eH.z,0,-eH.x,-ez.y,ez.x,0,-eG.y,eG.x,0,-eH.y,eH.x,0];return!!(eQ(t,eB,ek,eF,ej)&&eQ(// test 3 face normals from the aabb
t=[1,0,0,0,1,0,0,0,1],eB,ek,eF,ej))&&(// finally testing the face normal of the triangle
// use already existing triangle edge vectors here
eW.crossVectors(ez,eG),eQ(t=[eW.x,eW.y,eW.z],eB,ek,eF,ej))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,eU).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(eU).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(// NOTE: I am using a binary pattern to specify all 2^3 combinations below
eq[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),eq[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),eq[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),eq[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),eq[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),eq[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),eq[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),eq[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(eq)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const eq=[/*@__PURE__*/new eL,/*@__PURE__*/new eL,/*@__PURE__*/new eL,/*@__PURE__*/new eL,/*@__PURE__*/new eL,/*@__PURE__*/new eL,/*@__PURE__*/new eL,/*@__PURE__*/new eL],eU=/*@__PURE__*/new eL,eN=/*@__PURE__*/new eI,eB=/*@__PURE__*/new eL,ek=/*@__PURE__*/new eL,eF=/*@__PURE__*/new eL,ez=/*@__PURE__*/new eL,eG=/*@__PURE__*/new eL,eH=/*@__PURE__*/new eL,eV=/*@__PURE__*/new eL,ej=/*@__PURE__*/new eL,eW=/*@__PURE__*/new eL,eX=/*@__PURE__*/new eL;function eQ(e,t,n,r,i){for(let a=0,o=e.length-3;a<=o;a+=3){eX.fromArray(e,a);// project the aabb onto the separating axis
let o=i.x*Math.abs(eX.x)+i.y*Math.abs(eX.y)+i.z*Math.abs(eX.z),s=t.dot(eX),A=n.dot(eX),l=r.dot(eX);// actual test, basically see if either of the most extreme of the triangle points intersects r
if(Math.max(-Math.max(s,A,l),Math.min(s,A,l))>o)// the axis is separating and we can exit
return!1}return!0}const eY=/*@__PURE__*/new eI,eZ=/*@__PURE__*/new eL,eK=/*@__PURE__*/new eL;class eJ{constructor(e=new eL,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let n=this.center;void 0!==t?n.copy(t):eY.setFromPoints(e).getCenter(n);let r=0;for(let t=0,i=e.length;t<i;t++)r=Math.max(r,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?// Empty sphere produces empty bounding box
e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;eZ.subVectors(e,this.center);let t=eZ.lengthSq();if(t>this.radius*this.radius){// calculate the minimal sphere
let e=Math.sqrt(t),n=(e-this.radius)*.5;this.center.addScaledVector(eZ,n/e),this.radius+=n}return this}union(e){return e.isEmpty()||(this.isEmpty()?this.copy(e):!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(eK.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(eZ.copy(e.center).add(eK)),this.expandByPoint(eZ.copy(e.center).sub(eK)))),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const e$=/*@__PURE__*/new eL,e0=/*@__PURE__*/new eL,e1=/*@__PURE__*/new eL,e2=/*@__PURE__*/new eL,e3=/*@__PURE__*/new eL,e4=/*@__PURE__*/new eL,e5=/*@__PURE__*/new eL;class e6{constructor(e=new eL,t=new eL(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,e$)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=e$.subVectors(e,this.origin).dot(this.direction);return(// point behind the ray
t<0?this.origin.distanceToSquared(e):(e$.copy(this.origin).addScaledVector(this.direction,t),e$.distanceToSquared(e)))}distanceSqToSegment(e,t,n,r){let i,a,o,s;// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h
// It returns the min distance between the ray and the segment
// defined by v0 and v1
// It can also set two optional targets :
// - The closest point on the ray
// - The closest point on the segment
e0.copy(e).add(t).multiplyScalar(.5),e1.copy(t).sub(e).normalize(),e2.copy(this.origin).sub(e0);let A=.5*e.distanceTo(t),l=-this.direction.dot(e1),u=e2.dot(this.direction),c=-e2.dot(e1),h=e2.lengthSq(),d=Math.abs(1-l*l);if(d>0){if(// The ray and segment are not parallel.
i=l*c-u,a=l*u-c,s=A*d,i>=0){if(a>=-s){if(a<=s){// region 0
// Minimum at interior points of ray and segment.
let e=1/d;i*=e,a*=e,o=i*(i+l*a+2*u)+a*(l*i+a+2*c)+h}else o=-(i=Math.max(0,-(l*// region 1
(a=A)+u)))*i+a*(a+2*c)+h}else o=-(i=Math.max(0,-(l*// region 5
(a=-A)+u)))*i+a*(a+2*c)+h}else a<=-s?(a=// region 4
(i=Math.max(0,-(-l*A+u)))>0?-A:Math.min(Math.max(-A,-c),A),o=-i*i+a*(a+2*c)+h):a<=s?(// region 3
i=0,o=(a=Math.min(Math.max(-A,-c),A))*(a+2*c)+h):(a=// region 2
(i=Math.max(0,-(l*A+u)))>0?A:Math.min(Math.max(-A,-c),A),o=-i*i+a*(a+2*c)+h)}else // Ray and segment are parallel.
a=l>0?-A:A,o=-(i=Math.max(0,-(l*a+u)))*i+a*(a+2*c)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,i),r&&r.copy(e0).addScaledVector(e1,a),o}intersectSphere(e,t){e$.subVectors(e.center,this.origin);let n=e$.dot(this.direction),r=e$.dot(e$)-n*n,i=e.radius*e.radius;if(r>i)return null;let a=Math.sqrt(i-r),o=n-a,s=n+a;return(// test to see if t1 is behind the ray - if so, return null
s<0?null:o<0?this.at(s,t):this.at(o,t))}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return(// line is coplanar, return origin
0===e.distanceToPoint(this.origin)?0:null);let n=-(this.origin.dot(e.normal)+e.constant)/t;// Return if the ray never intersects the plane
return n>=0?n:null}intersectPlane(e,t){let n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){// check if the ray lies on the plane first
let t=e.distanceToPoint(this.origin);if(0===t)return!0;let n=e.normal.dot(this.direction);return n*t<0}intersectBox(e,t){let n,r,i,a,o,s;let A=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,c=this.origin;return(A>=0?(n=(e.min.x-c.x)*A,r=(e.max.x-c.x)*A):(n=(e.max.x-c.x)*A,r=(e.min.x-c.x)*A),l>=0?(i=(e.min.y-c.y)*l,a=(e.max.y-c.y)*l):(i=(e.max.y-c.y)*l,a=(e.min.y-c.y)*l),n>a||i>r)?null:((i>n||isNaN(n))&&(n=i),(a<r||isNaN(r))&&(r=a),u>=0?(o=(e.min.z-c.z)*u,s=(e.max.z-c.z)*u):(o=(e.max.z-c.z)*u,s=(e.min.z-c.z)*u),n>s||o>r)?null:((o>n||n!=n)&&(n=o),(s<r||r!=r)&&(r=s),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return null!==this.intersectBox(e,e$)}intersectTriangle(e,t,n,r,i){let a;// Compute the offset origin, edges, and normal.
// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h
e3.subVectors(t,e),e4.subVectors(n,e),e5.crossVectors(e3,e4);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
let o=this.direction.dot(e5);if(o>0){if(r)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}e2.subVectors(this.origin,e);let s=a*this.direction.dot(e4.crossVectors(e2,e4));// b1 < 0, no intersection
if(s<0)return null;let A=a*this.direction.dot(e3.cross(e2));// b2 < 0, no intersection
if(A<0||s+A>o)return null;// Line intersects triangle, check if ray does.
let l=-a*e2.dot(e5);return(// t < 0, no intersection
l<0?null:this.at(l/o,i))}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class e8{constructor(e,t,n,r,i,a,o,s,A,l,u,c,h,d,f,p){e8.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,n,r,i,a,o,s,A,l,u,c,h,d,f,p)}set(e,t,n,r,i,a,o,s,A,l,u,c,h,d,f,p){let m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=r,m[1]=i,m[5]=a,m[9]=o,m[13]=s,m[2]=A,m[6]=l,m[10]=u,m[14]=c,m[3]=h,m[7]=d,m[11]=f,m[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new e8().fromArray(this.elements)}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){let t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){// this method does not support reflection matrices
let t=this.elements,n=e.elements,r=1/e7.setFromMatrixColumn(e,0).length(),i=1/e7.setFromMatrixColumn(e,1).length(),a=1/e7.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),A=Math.sin(r),l=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){let e=a*l,n=a*u,r=o*l,i=o*u;t[0]=s*l,t[4]=-s*u,t[8]=A,t[1]=n+r*A,t[5]=e-i*A,t[9]=-o*s,t[2]=i-e*A,t[6]=r+n*A,t[10]=a*s}else if("YXZ"===e.order){let e=s*l,n=s*u,r=A*l,i=A*u;t[0]=e+i*o,t[4]=r*o-n,t[8]=a*A,t[1]=a*u,t[5]=a*l,t[9]=-o,t[2]=n*o-r,t[6]=i+e*o,t[10]=a*s}else if("ZXY"===e.order){let e=s*l,n=s*u,r=A*l,i=A*u;t[0]=e-i*o,t[4]=-a*u,t[8]=r+n*o,t[1]=n+r*o,t[5]=a*l,t[9]=i-e*o,t[2]=-a*A,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){let e=a*l,n=a*u,r=o*l,i=o*u;t[0]=s*l,t[4]=r*A-n,t[8]=e*A+i,t[1]=s*u,t[5]=i*A+e,t[9]=n*A-r,t[2]=-A,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){let e=a*s,n=a*A,r=o*s,i=o*A;t[0]=s*l,t[4]=i-e*u,t[8]=r*u+n,t[1]=u,t[5]=a*l,t[9]=-o*l,t[2]=-A*l,t[6]=n*u+r,t[10]=e-i*u}else if("XZY"===e.order){let e=a*s,n=a*A,r=o*s,i=o*A;t[0]=s*l,t[4]=-u,t[8]=A*l,t[1]=e*u+i,t[5]=a*l,t[9]=n*u-r,t[2]=r*u-n,t[6]=o*l,t[10]=i*u+e}return(// bottom row
t[3]=0,t[7]=0,t[11]=0,// last column
t[12]=0,t[13]=0,t[14]=0,t[15]=1,this)}makeRotationFromQuaternion(e){return this.compose(te,e,tt)}lookAt(e,t,n){let r=this.elements;return ti.subVectors(e,t),0===ti.lengthSq()&&(ti.z=1),ti.normalize(),tn.crossVectors(n,ti),0===tn.lengthSq()&&(1===Math.abs(n.z)?ti.x+=1e-4:ti.z+=1e-4,ti.normalize(),tn.crossVectors(n,ti)),tn.normalize(),tr.crossVectors(ti,tn),r[0]=tn.x,r[4]=tr.x,r[8]=ti.x,r[1]=tn.y,r[5]=tr.y,r[9]=ti.y,r[2]=tn.z,r[6]=tr.z,r[10]=ti.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],A=n[12],l=n[1],u=n[5],c=n[9],h=n[13],d=n[2],f=n[6],p=n[10],m=n[14],g=n[3],v=n[7],_=n[11],y=n[15],x=r[0],b=r[4],M=r[8],w=r[12],E=r[1],S=r[5],T=r[9],C=r[13],R=r[2],P=r[6],L=r[10],D=r[14],O=r[3],I=r[7],q=r[11],U=r[15];return i[0]=a*x+o*E+s*R+A*O,i[4]=a*b+o*S+s*P+A*I,i[8]=a*M+o*T+s*L+A*q,i[12]=a*w+o*C+s*D+A*U,i[1]=l*x+u*E+c*R+h*O,i[5]=l*b+u*S+c*P+h*I,i[9]=l*M+u*T+c*L+h*q,i[13]=l*w+u*C+c*D+h*U,i[2]=d*x+f*E+p*R+m*O,i[6]=d*b+f*S+p*P+m*I,i[10]=d*M+f*T+p*L+m*q,i[14]=d*w+f*C+p*D+m*U,i[3]=g*x+v*E+_*R+y*O,i[7]=g*b+v*S+_*P+y*I,i[11]=g*M+v*T+_*L+y*q,i[15]=g*w+v*C+_*D+y*U,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],A=e[13],l=e[2],u=e[6],c=e[10],h=e[14],d=e[3],f=e[7],p=e[11],m=e[15];//TODO: make this more efficient
//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )
return d*(+i*s*u-r*A*u-i*o*c+n*A*c+r*o*h-n*s*h)+f*(+t*s*h-t*A*c+i*a*c-r*a*h+r*A*l-i*s*l)+p*(+t*A*u-t*o*h-i*a*u+n*a*h+i*o*l-n*A*l)+m*(-r*o*l-t*s*u+t*o*c+r*a*u-n*a*c+n*s*l)}transpose(){let e;let t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(e,t,n){let r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
let e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],A=e[7],l=e[8],u=e[9],c=e[10],h=e[11],d=e[12],f=e[13],p=e[14],m=e[15],g=u*p*A-f*c*A+f*s*h-o*p*h-u*s*m+o*c*m,v=d*c*A-l*p*A-d*s*h+a*p*h+l*s*m-a*c*m,_=l*f*A-d*u*A+d*o*h-a*f*h-l*o*m+a*u*m,y=d*u*s-l*f*s-d*o*c+a*f*c+l*o*p-a*u*p,x=t*g+n*v+r*_+i*y;if(0===x)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let b=1/x;return e[0]=g*b,e[1]=(f*c*i-u*p*i-f*r*h+n*p*h+u*r*m-n*c*m)*b,e[2]=(o*p*i-f*s*i+f*r*A-n*p*A-o*r*m+n*s*m)*b,e[3]=(u*s*i-o*c*i-u*r*A+n*c*A+o*r*h-n*s*h)*b,e[4]=v*b,e[5]=(l*p*i-d*c*i+d*r*h-t*p*h-l*r*m+t*c*m)*b,e[6]=(d*s*i-a*p*i-d*r*A+t*p*A+a*r*m-t*s*m)*b,e[7]=(a*c*i-l*s*i+l*r*A-t*c*A-a*r*h+t*s*h)*b,e[8]=_*b,e[9]=(d*u*i-l*f*i-d*n*h+t*f*h+l*n*m-t*u*m)*b,e[10]=(a*f*i-d*o*i+d*n*A-t*f*A-a*n*m+t*o*m)*b,e[11]=(l*o*i-a*u*i-l*n*A+t*u*A+a*n*h-t*o*h)*b,e[12]=y*b,e[13]=(l*f*r-d*u*r+d*n*c-t*f*c-l*n*p+t*u*p)*b,e[14]=(d*o*r-a*f*r-d*n*s+t*f*s+a*n*p-t*o*p)*b,e[15]=(a*u*r-l*o*r+l*n*s-t*u*s-a*n*c+t*o*c)*b,this}scale(e){let t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){// Based on http://www.gamedev.net/reference/articles/article1199.asp
let n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,A=i*a,l=i*o;return this.set(A*a+n,A*o-r*s,A*s+r*o,0,A*o+r*s,l*o+n,l*s-r*a,0,A*s-r*o,l*s+r*a,i*s*s+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,i,a){return this.set(1,n,i,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){let r=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,A=i+i,l=a+a,u=o+o,c=i*A,h=i*l,d=i*u,f=a*l,p=a*u,m=o*u,g=s*A,v=s*l,_=s*u,y=n.x,x=n.y,b=n.z;return r[0]=(1-(f+m))*y,r[1]=(h+_)*y,r[2]=(d-v)*y,r[3]=0,r[4]=(h-_)*x,r[5]=(1-(c+m))*x,r[6]=(p+g)*x,r[7]=0,r[8]=(d+v)*b,r[9]=(p-g)*b,r[10]=(1-(c+f))*b,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){let r=this.elements,i=e7.set(r[0],r[1],r[2]).length(),a=e7.set(r[4],r[5],r[6]).length(),o=e7.set(r[8],r[9],r[10]).length(),s=this.determinant();s<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],// scale the rotation part
e9.copy(this);let A=1/i,l=1/a,u=1/o;return e9.elements[0]*=A,e9.elements[1]*=A,e9.elements[2]*=A,e9.elements[4]*=l,e9.elements[5]*=l,e9.elements[6]*=l,e9.elements[8]*=u,e9.elements[9]*=u,e9.elements[10]*=u,t.setFromRotationMatrix(e9),n.x=i,n.y=a,n.z=o,this}makePerspective(e,t,n,r,i,a,o=2e3){let s,A;let l=this.elements;if(2e3===o)s=-(a+i)/(a-i),A=-2*a*i/(a-i);else if(2001===o)s=-a/(a-i),A=-a*i/(a-i);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=2*i/(t-e),l[4]=0,l[8]=(t+e)/(t-e),l[12]=0,l[1]=0,l[5]=2*i/(n-r),l[9]=(n+r)/(n-r),l[13]=0,l[2]=0,l[6]=0,l[10]=s,l[14]=A,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,r,i,a,o=2e3){let s,A;let l=this.elements,u=1/(t-e),c=1/(n-r),h=1/(a-i);if(2e3===o)s=(a+i)*h,A=-2*h;else if(2001===o)s=i*h,A=-1*h;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*u,l[4]=0,l[8]=0,l[12]=-((t+e)*u),l[1]=0,l[5]=2*c,l[9]=0,l[13]=-((n+r)*c),l[2]=0,l[6]=0,l[10]=A,l[14]=-s,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){let t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const e7=/*@__PURE__*/new eL,e9=/*@__PURE__*/new e8,te=/*@__PURE__*/new eL(0,0,0),tt=/*@__PURE__*/new eL(1,1,1),tn=/*@__PURE__*/new eL,tr=/*@__PURE__*/new eL,ti=/*@__PURE__*/new eL,ta=/*@__PURE__*/new e8,to=/*@__PURE__*/new eP;class ts{constructor(e=0,t=0,n=0,r=ts.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
let r=e.elements,i=r[0],a=r[4],o=r[8],s=r[1],A=r[5],l=r[9],u=r[2],c=r[6],h=r[10];switch(t){case"XYZ":this._y=Math.asin(J(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-l,h),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(c,A),this._z=0);break;case"YXZ":this._x=Math.asin(-J(l,-1,1)),.9999999>Math.abs(l)?(this._y=Math.atan2(o,h),this._z=Math.atan2(s,A)):(this._y=Math.atan2(-u,i),this._z=0);break;case"ZXY":this._x=Math.asin(J(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-u,h),this._z=Math.atan2(-a,A)):(this._y=0,this._z=Math.atan2(s,i));break;case"ZYX":this._y=Math.asin(-J(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(c,h),this._z=Math.atan2(s,i)):(this._x=0,this._z=Math.atan2(-a,A));break;case"YZX":this._z=Math.asin(J(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-l,A),this._y=Math.atan2(-u,i)):(this._x=0,this._y=Math.atan2(o,h));break;case"XZY":this._z=Math.asin(-J(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(c,A),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-l,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return ta.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ta,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return(// WARNING: this discards revolution information -bhouston
to.setFromEuler(this),this.setFromQuaternion(to,e))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ts.DEFAULT_ORDER="XYZ";class tA{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let tl=0;const tu=/*@__PURE__*/new eL,tc=/*@__PURE__*/new eP,th=/*@__PURE__*/new e8,td=/*@__PURE__*/new eL,tf=/*@__PURE__*/new eL,tp=/*@__PURE__*/new eL,tm=/*@__PURE__*/new eP,tg=/*@__PURE__*/new eL(1,0,0),tv=/*@__PURE__*/new eL(0,1,0),t_=/*@__PURE__*/new eL(0,0,1),ty={type:"added"},tx={type:"removed"};class tb extends W{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:tl++}),this.uuid=K(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=tb.DEFAULT_UP.clone();let e=new eL,t=new ts,n=new eP,r=new eL(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new e8},normalMatrix:{value:new es}}),this.matrix=new e8,this.matrixWorld=new e8,this.matrixAutoUpdate=tb.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=tb.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new tA,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){// assumes axis is normalized
this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)
this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){// assumes q is normalized
this.quaternion.copy(e)}rotateOnAxis(e,t){return(// rotate object on axis in object space
// axis is assumed to be normalized
tc.setFromAxisAngle(e,t),this.quaternion.multiply(tc),this)}rotateOnWorldAxis(e,t){return(// rotate object on axis in world space
// axis is assumed to be normalized
// method assumes no rotated parent
tc.setFromAxisAngle(e,t),this.quaternion.premultiply(tc),this)}rotateX(e){return this.rotateOnAxis(tg,e)}rotateY(e){return this.rotateOnAxis(tv,e)}rotateZ(e){return this.rotateOnAxis(t_,e)}translateOnAxis(e,t){return(// translate object by distance along axis in object space
// axis is assumed to be normalized
tu.copy(e).applyQuaternion(this.quaternion),this.position.add(tu.multiplyScalar(t)),this)}translateX(e){return this.translateOnAxis(tg,e)}translateY(e){return this.translateOnAxis(tv,e)}translateZ(e){return this.translateOnAxis(t_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(th.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?td.copy(e):td.set(e,t,n);let r=this.parent;this.updateWorldMatrix(!0,!1),tf.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?th.lookAt(tf,td,this.up):th.lookAt(td,tf,this.up),this.quaternion.setFromRotationMatrix(th),r&&(th.extractRotation(r.matrixWorld),tc.setFromRotationMatrix(th),this.quaternion.premultiply(tc.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(ty)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}let t=this.children.indexOf(e);return -1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(tx)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return(// adds object as a child of this, while maintaining the object's world transform
// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)
this.updateWorldMatrix(!0,!1),th.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),th.multiply(e.parent.matrixWorld)),e.applyMatrix4(th),this.add(e),e.updateWorldMatrix(!1,!0),this)}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){let r=this.children[n],i=r.getObjectByProperty(e,t);if(void 0!==i)return i}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let r=0,i=this.children.length;r<i;r++){let i=this.children[r].getObjectsByProperty(e,t);i.length>0&&(n=n.concat(i))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tf,e,tp),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tf,tm,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);// update children
let t=this.children;for(let n=0,r=t.length;n<r;n++){let r=t[n];(!0===r.matrixWorldAutoUpdate||!0===e)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){let n=this.parent;// update children
if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let e=this.children;for(let t=0,n=e.length;t<n;t++){let n=e[t];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(e){// meta is a string when called from JSON.stringify
let t=void 0===e||"string"==typeof e,n={};t&&(// initialize meta obj
e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});// standard Object3D serialization
let r={};//
function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);let t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){let n=t.shapes;if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){let r=n[t];i(e.shapes,r)}else i(e.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let t=[];for(let n=0,r=this.material.length;n<r;n++)t.push(i(e.materials,this.material[n]));r.material=t}else r.material=i(e.materials,this.material)}//
if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}//
if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){let n=this.animations[t];r.animations.push(i(e.animations,n))}}if(t){let t=a(e.geometries),r=a(e.materials),i=a(e.textures),o=a(e.images),s=a(e.shapes),A=a(e.skeletons),l=a(e.animations),u=a(e.nodes);t.length>0&&(n.geometries=t),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),o.length>0&&(n.images=o),s.length>0&&(n.shapes=s),A.length>0&&(n.skeletons=A),l.length>0&&(n.animations=l),u.length>0&&(n.nodes=u)}return n.object=r,n;// extract data from the cache hash
// remove metadata on each item
// and return as array
function a(e){let t=[];for(let n in e){let r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){let n=e.children[t];this.add(n.clone())}return this}}tb.DEFAULT_UP=/*@__PURE__*/new eL(0,1,0),tb.DEFAULT_MATRIX_AUTO_UPDATE=!0,tb.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const tM=/*@__PURE__*/new eL,tw=/*@__PURE__*/new eL,tE=/*@__PURE__*/new eL,tS=/*@__PURE__*/new eL,tT=/*@__PURE__*/new eL,tC=/*@__PURE__*/new eL,tR=/*@__PURE__*/new eL,tP=/*@__PURE__*/new eL,tL=/*@__PURE__*/new eL,tD=/*@__PURE__*/new eL;let tO=!1;class tI{constructor(e=new eL,t=new eL,n=new eL){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),tM.subVectors(e,t),r.cross(tM);let i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}// static/instance method to calculate barycentric coordinates
// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
static getBarycoord(e,t,n,r,i){tM.subVectors(r,t),tw.subVectors(n,t),tE.subVectors(e,t);let a=tM.dot(tM),o=tM.dot(tw),s=tM.dot(tE),A=tw.dot(tw),l=tw.dot(tE),u=a*A-o*o;// collinear or singular triangle
if(0===u)// not sure if this is the best idea, maybe should be returning undefined
return i.set(-2,-1,-1);let c=1/u,h=(A*s-o*l)*c,d=(a*l-o*s)*c;// barycentric coordinates must always sum to 1
return i.set(1-h-d,d,h)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,tS),tS.x>=0&&tS.y>=0&&tS.x+tS.y<=1}static getUV(e,t,n,r,i,a,o,s){return!1===tO&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),tO=!0),this.getInterpolation(e,t,n,r,i,a,o,s)}static getInterpolation(e,t,n,r,i,a,o,s){return this.getBarycoord(e,t,n,r,tS),s.setScalar(0),s.addScaledVector(i,tS.x),s.addScaledVector(a,tS.y),s.addScaledVector(o,tS.z),s}static isFrontFacing(e,t,n,r){// strictly front facing
return tM.subVectors(n,t),tw.subVectors(e,t),0>tM.cross(tw).dot(r)}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return tM.subVectors(this.c,this.b),tw.subVectors(this.a,this.b),.5*tM.cross(tw).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return tI.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return tI.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return!1===tO&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),tO=!0),tI.getInterpolation(e,this.a,this.b,this.c,t,n,r,i)}getInterpolation(e,t,n,r,i){return tI.getInterpolation(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return tI.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return tI.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let n,r;let i=this.a,a=this.b,o=this.c;// algorithm thanks to Real-Time Collision Detection by Christer Ericson,
// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,
// under the accompanying license; see chapter 5.1.5 for detailed explanation.
// basically, we're distinguishing which of the voronoi regions of the triangle
// the point lies in with the minimum amount of redundant computation.
tT.subVectors(a,i),tC.subVectors(o,i),tP.subVectors(e,i);let s=tT.dot(tP),A=tC.dot(tP);if(s<=0&&A<=0)return t.copy(i);tL.subVectors(e,a);let l=tT.dot(tL),u=tC.dot(tL);if(l>=0&&u<=l)return t.copy(a);let c=s*u-l*A;if(c<=0&&s>=0&&l<=0)// edge region of AB; barycentric coords (1-v, v, 0)
return n=s/(s-l),t.copy(i).addScaledVector(tT,n);tD.subVectors(e,o);let h=tT.dot(tD),d=tC.dot(tD);if(d>=0&&h<=d)return t.copy(o);let f=h*A-s*d;if(f<=0&&A>=0&&d<=0)// edge region of AC; barycentric coords (1-w, 0, w)
return r=A/(A-d),t.copy(i).addScaledVector(tC,r);let p=l*d-h*u;if(p<=0&&u-l>=0&&h-d>=0)// edge region of BC; barycentric coords (0, 1-w, w)
return tR.subVectors(o,a),r=(u-l)/(u-l+(h-d)),t.copy(a).addScaledVector(tR,r);// edge region of BC
// face region
let m=1/(p+f+c);return(// u = va * denom
n=f*m,r=c*m,t.copy(i).addScaledVector(tT,n).addScaledVector(tC,r))}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const tq={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},tU={h:0,s:0,l:0},tN={h:0,s:0,l:0};function tB(e,t,n){return(n<0&&(n+=1),n>1&&(n-=1),n<1/6)?e+(t-e)*6*n:n<.5?t:n<2/3?e+(t-e)*6*(2/3-n):e}class tk{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){return void 0===t&&void 0===n?e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e):this.setRGB(e,t,n),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=B){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,eg.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=eg.workingColorSpace){return this.r=e,this.g=t,this.b=n,eg.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=eg.workingColorSpace){if(// h,s,l ranges are in 0.0 - 1.0
e=$(e,1),t=J(t,0,1),n=J(n,0,1),0===t)this.r=this.g=this.b=n;else{let r=n<=.5?n*(1+t):n+t-n*t,i=2*n-r;this.r=tB(i,r,e+1/3),this.g=tB(i,r,e),this.b=tB(i,r,e-1/3)}return eg.toWorkingColorSpace(this,r),this}setStyle(e,t=B){let n;function r(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;let a=n[1],o=n[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return(// rgb(255,0,0) rgba(255,0,0,0.5)
r(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,t));if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return(// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
r(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,t));break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return(// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
r(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,t));break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){// hex color
let r=n[1],i=r.length;if(3===i)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(6===i)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=B){// color keywords
let n=tq[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ev(e.r),this.g=ev(e.g),this.b=ev(e.b),this}copyLinearToSRGB(e){return this.r=e_(e.r),this.g=e_(e.g),this.b=e_(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=B){return eg.fromWorkingColorSpace(tF.copy(this),e),65536*Math.round(J(255*tF.r,0,255))+256*Math.round(J(255*tF.g,0,255))+Math.round(J(255*tF.b,0,255))}getHexString(e=B){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=eg.workingColorSpace){let n,r;// h,s,l ranges are in 0.0 - 1.0
eg.fromWorkingColorSpace(tF.copy(this),t);let i=tF.r,a=tF.g,o=tF.b,s=Math.max(i,a,o),A=Math.min(i,a,o),l=(A+s)/2;if(A===s)n=0,r=0;else{let e=s-A;switch(r=l<=.5?e/(s+A):e/(2-s-A),s){case i:n=(a-o)/e+(a<o?6:0);break;case a:n=(o-i)/e+2;break;case o:n=(i-a)/e+4}n/=6}return e.h=n,e.s=r,e.l=l,e}getRGB(e,t=eg.workingColorSpace){return eg.fromWorkingColorSpace(tF.copy(this),t),e.r=tF.r,e.g=tF.g,e.b=tF.b,e}getStyle(e=B){eg.fromWorkingColorSpace(tF.copy(this),e);let t=tF.r,n=tF.g,r=tF.b;return e!==B?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*r)})`}offsetHSL(e,t,n){return this.getHSL(tU),this.setHSL(tU.h+e,tU.s+t,tU.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(tU),e.getHSL(tN);let n=ee(tU.h,tN.h,t),r=ee(tU.s,tN.s,t),i=ee(tU.l,tN.l,t);return this.setHSL(n,r,i),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,n=this.g,r=this.b,i=e.elements;return this.r=i[0]*t+i[3]*n+i[6]*r,this.g=i[1]*t+i[4]*n+i[7]*r,this.b=i[2]*t+i[5]*n+i[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const tF=/*@__PURE__*/new tk;tk.NAMES=tq;let tz=0;class tG extends W{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:tz++}),this.uuid=K(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new tk(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let r=this[t];if(void 0===r){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};// TODO: Copied from Object3D.toJSON
function r(e){let t=[];for(let n in e){let r=e[n];delete r.metadata,t.push(r)}return t}if(// standard Material serialization
n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),204!==this.blendSrc&&(n.blendSrc=this.blendSrc),205!==this.blendDst&&(n.blendDst=this.blendDst),100!==this.blendEquation&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),7680!==this.stencilFail&&(n.stencilFail=this.stencilFail),7680!==this.stencilZFail&&(n.stencilZFail=this.stencilZFail),7680!==this.stencilZPass&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){let t=r(e.textures),i=r(e.images);t.length>0&&(n.textures=t),i.length>0&&(n.images=i)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,n=null;if(null!==t){let e=t.length;n=Array(e);for(let r=0;r!==e;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class tH extends tG{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new tk(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const tV=/*@__PURE__*/new eL,tj=/*@__PURE__*/new eo;class tW{constructor(e,t,n=!1){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=35044,this.updateRange={offset:0,count:-1},this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)tj.fromBufferAttribute(this,t),tj.applyMatrix3(e),this.setXY(t,tj.x,tj.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)tV.fromBufferAttribute(this,t),tV.applyMatrix3(e),this.setXYZ(t,tV.x,tV.y,tV.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)tV.fromBufferAttribute(this,t),tV.applyMatrix4(e),this.setXYZ(t,tV.x,tV.y,tV.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)tV.fromBufferAttribute(this,t),tV.applyNormalMatrix(e),this.setXYZ(t,tV.x,tV.y,tV.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)tV.fromBufferAttribute(this,t),tV.transformDirection(e),this.setXYZ(t,tV.x,tV.y,tV.z);return this}set(e,t=0){return(// Matching BufferAttribute constructor, do not normalize the array.
this.array.set(e,t),this)}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=er(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ei(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=er(t,this.array)),t}setX(e,t){return this.normalized&&(t=ei(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=er(t,this.array)),t}setY(e,t){return this.normalized&&(t=ei(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=er(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ei(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=er(t,this.array)),t}setW(e,t){return this.normalized&&(t=ei(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ei(t,this.array),n=ei(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=ei(t,this.array),n=ei(n,this.array),r=ei(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e*=this.itemSize,this.normalized&&(t=ei(t,this.array),n=ei(n,this.array),r=ei(r,this.array),i=ei(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}class tX extends tW{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class tQ extends tW{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class tY extends tW{constructor(e,t,n){super(new Float32Array(e),t,n)}}let tZ=0;const tK=/*@__PURE__*/new e8,tJ=/*@__PURE__*/new tb,t$=/*@__PURE__*/new eL,t0=/*@__PURE__*/new eI,t1=/*@__PURE__*/new eI,t2=/*@__PURE__*/new eL;class t3 extends W{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:tZ++}),this.uuid=K(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(el(e)?tQ:tX)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let n=this.attributes.normal;if(void 0!==n){let t=new es().getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}let r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return tK.makeRotationFromQuaternion(e),this.applyMatrix4(tK),this}rotateX(e){return(// rotate geometry around world x-axis
tK.makeRotationX(e),this.applyMatrix4(tK),this)}rotateY(e){return(// rotate geometry around world y-axis
tK.makeRotationY(e),this.applyMatrix4(tK),this)}rotateZ(e){return(// rotate geometry around world z-axis
tK.makeRotationZ(e),this.applyMatrix4(tK),this)}translate(e,t,n){return(// translate geometry
tK.makeTranslation(e,t,n),this.applyMatrix4(tK),this)}scale(e,t,n){return(// scale geometry
tK.makeScale(e,t,n),this.applyMatrix4(tK),this)}lookAt(e){return tJ.lookAt(e),tJ.updateMatrix(),this.applyMatrix4(tJ.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(t$).negate(),this.translate(t$.x,t$.y,t$.z),this}setFromPoints(e){let t=[];for(let n=0,r=e.length;n<r;n++){let r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new tY(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new eI);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new eL(-1/0,-1/0,-1/0),new eL(1/0,1/0,1/0));return}if(void 0!==e)// process morph attributes if present
{if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){let n=t[e];t0.setFromBufferAttribute(n),this.morphTargetsRelative?(t2.addVectors(this.boundingBox.min,t0.min),this.boundingBox.expandByPoint(t2),t2.addVectors(this.boundingBox.max,t0.max),this.boundingBox.expandByPoint(t2)):(this.boundingBox.expandByPoint(t0.min),this.boundingBox.expandByPoint(t0.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new eJ);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new eL,1/0);return}if(e){// first, find the center of the bounding sphere
let n=this.boundingSphere.center;// process morph attributes if present
if(t0.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){let n=t[e];t1.setFromBufferAttribute(n),this.morphTargetsRelative?(t2.addVectors(t0.min,t1.min),t0.expandByPoint(t2),t2.addVectors(t0.max,t1.max),t0.expandByPoint(t2)):(t0.expandByPoint(t1.min),t0.expandByPoint(t1.max))}t0.getCenter(n);// second, try to find a boundingSphere with a radius smaller than the
// boundingSphere of the boundingBox: sqrt(3) smaller in the best case
let r=0;for(let t=0,i=e.count;t<i;t++)t2.fromBufferAttribute(e,t),r=Math.max(r,n.distanceToSquared(t2));// process morph attributes if present
if(t)for(let i=0,a=t.length;i<a;i++){let a=t[i],o=this.morphTargetsRelative;for(let t=0,i=a.count;t<i;t++)t2.fromBufferAttribute(a,t),o&&(t$.fromBufferAttribute(e,t),t2.add(t$)),r=Math.max(r,n.distanceToSquared(t2))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;// based on http://www.terathon.com/code/tangent.html
// (per vertex tangents)
if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let n=e.array,r=t.position.array,i=t.normal.array,a=t.uv.array,o=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new tW(new Float32Array(4*o),4));let s=this.getAttribute("tangent").array,A=[],l=[];for(let e=0;e<o;e++)A[e]=new eL,l[e]=new eL;let u=new eL,c=new eL,h=new eL,d=new eo,f=new eo,p=new eo,m=new eL,g=new eL,v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let e=0,t=v.length;e<t;++e){let t=v[e],i=t.start,o=t.count;for(let e=i,t=i+o;e<t;e+=3)!function(e,t,n){u.fromArray(r,3*e),c.fromArray(r,3*t),h.fromArray(r,3*n),d.fromArray(a,2*e),f.fromArray(a,2*t),p.fromArray(a,2*n),c.sub(u),h.sub(u),f.sub(d),p.sub(d);let i=1/(f.x*p.y-p.x*f.y);isFinite(i)&&(m.copy(c).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(i),g.copy(h).multiplyScalar(f.x).addScaledVector(c,-p.x).multiplyScalar(i),A[e].add(m),A[t].add(m),A[n].add(m),l[e].add(g),l[t].add(g),l[n].add(g))}(n[e+0],n[e+1],n[e+2])}let _=new eL,y=new eL,x=new eL,b=new eL;function M(e){x.fromArray(i,3*e),b.copy(x);let t=A[e];// Gram-Schmidt orthogonalize
_.copy(t),_.sub(x.multiplyScalar(x.dot(t))).normalize(),// Calculate handedness
y.crossVectors(b,t);let n=y.dot(l[e]);s[4*e]=_.x,s[4*e+1]=_.y,s[4*e+2]=_.z,s[4*e+3]=n<0?-1:1}for(let e=0,t=v.length;e<t;++e){let t=v[e],r=t.start,i=t.count;for(let e=r,t=r+i;e<t;e+=3)M(n[e+0]),M(n[e+1]),M(n[e+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new tW(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);let r=new eL,i=new eL,a=new eL,o=new eL,s=new eL,A=new eL,l=new eL,u=new eL;// indexed elements
if(e)for(let c=0,h=e.count;c<h;c+=3){let h=e.getX(c+0),d=e.getX(c+1),f=e.getX(c+2);r.fromBufferAttribute(t,h),i.fromBufferAttribute(t,d),a.fromBufferAttribute(t,f),l.subVectors(a,i),u.subVectors(r,i),l.cross(u),o.fromBufferAttribute(n,h),s.fromBufferAttribute(n,d),A.fromBufferAttribute(n,f),o.add(l),s.add(l),A.add(l),n.setXYZ(h,o.x,o.y,o.z),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(f,A.x,A.y,A.z)}else for(let e=0,o=t.count;e<o;e+=3)r.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),l.subVectors(a,i),u.subVectors(r,i),l.cross(u),n.setXYZ(e+0,l.x,l.y,l.z),n.setXYZ(e+1,l.x,l.y,l.z),n.setXYZ(e+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){let e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)t2.fromBufferAttribute(e,t),t2.normalize(),e.setXYZ(t,t2.x,t2.y,t2.z)}toNonIndexed(){function e(e,t){let n=e.array,r=e.itemSize,i=e.normalized,a=new n.constructor(t.length*r),o=0,s=0;for(let i=0,A=t.length;i<A;i++){o=e.isInterleavedBufferAttribute?t[i]*e.data.stride+e.offset:t[i]*r;for(let e=0;e<r;e++)a[s++]=n[o++]}return new tW(a,r,i)}//
if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new t3,n=this.index.array,r=this.attributes;// attributes
for(let i in r){let a=r[i],o=e(a,n);t.setAttribute(i,o)}// morph attributes
let i=this.morphAttributes;for(let r in i){let a=[],o=i[r];for(let t=0,r=o.length;t<r;t++){let r=o[t],i=e(r,n);a.push(i)}t.morphAttributes[r]=a}t.morphTargetsRelative=this.morphTargetsRelative;// groups
let a=this.groups;for(let e=0,n=a.length;e<n;e++){let n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){let e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(// standard BufferGeometry serialization
e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let n in t)void 0!==t[n]&&(e[n]=t[n]);return e}// for simplicity the code assumes attributes are not shared across geometries, see #15811
e.data={attributes:{}};let t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let n=this.attributes;for(let t in n){let r=n[t];e.data.attributes[t]=r.toJSON(e.data)}let r={},i=!1;for(let t in this.morphAttributes){let n=this.morphAttributes[t],a=[];for(let t=0,r=n.length;t<r;t++){let r=n[t];a.push(r.toJSON(e.data))}a.length>0&&(r[t]=a,i=!0)}i&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);let a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));let o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){// reset
this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;// used for storing cloned, shared data
let t={};// name
this.name=e.name;// index
let n=e.index;null!==n&&this.setIndex(n.clone(t));// attributes
let r=e.attributes;for(let e in r){let n=r[e];this.setAttribute(e,n.clone(t))}// morph attributes
let i=e.morphAttributes;for(let e in i){let n=[],r=i[e];for(let e=0,i=r.length;e<i;e++)n.push(r[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;// groups
let a=e.groups;for(let e=0,t=a.length;e<t;e++){let t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}// bounding box
let o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());// bounding sphere
let s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),// draw range
this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,// user data
this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const t4=/*@__PURE__*/new e8,t5=/*@__PURE__*/new e6,t6=/*@__PURE__*/new eJ,t8=/*@__PURE__*/new eL,t7=/*@__PURE__*/new eL,t9=/*@__PURE__*/new eL,ne=/*@__PURE__*/new eL,nt=/*@__PURE__*/new eL,nn=/*@__PURE__*/new eL,nr=/*@__PURE__*/new eo,ni=/*@__PURE__*/new eo,na=/*@__PURE__*/new eo,no=/*@__PURE__*/new eL,ns=/*@__PURE__*/new eL,nA=/*@__PURE__*/new eL,nl=/*@__PURE__*/new eL,nu=/*@__PURE__*/new eL;class nc extends tb{constructor(e=new t3,t=new tH){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,n=Object.keys(t);if(n.length>0){let e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){let n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}getVertexPosition(e,t){let n=this.geometry,r=n.attributes.position,i=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(r,e);let o=this.morphTargetInfluences;if(i&&o){nn.set(0,0,0);for(let n=0,r=i.length;n<r;n++){let r=o[n],s=i[n];0!==r&&(nt.fromBufferAttribute(s,e),a?nn.addScaledVector(nt,r):nn.addScaledVector(nt.sub(t),r))}t.add(nn)}return t}raycast(e,t){let n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0!==r){if(null===n.boundingSphere&&n.computeBoundingSphere(),t6.copy(n.boundingSphere),t6.applyMatrix4(i),// check distance from ray origin to bounding sphere
t5.copy(e.ray).recast(e.near),!1===t6.containsPoint(t5.origin)&&(null===t5.intersectSphere(t6,t8)||t5.origin.distanceToSquared(t8)>(e.far-e.near)**2)||(// convert ray to local space of mesh
t4.copy(i).invert(),t5.copy(e.ray).applyMatrix4(t4),null!==n.boundingBox&&!1===t5.intersectsBox(n.boundingBox)))return;// test for intersections with geometry
this._computeIntersections(e,t,t5)}}_computeIntersections(e,t,n){let r;let i=this.geometry,a=this.material,o=i.index,s=i.attributes.position,A=i.attributes.uv,l=i.attributes.uv1,u=i.attributes.normal,c=i.groups,h=i.drawRange;if(null!==o){// indexed buffer geometry
if(Array.isArray(a))for(let i=0,s=c.length;i<s;i++){let s=c[i],d=a[s.materialIndex],f=Math.max(s.start,h.start),p=Math.min(o.count,Math.min(s.start+s.count,h.start+h.count));for(let i=f;i<p;i+=3){let a=o.getX(i),c=o.getX(i+1),h=o.getX(i+2);(r=nh(this,d,e,n,A,l,u,a,c,h))&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=s.materialIndex,t.push(r))}}else{let i=Math.max(0,h.start),s=Math.min(o.count,h.start+h.count);for(let c=i;c<s;c+=3){let i=o.getX(c),s=o.getX(c+1),h=o.getX(c+2);(r=nh(this,a,e,n,A,l,u,i,s,h))&&(r.faceIndex=Math.floor(c/3),t.push(r))}}}else if(void 0!==s){// non-indexed buffer geometry
if(Array.isArray(a))for(let i=0,o=c.length;i<o;i++){let o=c[i],d=a[o.materialIndex],f=Math.max(o.start,h.start),p=Math.min(s.count,Math.min(o.start+o.count,h.start+h.count));for(let i=f;i<p;i+=3){let a=i,s=i+1,c=i+2;(r=nh(this,d,e,n,A,l,u,a,s,c))&&(r.faceIndex=Math.floor(i/3),r.face.materialIndex=o.materialIndex,t.push(r))}}else{let i=Math.max(0,h.start),o=Math.min(s.count,h.start+h.count);for(let s=i;s<o;s+=3){let i=s,o=s+1,c=s+2;(r=nh(this,a,e,n,A,l,u,i,o,c))&&(r.faceIndex=Math.floor(s/3),t.push(r))}}}}}function nh(e,t,n,r,i,a,o,s,A,l){e.getVertexPosition(s,t7),e.getVertexPosition(A,t9),e.getVertexPosition(l,ne);let u=function(e,t,n,r,i,a,o,s){if(null===(1===t.side?r.intersectTriangle(o,a,i,!0,s):r.intersectTriangle(i,a,o,0===t.side,s)))return null;nu.copy(s),nu.applyMatrix4(e.matrixWorld);let A=n.ray.origin.distanceTo(nu);return A<n.near||A>n.far?null:{distance:A,point:nu.clone(),object:e}}(e,t,n,r,t7,t9,ne,nl);if(u){i&&(nr.fromBufferAttribute(i,s),ni.fromBufferAttribute(i,A),na.fromBufferAttribute(i,l),u.uv=tI.getInterpolation(nl,t7,t9,ne,nr,ni,na,new eo)),a&&(nr.fromBufferAttribute(a,s),ni.fromBufferAttribute(a,A),na.fromBufferAttribute(a,l),u.uv1=tI.getInterpolation(nl,t7,t9,ne,nr,ni,na,new eo),u.uv2=u.uv1),o&&(no.fromBufferAttribute(o,s),ns.fromBufferAttribute(o,A),nA.fromBufferAttribute(o,l),u.normal=tI.getInterpolation(nl,t7,t9,ne,no,ns,nA,new eL),u.normal.dot(r.direction)>0&&u.normal.multiplyScalar(-1));let e={a:s,b:A,c:l,normal:new eL,materialIndex:0};tI.getNormal(t7,t9,ne,e.normal),u.face=e}return u}class nd extends t3{constructor(e=1,t=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};let o=this;// segments
r=Math.floor(r),i=Math.floor(i),a=Math.floor(a);// buffers
let s=[],A=[],l=[],u=[],c=0,h=0;function d(e,t,n,r,i,a,d,f,p,m,g){let v=a/p,_=d/m,y=a/2,x=d/2,b=f/2,M=p+1,w=m+1,E=0,S=0,T=new eL;// generate vertices, normals and uvs
for(let a=0;a<w;a++){let o=a*_-x;for(let s=0;s<M;s++){let c=s*v-y;// set values to correct vector component
T[e]=c*r,T[t]=o*i,T[n]=b,// now apply vector to vertex buffer
A.push(T.x,T.y,T.z),// set values to correct vector component
T[e]=0,T[t]=0,T[n]=f>0?1:-1,// now apply vector to normal buffer
l.push(T.x,T.y,T.z),// uvs
u.push(s/p),u.push(1-a/m),// counters
E+=1}}// indices
// 1. you need three indices to draw a single face
// 2. a single segment consists of two faces
// 3. so we need to generate six (2*3) indices per segment
for(let e=0;e<m;e++)for(let t=0;t<p;t++){let n=c+t+M*e,r=c+t+M*(e+1),i=c+(t+1)+M*(e+1),a=c+(t+1)+M*e;// faces
s.push(n,r,a),s.push(r,i,a),// increase counter
S+=6}// add a group to the geometry. this will ensure multi material support
o.addGroup(h,S,g),// calculate new start value for groups
h+=S,// update total number of vertices
c+=E}// build each side of the box geometry
d("z","y","x",-1,-1,n,t,e,a,i,0),d("z","y","x",1,-1,n,t,-e,a,i,1),d("x","z","y",1,1,e,n,t,r,a,2),d("x","z","y",1,-1,e,n,-t,r,a,3),d("x","y","z",1,-1,e,t,n,r,i,4),d("x","y","z",-1,-1,e,t,-n,r,i,5),// build geometry
this.setIndex(s),this.setAttribute("position",new tY(A,3)),this.setAttribute("normal",new tY(l,3)),this.setAttribute("uv",new tY(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new nd(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}/**
 * Uniform Utilities
 */function nf(e){let t={};for(let n in e)for(let r in t[n]={},e[n]){let i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][r]=null):t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}return t}function np(e){let t={};for(let n=0;n<e.length;n++){let r=nf(e[n]);for(let e in r)t[e]=r[e]}return t}function nm(e){return null===e.getRenderTarget()?e.outputColorSpace:eg.workingColorSpace}// Legacy
const ng={clone:nf,merge:np};class nv extends tG{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1// set to use shader texture LOD
},// When rendered geometry doesn't include these attributes but the material does,
// use these default values in WebGL. This avoids errors when buffer data is missing.
this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=nf(e.uniforms),this.uniformsGroups=function(e){let t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let n in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let r=this.uniforms[n],i=r.value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let n={};for(let e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class n_ extends tb{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new e8,this.projectionMatrix=new e8,this.projectionMatrixInverse=new e8,this.coordinateSystem=2e3}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class ny extends n_{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}/**
	 * Sets the FOV by focal length in respect to the current .filmGauge.
	 *
	 * The default film gauge is 35, so that the focal length can be specified for
	 * a 35mm (full frame) camera.
	 *
	 * Values for focal length and film gauge must have the same unit.
	 */setFocalLength(e){/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */let t=.5*this.getFilmHeight()/e;this.fov=2*Z*Math.atan(t),this.updateProjectionMatrix()}/**
	 * Calculates the focal length from the current .fov and .filmGauge.
	 */getFocalLength(){let e=Math.tan(.5*Y*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Z*Math.atan(Math.tan(.5*Y*this.fov)/this.zoom)}getFilmWidth(){// film not completely covered in portrait format (aspect < 1)
return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){// film not completely covered in landscape format (aspect > 1)
return this.filmGauge/Math.max(this.aspect,1)}/**
	 * Sets an offset in a larger frustum. This is useful for multi-window or
	 * multi-monitor/multi-machine setups.
	 *
	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
	 * the monitors are in grid like this
	 *
	 *   +---+---+---+
	 *   | A | B | C |
	 *   +---+---+---+
	 *   | D | E | F |
	 *   +---+---+---+
	 *
	 * then for each monitor you would call it like this
	 *
	 *   const w = 1920;
	 *   const h = 1080;
	 *   const fullWidth = w * 3;
	 *   const fullHeight = h * 2;
	 *
	 *   --A--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
	 *   --B--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
	 *   --C--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
	 *   --D--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
	 *   --E--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
	 *   --F--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
	 *
	 *   Note there is no reason monitors have to be the same size or in a grid.
	 */setViewOffset(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*Y*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){let e=a.fullWidth,o=a.fullHeight;i+=a.offsetX*r/e,t-=a.offsetY*n/o,r*=a.width/e,n*=a.height/o}let o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class nx extends tb{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;let r=new ny(-90,1,e,t);r.layers=this.layers,this.add(r);let i=new ny(-90,1,e,t);i.layers=this.layers,this.add(i);let a=new ny(-90,1,e,t);a.layers=this.layers,this.add(a);let o=new ny(-90,1,e,t);o.layers=this.layers,this.add(o);let s=new ny(-90,1,e,t);s.layers=this.layers,this.add(s);let A=new ny(-90,1,e,t);A.layers=this.layers,this.add(A)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[n,r,i,a,o,s]=t;for(let e of t)this.remove(e);if(2e3===e)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),s.up.set(0,1,0),s.lookAt(0,0,-1);else if(2001===e)n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),s.up.set(0,-1,0),s.lookAt(0,0,-1);else throw Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(let e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();let{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[i,a,o,s,A,l]=this.children,u=e.getRenderTarget(),c=e.getActiveCubeFace(),h=e.getActiveMipmapLevel(),d=e.xr.enabled;e.xr.enabled=!1;let f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,i),e.setRenderTarget(n,1,r),e.render(t,a),e.setRenderTarget(n,2,r),e.render(t,o),e.setRenderTarget(n,3,r),e.render(t,s),e.setRenderTarget(n,4,r),e.render(t,A),// mipmaps are generated during the last call of render()
// at this point, all sides of the cube render target are defined
n.texture.generateMipmaps=f,e.setRenderTarget(n,5,r),e.render(t,l),e.setRenderTarget(u,c,h),e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class nb extends eE{constructor(e,t,n,r,i,a,o,s,A,l){super(e=void 0!==e?e:[],t=void 0!==t?t:301,n,r,i,a,o,s,A,l),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class nM extends eC{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let n={width:e,height:e,depth:1};void 0!==t.encoding&&(// @deprecated, r152
eh("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=3001===t.encoding?B:""),this.texture=new nb([n,n,n,n,n,n],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)
// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,
// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.
// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped
// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture
// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).
this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:1006}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let n={uniforms:{tEquirect:{value:null}},vertexShader:/* glsl */`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:/* glsl */`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new nd(5,5,5),i=new nv({name:"CubemapFromEquirect",uniforms:nf(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:1,blending:0});i.uniforms.tEquirect.value=t;let a=new nc(r,i),o=t.minFilter;1008===t.minFilter&&(t.minFilter=1006);let s=new nx(1,10,this);return s.update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,r){let i=e.getRenderTarget();for(let i=0;i<6;i++)e.setRenderTarget(this,i),e.clear(t,n,r);e.setRenderTarget(i)}}const nw=/*@__PURE__*/new eL,nE=/*@__PURE__*/new eL,nS=/*@__PURE__*/new es;class nT{constructor(e=new eL(1,0,0),t=0){this.isPlane=!0,// normal is assumed to be normalized
this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){let r=nw.subVectors(n,t).cross(nE.subVectors(e,t)).normalize();return(// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?
this.setFromNormalAndCoplanarPoint(r,e),this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){// Note: will lead to a divide by zero if the plane is invalid.
let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let n=e.delta(nw),r=this.normal.dot(n);if(0===r)return(// line is coplanar, return origin
0===this.distanceToPoint(e.start)?t.copy(e.start):null);let i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:t.copy(e.start).addScaledVector(n,i)}intersectsLine(e){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.
let t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let n=t||nS.getNormalMatrix(e),r=this.coplanarPoint(nw).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const nC=/*@__PURE__*/new eJ,nR=/*@__PURE__*/new eL;class nP{constructor(e=new nT,t=new nT,n=new nT,r=new nT,i=new nT,a=new nT){this.planes=[e,t,n,r,i,a]}set(e,t,n,r,i,a){let o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this}copy(e){let t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=2e3){let n=this.planes,r=e.elements,i=r[0],a=r[1],o=r[2],s=r[3],A=r[4],l=r[5],u=r[6],c=r[7],h=r[8],d=r[9],f=r[10],p=r[11],m=r[12],g=r[13],v=r[14],_=r[15];if(n[0].setComponents(s-i,c-A,p-h,_-m).normalize(),n[1].setComponents(s+i,c+A,p+h,_+m).normalize(),n[2].setComponents(s+a,c+l,p+d,_+g).normalize(),n[3].setComponents(s-a,c-l,p-d,_-g).normalize(),n[4].setComponents(s-o,c-u,p-f,_-v).normalize(),2e3===t)n[5].setComponents(s+o,c+u,p+f,_+v).normalize();else if(2001===t)n[5].setComponents(o,u,f,v).normalize();else throw Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),nC.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{let t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),nC.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(nC)}intersectsSprite(e){return nC.center.set(0,0,0),nC.radius=.7071067811865476,nC.applyMatrix4(e.matrixWorld),this.intersectsSphere(nC)}intersectsSphere(e){let t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++){let i=t[e].distanceToPoint(n);if(i<r)return!1}return!0}intersectsBox(e){let t=this.planes;for(let n=0;n<6;n++){let r=t[n];if(// corner at max distance
nR.x=r.normal.x>0?e.max.x:e.min.x,nR.y=r.normal.y>0?e.max.y:e.min.y,nR.z=r.normal.z>0?e.max.z:e.min.z,0>r.distanceToPoint(nR))return!1}return!0}containsPoint(e){let t=this.planes;for(let n=0;n<6;n++)if(0>t[n].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function nL(){let e=null,t=!1,n=null,r=null;function i(t,a){n(t,a),r=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function nD(e,t){let n=t.isWebGL2,r=new WeakMap;return{get://
function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){let e=r.get(t);(!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version});return}t.isInterleavedBufferAttribute&&(t=t.data);let a=r.get(t);void 0===a?r.set(t,function(t,r){let i;let a=t.array,o=t.usage,s=e.createBuffer();if(e.bindBuffer(r,s),e.bufferData(r,a,o),t.onUploadCallback(),a instanceof Float32Array)i=e.FLOAT;else if(a instanceof Uint16Array){if(t.isFloat16BufferAttribute){if(n)i=e.HALF_FLOAT;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else i=e.UNSIGNED_SHORT}else if(a instanceof Int16Array)i=e.SHORT;else if(a instanceof Uint32Array)i=e.UNSIGNED_INT;else if(a instanceof Int32Array)i=e.INT;else if(a instanceof Int8Array)i=e.BYTE;else if(a instanceof Uint8Array)i=e.UNSIGNED_BYTE;else if(a instanceof Uint8ClampedArray)i=e.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+a);return{buffer:s,type:i,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}(t,i)):a.version<t.version&&(!function(t,r,i){let a=r.array,o=r.updateRange;e.bindBuffer(i,t),-1===o.count?e.bufferSubData(i,0,a):(n?e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1),r.onUploadCallback()}(a.buffer,t,i),a.version=t.version)}}}class nO extends t3{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};let i=e/2,a=t/2,o=Math.floor(n),s=Math.floor(r),A=o+1,l=s+1,u=e/o,c=t/s,h=[],d=[],f=[],p=[];for(let e=0;e<l;e++){let t=e*c-a;for(let n=0;n<A;n++){let r=n*u-i;d.push(r,-t,0),f.push(0,0,1),p.push(n/o),p.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<o;t++){let n=t+A*e,r=t+A*(e+1),i=t+1+A*(e+1),a=t+1+A*e;h.push(n,r,a),h.push(r,i,a)}this.setIndex(h),this.setAttribute("position",new tY(d,3)),this.setAttribute("normal",new tY(f,3)),this.setAttribute("uv",new tY(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new nO(e.width,e.height,e.widthSegments,e.heightSegments)}}const nI={alphahash_fragment:"#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_CLEARCOAT ) \n		clearcoatSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_SHEEN ) \n		sheenSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_v0 0.339\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_v1 0.276\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_v4 0.046\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_v5 0.016\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_v6 0.0038\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n	vec3( 0.8224621, 0.177538, 0.0 ),\n	vec3( 0.0331941, 0.9668058, 0.0 ),\n	vec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n	vec3( 1.2249401, - 0.2249404, 0.0 ),\n	vec3( - 0.0420569, 1.0420571, 0.0 ),\n	vec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n	return value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n	uniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( LEGACY_LIGHTS )\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#else\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	anisotropyV /= material.anisotropy;\n	material.anisotropy = saturate( material.anisotropy );\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometryNormal;\n		vec3 viewDir = geometryViewDir;\n		vec3 position = geometryPosition;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n	geometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometryViewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometryPosition, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometryPosition, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#if defined( USE_LIGHT_PROBES )\n		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometryNormal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n	return packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},nq={common:{diffuse:{value:/*@__PURE__*/new tk(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:/*@__PURE__*/new es},alphaMap:{value:null},alphaMapTransform:{value:/*@__PURE__*/new es},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:/*@__PURE__*/new es}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:/*@__PURE__*/new es}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:/*@__PURE__*/new es}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:/*@__PURE__*/new es},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:/*@__PURE__*/new es},normalScale:{value:/*@__PURE__*/new eo(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:/*@__PURE__*/new es},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:/*@__PURE__*/new es}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:/*@__PURE__*/new es}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:/*@__PURE__*/new es}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:/*@__PURE__*/new tk(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:/*@__PURE__*/new tk(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:/*@__PURE__*/new es},alphaTest:{value:0},uvTransform:{value:/*@__PURE__*/new es}},sprite:{diffuse:{value:/*@__PURE__*/new tk(16777215)},opacity:{value:1},center:{value:/*@__PURE__*/new eo(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:/*@__PURE__*/new es},alphaMap:{value:null},alphaMapTransform:{value:/*@__PURE__*/new es},alphaTest:{value:0}}},nU={basic:{uniforms:/*@__PURE__*/np([nq.common,nq.specularmap,nq.envmap,nq.aomap,nq.lightmap,nq.fog]),vertexShader:nI.meshbasic_vert,fragmentShader:nI.meshbasic_frag},lambert:{uniforms:/*@__PURE__*/np([nq.common,nq.specularmap,nq.envmap,nq.aomap,nq.lightmap,nq.emissivemap,nq.bumpmap,nq.normalmap,nq.displacementmap,nq.fog,nq.lights,{emissive:{value:/*@__PURE__*/new tk(0)}}]),vertexShader:nI.meshlambert_vert,fragmentShader:nI.meshlambert_frag},phong:{uniforms:/*@__PURE__*/np([nq.common,nq.specularmap,nq.envmap,nq.aomap,nq.lightmap,nq.emissivemap,nq.bumpmap,nq.normalmap,nq.displacementmap,nq.fog,nq.lights,{emissive:{value:/*@__PURE__*/new tk(0)},specular:{value:/*@__PURE__*/new tk(1118481)},shininess:{value:30}}]),vertexShader:nI.meshphong_vert,fragmentShader:nI.meshphong_frag},standard:{uniforms:/*@__PURE__*/np([nq.common,nq.envmap,nq.aomap,nq.lightmap,nq.emissivemap,nq.bumpmap,nq.normalmap,nq.displacementmap,nq.roughnessmap,nq.metalnessmap,nq.fog,nq.lights,{emissive:{value:/*@__PURE__*/new tk(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}// temporary
}]),vertexShader:nI.meshphysical_vert,fragmentShader:nI.meshphysical_frag},toon:{uniforms:/*@__PURE__*/np([nq.common,nq.aomap,nq.lightmap,nq.emissivemap,nq.bumpmap,nq.normalmap,nq.displacementmap,nq.gradientmap,nq.fog,nq.lights,{emissive:{value:/*@__PURE__*/new tk(0)}}]),vertexShader:nI.meshtoon_vert,fragmentShader:nI.meshtoon_frag},matcap:{uniforms:/*@__PURE__*/np([nq.common,nq.bumpmap,nq.normalmap,nq.displacementmap,nq.fog,{matcap:{value:null}}]),vertexShader:nI.meshmatcap_vert,fragmentShader:nI.meshmatcap_frag},points:{uniforms:/*@__PURE__*/np([nq.points,nq.fog]),vertexShader:nI.points_vert,fragmentShader:nI.points_frag},dashed:{uniforms:/*@__PURE__*/np([nq.common,nq.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:nI.linedashed_vert,fragmentShader:nI.linedashed_frag},depth:{uniforms:/*@__PURE__*/np([nq.common,nq.displacementmap]),vertexShader:nI.depth_vert,fragmentShader:nI.depth_frag},normal:{uniforms:/*@__PURE__*/np([nq.common,nq.bumpmap,nq.normalmap,nq.displacementmap,{opacity:{value:1}}]),vertexShader:nI.meshnormal_vert,fragmentShader:nI.meshnormal_frag},sprite:{uniforms:/*@__PURE__*/np([nq.sprite,nq.fog]),vertexShader:nI.sprite_vert,fragmentShader:nI.sprite_frag},background:{uniforms:{uvTransform:{value:/*@__PURE__*/new es},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:nI.background_vert,fragmentShader:nI.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:nI.backgroundCube_vert,fragmentShader:nI.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:nI.cube_vert,fragmentShader:nI.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:nI.equirect_vert,fragmentShader:nI.equirect_frag},distanceRGBA:{uniforms:/*@__PURE__*/np([nq.common,nq.displacementmap,{referencePosition:{value:/*@__PURE__*/new eL},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:nI.distanceRGBA_vert,fragmentShader:nI.distanceRGBA_frag},shadow:{uniforms:/*@__PURE__*/np([nq.lights,nq.fog,{color:{value:/*@__PURE__*/new tk(0)},opacity:{value:1}}]),vertexShader:nI.shadow_vert,fragmentShader:nI.shadow_frag}};nU.physical={uniforms:/*@__PURE__*/np([nU.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:/*@__PURE__*/new es},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:/*@__PURE__*/new es},clearcoatNormalScale:{value:/*@__PURE__*/new eo(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:/*@__PURE__*/new es},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:/*@__PURE__*/new es},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:/*@__PURE__*/new es},sheen:{value:0},sheenColor:{value:/*@__PURE__*/new tk(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:/*@__PURE__*/new es},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:/*@__PURE__*/new es},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:/*@__PURE__*/new es},transmissionSamplerSize:{value:/*@__PURE__*/new eo},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:/*@__PURE__*/new es},attenuationDistance:{value:0},attenuationColor:{value:/*@__PURE__*/new tk(0)},specularColor:{value:/*@__PURE__*/new tk(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:/*@__PURE__*/new es},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:/*@__PURE__*/new es},anisotropyVector:{value:/*@__PURE__*/new eo},anisotropyMap:{value:null},anisotropyMapTransform:{value:/*@__PURE__*/new es}}]),vertexShader:nI.meshphysical_vert,fragmentShader:nI.meshphysical_frag};const nN={r:0,b:0,g:0};function nB(e,t,n,r,i,a,o){let s,A;let l=new tk(0),u=!0===a?0:1,c=null,h=0,d=null;function f(t,n){t.getRGB(nN,nm(e)),r.buffers.color.setClear(nN.r,nN.g,nN.b,n,o)}return{getClearColor:function(){return l},setClearColor:function(e,t=1){l.set(e),f(l,u=t)},getClearAlpha:function(){return u},setClearAlpha:function(e){f(l,u=e)},render:function(a,p){let m=!1,g=!0===p.isScene?p.background:null;if(g&&g.isTexture){let e=p.backgroundBlurriness>0;// use PMREM if the user wants to blur the background
g=(e?n:t).get(g)}null===g?f(l,u):g&&g.isColor&&(f(g,1),m=!0);let v=e.xr.getEnvironmentBlendMode();"additive"===v?r.buffers.color.setClear(0,0,0,1,o):"alpha-blend"===v&&r.buffers.color.setClear(0,0,0,0,o),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||306===g.mapping)?(void 0===A&&((A=new nc(new nd(1,1,1),new nv({name:"BackgroundCubeMaterial",uniforms:nf(nU.backgroundCube.uniforms),vertexShader:nU.backgroundCube.vertexShader,fragmentShader:nU.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),A.geometry.deleteAttribute("uv"),A.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},// add "envMap" material property so the renderer can evaluate it like for built-in materials
Object.defineProperty(A.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(A)),A.material.uniforms.envMap.value=g,A.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,A.material.uniforms.backgroundBlurriness.value=p.backgroundBlurriness,A.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,A.material.toneMapped=eg.getTransfer(g.colorSpace)!==H,(c!==g||h!==g.version||d!==e.toneMapping)&&(A.material.needsUpdate=!0,c=g,h=g.version,d=e.toneMapping),A.layers.enableAll(),// push to the pre-sorted opaque render list
a.unshift(A,A.geometry,A.material,0,0,null)):g&&g.isTexture&&(void 0===s&&((s=new nc(new nO(2,2),new nv({name:"BackgroundMaterial",uniforms:nf(nU.background.uniforms),vertexShader:nU.background.vertexShader,fragmentShader:nU.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),// add "map" material property so the renderer can evaluate it like for built-in materials
Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=g,s.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,s.material.toneMapped=eg.getTransfer(g.colorSpace)!==H,!0===g.matrixAutoUpdate&&g.updateMatrix(),s.material.uniforms.uvTransform.value.copy(g.matrix),(c!==g||h!==g.version||d!==e.toneMapping)&&(s.material.needsUpdate=!0,c=g,h=g.version,d=e.toneMapping),s.layers.enableAll(),// push to the pre-sorted opaque render list
a.unshift(s,s.geometry,s.material,0,0,null))}}}function nk(e,t,n,r){let i=e.getParameter(e.MAX_VERTEX_ATTRIBS),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),o=r.isWebGL2||null!==a,s={},A=d(null),l=A,u=!1;function c(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function h(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function d(e){let t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{// for backward compatibility on non-VAO support browser
geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function f(){let e=l.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function p(e){m(e,0)}function m(n,i){let a=l.newAttributes,o=l.enabledAttributes,s=l.attributeDivisors;if(a[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),s[n]!==i){let a=r.isWebGL2?e:t.get("ANGLE_instanced_arrays");a[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),s[n]=i}}function g(){let t=l.newAttributes,n=l.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function v(t,n,r,i,a,o,s){!0===s?e.vertexAttribIPointer(t,n,r,a,o):e.vertexAttribPointer(t,n,r,i,a,o)}function _(){y(),u=!0,l!==A&&c((l=A).object)}// for backward-compatibility
function y(){A.geometry=null,A.program=null,A.wireframe=!1}return{setup:function(i,A,h,_,y){let x=!1;if(o){let t=function(t,n,i){let o=!0===i.wireframe,A=s[t.id];void 0===A&&(A={},s[t.id]=A);let l=A[n.id];void 0===l&&(l={},A[n.id]=l);let u=l[o];return void 0===u&&(u=d(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),l[o]=u),u}(_,h,A);l!==t&&c((l=t).object),(x=function(e,t,n,r){let i=l.attributes,a=t.attributes,o=0,s=n.getAttributes();for(let t in s){let n=s[t];if(n.location>=0){let n=i[t],r=a[t];if(void 0===r&&("instanceMatrix"===t&&e.instanceMatrix&&(r=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(r=e.instanceColor)),void 0===n||n.attribute!==r||r&&n.data!==r.data)return!0;o++}}return l.attributesNum!==o||l.index!==r}(i,_,h,y))&&function(e,t,n,r){let i={},a=t.attributes,o=0,s=n.getAttributes();for(let t in s){let n=s[t];if(n.location>=0){let n=a[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));let r={};r.attribute=n,n&&n.data&&(r.data=n.data),i[t]=r,o++}}l.attributes=i,l.attributesNum=o,l.index=r}(i,_,h,y)}else{let e=!0===A.wireframe;(l.geometry!==_.id||l.program!==h.id||l.wireframe!==e)&&(l.geometry=_.id,l.program=h.id,l.wireframe=e,x=!0)}null!==y&&n.update(y,e.ELEMENT_ARRAY_BUFFER),(x||u)&&(u=!1,function(i,a,o,s){if(!1===r.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();let A=s.attributes,l=o.getAttributes(),u=a.defaultAttributeValues;for(let t in l){let a=l[t];if(a.location>=0){let o=A[t];if(void 0===o&&("instanceMatrix"===t&&i.instanceMatrix&&(o=i.instanceMatrix),"instanceColor"===t&&i.instanceColor&&(o=i.instanceColor)),void 0!==o){let t=o.normalized,A=o.itemSize,l=n.get(o);// TODO Attribute may not be available on context restore
if(void 0===l)continue;let u=l.buffer,c=l.type,h=l.bytesPerElement,d=!0===r.isWebGL2&&(c===e.INT||c===e.UNSIGNED_INT||1013===o.gpuType);if(o.isInterleavedBufferAttribute){let n=o.data,r=n.stride,l=o.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<a.locationSize;e++)m(a.location+e,n.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<a.locationSize;e++)p(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,u);for(let e=0;e<a.locationSize;e++)v(a.location+e,A/a.locationSize,c,t,r*h,(l+A/a.locationSize*e)*h,d)}else{if(o.isInstancedBufferAttribute){for(let e=0;e<a.locationSize;e++)m(a.location+e,o.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let e=0;e<a.locationSize;e++)p(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,u);for(let e=0;e<a.locationSize;e++)v(a.location+e,A/a.locationSize,c,t,A*h,A/a.locationSize*e*h,d)}}else if(void 0!==u){let n=u[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(a.location,n);break;case 3:e.vertexAttrib3fv(a.location,n);break;case 4:e.vertexAttrib4fv(a.location,n);break;default:e.vertexAttrib1fv(a.location,n)}}}}g()}(i,A,h,_),null!==y&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.get(y).buffer))},reset:_,resetDefaultState:y,dispose:function(){for(let e in _(),s){let t=s[e];for(let e in t){let n=t[e];for(let e in n)h(n[e].object),delete n[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0===s[e.id])return;let t=s[e.id];for(let e in t){let n=t[e];for(let e in n)h(n[e].object),delete n[e];delete t[e]}delete s[e.id]},releaseStatesOfProgram:function(e){for(let t in s){let n=s[t];if(void 0===n[e.id])continue;let r=n[e.id];for(let e in r)h(r[e].object),delete r[e];delete n[e.id]}},initAttributes:f,enableAttribute:p,disableUnusedAttributes:g}}function nF(e,t,n,r){let i;let a=r.isWebGL2;//
this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i,1)},this.renderInstances=function(r,o,s){let A,l;if(0!==s){if(a)A=e,l="drawArraysInstanced";else if(A=t.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===A){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}A[l](i,r,o,s),n.update(o,i,s)}}}function nz(e,t,n){let r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name,o=void 0!==n.precision?n.precision:"highp",s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);let A=a||t.has("WEBGL_draw_buffers"),l=!0===n.logarithmicDepthBuffer,u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),c=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_TEXTURE_SIZE),d=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),f=e.getParameter(e.MAX_VERTEX_ATTRIBS),p=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),m=e.getParameter(e.MAX_VARYING_VECTORS),g=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),v=c>0,_=a||t.has("OES_texture_float"),y=a?e.getParameter(e.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:A,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){let n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:l,maxTextures:u,maxVertexTextures:c,maxTextureSize:h,maxCubemapSize:d,maxAttributes:f,maxVertexUniforms:p,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:_,floatVertexTextures:v&&_,maxSamples:y}}function nG(e){let t=this,n=null,r=0,i=!1,a=!1,o=new nT,s=new es,A={value:null,needsUpdate:!1};function l(e,n,r,i){let a=null!==e?e.length:0,l=null;if(0!==a){if(l=A.value,!0!==i||null===l){let t=r+4*a,i=n.matrixWorldInverse;s.getNormalMatrix(i),(null===l||l.length<t)&&(l=new Float32Array(t));for(let t=0,n=r;t!==a;++t,n+=4)o.copy(e[t]).applyMatrix4(i,s),o.normal.toArray(l,n),l[n+3]=o.constant}A.value=l,A.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,l}this.uniform=A,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){let n=0!==e.length||t||// enable state of previous frame - the clipping code has to
// run another frame in order to reset the state:
0!==r||i;return i=t,r=e.length,n},this.beginShadows=function(){a=!0,l(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){n=l(e,t,0)},this.setState=function(o,s,u){let c=o.clippingPlanes,h=o.clipIntersection,d=o.clipShadows,f=e.get(o);if(i&&null!==c&&0!==c.length&&(!a||d)){let e=a?0:r,t=4*e,i=f.clippingState||null;A.value=i,i=l(c,s,t,u);for(let e=0;e!==t;++e)i[e]=n[e];f.clippingState=i,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=e}else // there's no local clipping
a?l(null):(A.value!==n&&(A.value=n,A.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0)}}function nH(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function r(e){let n=e.target;n.removeEventListener("dispose",r);let i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){let a=i.mapping;if(303===a||304===a){if(t.has(i)){let e=t.get(i).texture;return n(e,i.mapping)}{let a=i.image;if(!a||!(a.height>0))return null;{let o=new nM(a.height/2);return o.fromEquirectangularTexture(e,i),t.set(i,o),i.addEventListener("dispose",r),n(o.texture,i.mapping)}}}}return i},dispose:function(){t=new WeakMap}}}class nV extends n_{constructor(e=-1,t=1,n=1,r=-1,i=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,a=n+e,o=r+t,s=r-t;if(null!==this.view&&this.view.enabled){let e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,a=i+e*this.view.width,o-=t*this.view.offsetY,s=o-t*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}// The standard deviations (radians) associated with the extra mips. These are
// chosen to approximate a Trowbridge-Reitz distribution function times the
// geometric shadowing function. These sigma values squared must match the
// variance #defines in cube_uv_reflection_fragment.glsl.js.
const nj=[.125,.215,.35,.446,.526,.582],nW=/*@__PURE__*/new nV,nX=/*@__PURE__*/new tk;let nQ=null,nY=0,nZ=0;// Golden Ratio
const nK=(1+Math.sqrt(5))/2,nJ=1/nK,n$=[/*@__PURE__*/new eL(1,1,1),/*@__PURE__*/new eL(-1,1,1),/*@__PURE__*/new eL(1,1,-1),/*@__PURE__*/new eL(-1,1,-1),/*@__PURE__*/new eL(0,nK,nJ),/*@__PURE__*/new eL(0,nK,-nJ),/*@__PURE__*/new eL(nJ,0,nK),/*@__PURE__*/new eL(-nJ,0,nK),/*@__PURE__*/new eL(nK,nJ,0),/*@__PURE__*/new eL(-nK,nJ,0)];/**
 * This class generates a Prefiltered, Mipmapped Radiance Environment Map
 * (PMREM) from a cubeMap environment texture. This allows different levels of
 * blur to be quickly accessed based on material roughness. It is packed into a
 * special CubeUV format that allows us to perform custom interpolation so that
 * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap
 * chain, it only goes down to the LOD_MIN level (above), and then creates extra
 * even more filtered 'mips' at the same LOD_MIN resolution, associated with
 * higher roughness levels. In this way we maintain resolution to smoothly
 * interpolate diffuse lighting while limiting sampling computation.
 *
 * Paper: Fast, Accurate Image-Based Lighting
 * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view
*/class n0{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}/**
	 * Generates a PMREM from a supplied Scene, which can be faster than using an
	 * image if networking bandwidth is low. Optional sigma specifies a blur radius
	 * in radians to be applied to the scene before PMREM generation. Optional near
	 * and far planes ensure the scene is rendered in its entirety (the cubeCamera
	 * is placed at the origin).
	 */fromScene(e,t=0,n=.1,r=100){nQ=this._renderer.getRenderTarget(),nY=this._renderer.getActiveCubeFace(),nZ=this._renderer.getActiveMipmapLevel(),this._setSize(256);let i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,n,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}/**
	 * Generates a PMREM from an equirectangular texture, which can be either LDR
	 * or HDR. The ideal input image size is 1k (1024 x 512),
	 * as this matches best with the 256 x 256 cubemap output.
	 */fromEquirectangular(e,t=null){return this._fromTexture(e,t)}/**
	 * Generates a PMREM from an cubemap texture, which can be either LDR
	 * or HDR. The ideal input cube size is 256 x 256,
	 * as this matches best with the 256 x 256 cubemap output.
	 */fromCubemap(e,t=null){return this._fromTexture(e,t)}/**
	 * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during
	 * your texture's network fetch for increased concurrency.
	 */compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=n4(),this._compileMaterial(this._cubemapMaterial))}/**
	 * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during
	 * your texture's network fetch for increased concurrency.
	 */compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=n3(),this._compileMaterial(this._equirectMaterial))}/**
	 * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,
	 * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on
	 * one of them will cause any others to also become unusable.
	 */dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}// private interface
_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(nQ,nY,nZ),e.scissorTest=!1,n2(e,0,0,e.width,e.height)}_fromTexture(e,t){301===e.mapping||302===e.mapping?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),nQ=this._renderer.getRenderTarget(),nY=this._renderer.getActiveCubeFace(),nZ=this._renderer.getActiveMipmapLevel();let n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,colorSpace:k,depthBuffer:!1},r=n1(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=n1(e,t,n);let{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){let t=[],n=[],r=[],i=e,a=e-4+1+nj.length;for(let o=0;o<a;o++){let a=Math.pow(2,i);n.push(a);let s=1/a;o>e-4?s=nj[o-e+4-1]:0===o&&(s=0),r.push(s);let A=1/(a-2),l=-A,u=1+A,c=[l,l,u,l,u,u,l,l,u,u,l,u],h=new Float32Array(108),d=new Float32Array(72),f=new Float32Array(36);for(let e=0;e<6;e++){let t=e%3*2/3-1,n=e>2?0:-1,r=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];h.set(r,18*e),d.set(c,12*e);let i=[e,e,e,e,e,e];f.set(i,6*e)}let p=new t3;p.setAttribute("position",new tW(h,3)),p.setAttribute("uv",new tW(d,2)),p.setAttribute("faceIndex",new tW(f,1)),t.push(p),i>4&&i--}return{lodPlanes:t,sizeLods:n,sigmas:r}}(r)),this._blurMaterial=function(e,t,n){let r=new Float32Array(20),i=new eL(0,1,0),a=new nv({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:n5(),fragmentShader:/* glsl */`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1});return a}(r,e,t)}return r}_compileMaterial(e){let t=new nc(this._lodPlanes[0],e);this._renderer.compile(t,nW)}_sceneToCubeUV(e,t,n,r){let i=new ny(90,1,t,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,A=s.autoClear,l=s.toneMapping;s.getClearColor(nX),s.toneMapping=0,s.autoClear=!1;let u=new tH({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),c=new nc(new nd,u),h=!1,d=e.background;d?d.isColor&&(u.color.copy(d),e.background=null,h=!0):(u.color.copy(nX),h=!0);for(let t=0;t<6;t++){let n=t%3;0===n?(i.up.set(0,a[t],0),i.lookAt(o[t],0,0)):1===n?(i.up.set(0,0,a[t]),i.lookAt(0,o[t],0)):(i.up.set(0,a[t],0),i.lookAt(0,0,o[t]));let A=this._cubeSize;n2(r,n*A,t>2?A:0,A,A),s.setRenderTarget(r),h&&s.render(c,i),s.render(e,i)}c.geometry.dispose(),c.material.dispose(),s.toneMapping=l,s.autoClear=A,e.background=d}_textureToCubeUV(e,t){let n=this._renderer,r=301===e.mapping||302===e.mapping;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=n4()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=n3());let i=r?this._cubemapMaterial:this._equirectMaterial,a=new nc(this._lodPlanes[0],i),o=i.uniforms;o.envMap.value=e;let s=this._cubeSize;n2(t,0,0,3*s,2*s),n.setRenderTarget(t),n.render(a,nW)}_applyPMREM(e){let t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){let n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=n$[(t-1)%n$.length];this._blur(e,t-1,t,n,r)}t.autoClear=n}/**
	 * This is a two-pass Gaussian blur for a cubemap. Normally this is done
	 * vertically and horizontally, but this breaks down on a cube. Here we apply
	 * the blur latitudinally (around the poles), and then longitudinally (towards
	 * the poles) to approximate the orthogonally-separable blur. It is least
	 * accurate at the poles, but still does a decent job.
	 */_blur(e,t,n,r,i){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",i),this._halfBlur(a,e,n,n,r,"longitudinal",i)}_halfBlur(e,t,n,r,i,a,o){let s=this._renderer,A=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let l=new nc(this._lodPlanes[r],A),u=A.uniforms,c=this._sizeLods[n]-1,h=isFinite(i)?Math.PI/(2*c):2*Math.PI/39,d=i/h,f=isFinite(i)?1+Math.floor(3*d):20;f>20&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let p=[],m=0;for(let e=0;e<20;++e){let t=e/d,n=Math.exp(-t*t/2);p.push(n),0===e?m+=n:e<f&&(m+=2*n)}for(let e=0;e<p.length;e++)p[e]=p[e]/m;u.envMap.value=e.texture,u.samples.value=f,u.weights.value=p,u.latitudinal.value="latitudinal"===a,o&&(u.poleAxis.value=o);let{_lodMax:g}=this;u.dTheta.value=h,u.mipInt.value=g-n;let v=this._sizeLods[r],_=4*(this._cubeSize-v);n2(t,3*v*(r>g-4?r-g+4:0),_,3*v,2*v),s.setRenderTarget(t),s.render(l,nW)}}function n1(e,t,n){let r=new eC(e,t,n);return r.texture.mapping=306,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function n2(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function n3(){return new nv({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:n5(),fragmentShader:/* glsl */`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function n4(){return new nv({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:n5(),fragmentShader:/* glsl */`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function n5(){return/* glsl */`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function n6(e){let t=new WeakMap,n=null;function r(e){let n=e.target;n.removeEventListener("dispose",r);let i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){let a=i.mapping,o=303===a||304===a,s=301===a||302===a;// equirect/cube map to cubeUV conversion
if(o||s){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;let r=t.get(i);return null===n&&(n=new n0(e)),r=o?n.fromEquirectangular(i,r):n.fromCubemap(i,r),t.set(i,r),r.texture}if(t.has(i))return t.get(i).texture;{let a=i.image;if(!(o&&a&&a.height>0||s&&a&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(a)))return null;{null===n&&(n=new n0(e));let a=o?n.fromEquirectangular(i):n.fromCubemap(i);return t.set(i,a),i.addEventListener("dispose",r),a.texture}}}}return i},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function n8(e){let t={};function n(n){let r;if(void 0!==t[n])return t[n];switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){let t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function n7(e,t,n,r){let i={},a=new WeakMap;function o(e){let s=e.target;for(let e in null!==s.index&&t.remove(s.index),s.attributes)t.remove(s.attributes[e]);for(let e in s.morphAttributes){let n=s.morphAttributes[e];for(let e=0,r=n.length;e<r;e++)t.remove(n[e])}s.removeEventListener("dispose",o),delete i[s.id];let A=a.get(s);A&&(t.remove(A),a.delete(s)),r.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,//
n.memory.geometries--}function s(e){let n=[],r=e.index,i=e.attributes.position,o=0;if(null!==r){let e=r.array;o=r.version;for(let t=0,r=e.length;t<r;t+=3){let r=e[t+0],i=e[t+1],a=e[t+2];n.push(r,i,i,a,a,r)}}else{if(void 0===i)return;let e=i.array;o=i.version;for(let t=0,r=e.length/3-1;t<r;t+=3){let e=t+0,r=t+1,i=t+2;n.push(e,r,r,i,i,e)}}let s=new(el(n)?tQ:tX)(n,1);s.version=o;// Updating index buffer in VAO now. See WebGLBindingStates
//
let A=a.get(e);A&&t.remove(A),//
a.set(e,s)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",o),i[t.id]=!0,n.memory.geometries++),t},update:function(n){let r=n.attributes;// Updating index buffer in VAO now. See WebGLBindingStates.
for(let n in r)t.update(r[n],e.ARRAY_BUFFER);// morph targets
let i=n.morphAttributes;for(let n in i){let r=i[n];for(let n=0,i=r.length;n<i;n++)t.update(r[n],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){let t=a.get(e);if(t){let n=e.index;null!==n&&t.version<n.version&&s(e)}else s(e);return a.get(e)}}}function n9(e,t,n,r){let i,a,o;let s=r.isWebGL2;//
this.setMode=function(e){i=e},this.setIndex=function(e){a=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(i,r,a,t*o),n.update(r,i,1)},this.renderInstances=function(r,A,l){let u,c;if(0!==l){if(s)u=e,c="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===u){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[c](i,A,a,r*o,l),n.update(A,i,l)}}}function re(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,r,i){switch(t.calls++,r){case e.TRIANGLES:t.triangles+=i*(n/3);break;case e.LINES:t.lines+=i*(n/2);break;case e.LINE_STRIP:t.lines+=i*(n-1);break;case e.LINE_LOOP:t.lines+=i*n;break;case e.POINTS:t.points+=i*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function rt(e,t){return e[0]-t[0]}function rn(e,t){return Math.abs(t[1])-Math.abs(e[1])}function rr(e,t,n){let r={},i=new Float32Array(8),a=new WeakMap,o=new eS,s=[];for(let e=0;e<8;e++)s[e]=[e,0];return{update:function(A,l,u){let c=A.morphTargetInfluences;if(!0===t.isWebGL2){// instead of using attributes, the WebGL 2 code path encodes morph targets
// into an array of data textures. Each layer represents a single morph target.
let r=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,i=void 0!==r?r.length:0,s=a.get(l);if(void 0===s||s.count!==i){void 0!==s&&s.texture.dispose();let e=void 0!==l.morphAttributes.position,n=void 0!==l.morphAttributes.normal,r=void 0!==l.morphAttributes.color,A=l.morphAttributes.position||[],u=l.morphAttributes.normal||[],c=l.morphAttributes.color||[],h=0;!0===e&&(h=1),!0===n&&(h=2),!0===r&&(h=3);let d=l.attributes.position.count*h,f=1;d>t.maxTextureSize&&(f=Math.ceil(d/t.maxTextureSize),d=t.maxTextureSize);let p=new Float32Array(d*f*4*i),m=new eR(p,d,f,i);m.type=1015,m.needsUpdate=!0;// fill buffer
let g=4*h;for(let t=0;t<i;t++){let i=A[t],a=u[t],s=c[t],l=d*f*4*t;for(let t=0;t<i.count;t++){let A=t*g;!0===e&&(o.fromBufferAttribute(i,t),p[l+A+0]=o.x,p[l+A+1]=o.y,p[l+A+2]=o.z,p[l+A+3]=0),!0===n&&(o.fromBufferAttribute(a,t),p[l+A+4]=o.x,p[l+A+5]=o.y,p[l+A+6]=o.z,p[l+A+7]=0),!0===r&&(o.fromBufferAttribute(s,t),p[l+A+8]=o.x,p[l+A+9]=o.y,p[l+A+10]=o.z,p[l+A+11]=4===s.itemSize?o.w:1)}}s={count:i,texture:m,size:new eo(d,f)},a.set(l,s),l.addEventListener("dispose",function e(){m.dispose(),a.delete(l),l.removeEventListener("dispose",e)})}//
let A=0;for(let e=0;e<c.length;e++)A+=c[e];let h=l.morphTargetsRelative?1:1-A;u.getUniforms().setValue(e,"morphTargetBaseInfluence",h),u.getUniforms().setValue(e,"morphTargetInfluences",c),u.getUniforms().setValue(e,"morphTargetsTexture",s.texture,n),u.getUniforms().setValue(e,"morphTargetsTextureSize",s.size)}else{// When object doesn't have morph target influences defined, we treat it as a 0-length array
// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences
let t=void 0===c?0:c.length,n=r[l.id];if(void 0===n||n.length!==t){// initialise list
n=[];for(let e=0;e<t;e++)n[e]=[e,0];r[l.id]=n}// Collect influences
for(let e=0;e<t;e++){let t=n[e];t[0]=e,t[1]=c[e]}n.sort(rn);for(let e=0;e<8;e++)e<t&&n[e][1]?(s[e][0]=n[e][0],s[e][1]=n[e][1]):(s[e][0]=Number.MAX_SAFE_INTEGER,s[e][1]=0);s.sort(rt);let a=l.morphAttributes.position,o=l.morphAttributes.normal,A=0;for(let e=0;e<8;e++){let t=s[e],n=t[0],r=t[1];n!==Number.MAX_SAFE_INTEGER&&r?(a&&l.getAttribute("morphTarget"+e)!==a[n]&&l.setAttribute("morphTarget"+e,a[n]),o&&l.getAttribute("morphNormal"+e)!==o[n]&&l.setAttribute("morphNormal"+e,o[n]),i[e]=r,A+=r):(a&&!0===l.hasAttribute("morphTarget"+e)&&l.deleteAttribute("morphTarget"+e),o&&!0===l.hasAttribute("morphNormal"+e)&&l.deleteAttribute("morphNormal"+e),i[e]=0)}// GLSL shader uses formula baseinfluence * base + sum(target * influence)
// This allows us to switch between absolute morphs and relative morphs without changing shader code
// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)
let h=l.morphTargetsRelative?1:1-A;u.getUniforms().setValue(e,"morphTargetBaseInfluence",h),u.getUniforms().setValue(e,"morphTargetInfluences",i)}}}}function ri(e,t,n,r){let i=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(o){let s=r.render.frame,A=o.geometry,l=t.get(o,A);if(i.get(l)!==s&&(t.update(l),i.set(l,s)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",a)&&o.addEventListener("dispose",a),i.get(o)!==s&&(n.update(o.instanceMatrix,e.ARRAY_BUFFER),null!==o.instanceColor&&n.update(o.instanceColor,e.ARRAY_BUFFER),i.set(o,s))),o.isSkinnedMesh){let e=o.skeleton;i.get(e)!==s&&(e.update(),i.set(e,s))}return l},dispose:function(){i=new WeakMap}}}/**
 * Uniforms of a program.
 * Those form a tree structure with a special top-level container for the root,
 * which you get by calling 'new WebGLUniforms( gl, program )'.
 *
 *
 * Properties of inner nodes including the top-level container:
 *
 * .seq - array of nested uniforms
 * .map - nested uniforms by name
 *
 *
 * Methods of all nodes except the top-level container:
 *
 * .setValue( gl, value, [textures] )
 *
 * 		uploads a uniform value(s)
 *  	the 'textures' parameter is needed for sampler uniforms
 *
 *
 * Static methods of the top-level container (textures factorizations):
 *
 * .upload( gl, seq, values, textures )
 *
 * 		sets uniforms in 'seq' to 'values[id].value'
 *
 * .seqWithValue( seq, values ) : filteredSeq
 *
 * 		filters 'seq' entries with corresponding entry in values
 *
 *
 * Methods of the top-level container (textures factorizations):
 *
 * .setValue( gl, name, value, textures )
 *
 * 		sets uniform with  name 'name' to 'value'
 *
 * .setOptional( gl, obj, prop )
 *
 * 		like .set for an optional property of the object
 *
 */const ra=/*@__PURE__*/new eE,ro=/*@__PURE__*/new eR,rs=/*@__PURE__*/new class extends eE{constructor(e=null,t=1,n=1,r=1){// We're going to add .setXXX() methods for setting properties later.
// Users can still set in DataTexture3D directly.
//
//	const texture = new THREE.DataTexture3D( data, width, height, depth );
// 	texture.anisotropy = 16;
//
// See #14839
super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},rA=/*@__PURE__*/new nb,rl=[],ru=[],rc=new Float32Array(16),rh=new Float32Array(9),rd=new Float32Array(4);// Flattening for arrays of vectors and matrices
function rf(e,t,n){let r=e[0];if(r<=0||r>0)return e;// unoptimized: ! isNaN( firstElem )
// see http://jacksondunstan.com/articles/983
let i=t*n,a=rl[i];if(void 0===a&&(a=new Float32Array(i),rl[i]=a),0!==t){r.toArray(a,0);for(let r=1,i=0;r!==t;++r)i+=n,e[r].toArray(a,i)}return a}function rp(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function rm(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}// Texture unit allocation
function rg(e,t){let n=ru[t];void 0===n&&(n=new Int32Array(t),ru[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}// --- Setters ---
// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.
// Single scalar
function rv(e,t){let n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}// Single float vector (from flat array or THREE.VectorN)
function r_(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(rp(n,t))return;e.uniform2fv(this.addr,t),rm(n,t)}}function ry(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(rp(n,t))return;e.uniform3fv(this.addr,t),rm(n,t)}}function rx(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(rp(n,t))return;e.uniform4fv(this.addr,t),rm(n,t)}}// Single matrix (from flat array or THREE.MatrixN)
function rb(e,t){let n=this.cache,r=t.elements;if(void 0===r){if(rp(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),rm(n,t)}else{if(rp(n,r))return;rd.set(r),e.uniformMatrix2fv(this.addr,!1,rd),rm(n,r)}}function rM(e,t){let n=this.cache,r=t.elements;if(void 0===r){if(rp(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),rm(n,t)}else{if(rp(n,r))return;rh.set(r),e.uniformMatrix3fv(this.addr,!1,rh),rm(n,r)}}function rw(e,t){let n=this.cache,r=t.elements;if(void 0===r){if(rp(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),rm(n,t)}else{if(rp(n,r))return;rc.set(r),e.uniformMatrix4fv(this.addr,!1,rc),rm(n,r)}}// Single integer / boolean
function rE(e,t){let n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}// Single integer / boolean vector (from flat array or THREE.VectorN)
function rS(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(rp(n,t))return;e.uniform2iv(this.addr,t),rm(n,t)}}function rT(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(rp(n,t))return;e.uniform3iv(this.addr,t),rm(n,t)}}function rC(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(rp(n,t))return;e.uniform4iv(this.addr,t),rm(n,t)}}// Single unsigned integer
function rR(e,t){let n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}// Single unsigned integer vector (from flat array or THREE.VectorN)
function rP(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(rp(n,t))return;e.uniform2uiv(this.addr,t),rm(n,t)}}function rL(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(rp(n,t))return;e.uniform3uiv(this.addr,t),rm(n,t)}}function rD(e,t){let n=this.cache;if(void 0!==t.x)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(rp(n,t))return;e.uniform4uiv(this.addr,t),rm(n,t)}}// Single texture (2D / Cube)
function rO(e,t,n){let r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(t||ra,i)}function rI(e,t,n){let r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||rs,i)}function rq(e,t,n){let r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(t||rA,i)}function rU(e,t,n){let r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||ro,i)}// Array of scalars
function rN(e,t){e.uniform1fv(this.addr,t)}// Array of vectors (from flat array or array of THREE.VectorN)
function rB(e,t){let n=rf(t,this.size,2);e.uniform2fv(this.addr,n)}function rk(e,t){let n=rf(t,this.size,3);e.uniform3fv(this.addr,n)}function rF(e,t){let n=rf(t,this.size,4);e.uniform4fv(this.addr,n)}// Array of matrices (from flat array or array of THREE.MatrixN)
function rz(e,t){let n=rf(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function rG(e,t){let n=rf(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function rH(e,t){let n=rf(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}// Array of integer / boolean
function rV(e,t){e.uniform1iv(this.addr,t)}// Array of integer / boolean vectors (from flat array)
function rj(e,t){e.uniform2iv(this.addr,t)}function rW(e,t){e.uniform3iv(this.addr,t)}function rX(e,t){e.uniform4iv(this.addr,t)}// Array of unsigned integer
function rQ(e,t){e.uniform1uiv(this.addr,t)}// Array of unsigned integer vectors (from flat array)
function rY(e,t){e.uniform2uiv(this.addr,t)}function rZ(e,t){e.uniform3uiv(this.addr,t)}function rK(e,t){e.uniform4uiv(this.addr,t)}// Array of textures (2D / 3D / Cube / 2DArray)
function rJ(e,t,n){let r=this.cache,i=t.length,a=rg(n,i);rp(r,a)||(e.uniform1iv(this.addr,a),rm(r,a));for(let e=0;e!==i;++e)n.setTexture2D(t[e]||ra,a[e])}function r$(e,t,n){let r=this.cache,i=t.length,a=rg(n,i);rp(r,a)||(e.uniform1iv(this.addr,a),rm(r,a));for(let e=0;e!==i;++e)n.setTexture3D(t[e]||rs,a[e])}function r0(e,t,n){let r=this.cache,i=t.length,a=rg(n,i);rp(r,a)||(e.uniform1iv(this.addr,a),rm(r,a));for(let e=0;e!==i;++e)n.setTextureCube(t[e]||rA,a[e])}function r1(e,t,n){let r=this.cache,i=t.length,a=rg(n,i);rp(r,a)||(e.uniform1iv(this.addr,a),rm(r,a));for(let e=0;e!==i;++e)n.setTexture2DArray(t[e]||ro,a[e])}// --- Uniform Classes ---
class r2{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=// Helper to pick the right setter for the singular case
function(e){switch(e){case 5126:return rv;// FLOAT
case 35664:return r_;// _VEC2
case 35665:return ry;// _VEC3
case 35666:return rx;// _VEC4
case 35674:return rb;// _MAT2
case 35675:return rM;// _MAT3
case 35676:return rw;// _MAT4
case 5124:case 35670:return rE;// INT, BOOL
case 35667:case 35671:return rS;// _VEC2
case 35668:case 35672:return rT;// _VEC3
case 35669:case 35673:return rC;// _VEC4
case 5125:return rR;// UINT
case 36294:return rP;// _VEC2
case 36295:return rL;// _VEC3
case 36296:return rD;// _VEC4
case 35678:case 36198:case 36298:case 36306:case 35682:return rO;case 35679:case 36299:case 36307:return rI;case 35680:case 36300:case 36308:case 36293:return rq;case 36289:case 36303:case 36311:case 36292:return rU}}(t.type);// this.path = activeInfo.name; // DEBUG
}}class r3{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=// Helper to pick the right setter for a pure (bottom-level) array
function(e){switch(e){case 5126:return rN;// FLOAT
case 35664:return rB;// _VEC2
case 35665:return rk;// _VEC3
case 35666:return rF;// _VEC4
case 35674:return rz;// _MAT2
case 35675:return rG;// _MAT3
case 35676:return rH;// _MAT4
case 5124:case 35670:return rV;// INT, BOOL
case 35667:case 35671:return rj;// _VEC2
case 35668:case 35672:return rW;// _VEC3
case 35669:case 35673:return rX;// _VEC4
case 5125:return rQ;// UINT
case 36294:return rY;// _VEC2
case 36295:return rZ;// _VEC3
case 36296:return rK;// _VEC4
case 35678:case 36198:case 36298:case 36306:case 35682:return rJ;case 35679:case 36299:case 36307:return r$;case 35680:case 36300:case 36308:case 36293:return r0;case 36289:case 36303:case 36311:case 36292:return r1}}(t.type);// this.path = activeInfo.name; // DEBUG
}}class r4{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){let r=this.seq;for(let i=0,a=r.length;i!==a;++i){let a=r[i];a.setValue(e,t[a.id],n)}}}// --- Top-level ---
// Parser - builds up the property tree from the path strings
const r5=/(\w+)(\])?(\[|\.)?/g;// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.
function r6(e,t){e.seq.push(t),e.map[t.id]=t}// Root Container
class r8{constructor(e,t){this.seq=[],this.map={};let n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){let n=e.getActiveUniform(t,r),i=e.getUniformLocation(t,n.name);!function(e,t,n){let r=e.name,i=r.length;for(// reset RegExp object, because of the early exit of a previous run
r5.lastIndex=0;;){let a=r5.exec(r),o=r5.lastIndex,s=a[1],A="]"===a[2],l=a[3];if(A&&(s|=0),void 0===l||"["===l&&o+2===i){// bare name or "pure" bottom-level array "[0]" suffix
r6(n,void 0===l?new r2(s,e,t):new r3(s,e,t));break}{// step into inner node / create it in case it doesn't exist
let e=n.map,t=e[s];void 0===t&&r6(n,t=new r4(s)),n=t}}}(n,i,this)}}setValue(e,t,n,r){let i=this.map[t];void 0!==i&&i.setValue(e,n,r)}setOptional(e,t,n){let r=t[n];void 0!==r&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let i=0,a=t.length;i!==a;++i){let a=t[i],o=n[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,r)}}static seqWithValue(e,t){let n=[];for(let r=0,i=e.length;r!==i;++r){let i=e[r];i.id in t&&n.push(i)}return n}}function r7(e,t,n){let r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}let r9=0;function ie(e,t,n){let r=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";let a=/ERROR: 0:(\d+)/.exec(i);if(!a)return i;{// --enable-privileged-webgl-extension
// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );
let r=parseInt(a[1]);return n.toUpperCase()+"\n\n"+i+"\n\n"+function(e,t){let n=e.split("\n"),r=[],i=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let e=i;e<a;e++){let i=e+1;r.push(`${i===t?">":" "} ${i}: ${n[e]}`)}return r.join("\n")}(e.getShaderSource(t),r)}}function it(e){return""!==e}function ir(e,t){let n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function ii(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}// Resolve Includes
const ia=/^[ \t]*#include +<([\w\d./]+)>/gm;function io(e){return e.replace(ia,iA)}const is=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function iA(e,t){let n=nI[t];if(void 0===n){let e=is.get(t);if(void 0!==e)n=nI[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e);else throw Error("Can not resolve #include <"+t+">")}return io(n)}// Unroll Loops
const il=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function iu(e){return e.replace(il,ic)}function ic(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}//
function ih(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function id(e,t,n,r){let i,a,o,s,A,l;// TODO Send this event to Three.js DevTools
// console.log( 'WebGLProgram', cacheKey );
let u=e.getContext(),c=n.defines,h=n.vertexShader,d=n.fragmentShader,f=(A="SHADOWMAP_TYPE_BASIC",1===n.shadowMapType?A="SHADOWMAP_TYPE_PCF":2===n.shadowMapType?A="SHADOWMAP_TYPE_PCF_SOFT":3===n.shadowMapType&&(A="SHADOWMAP_TYPE_VSM"),A),p=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),m=(l="ENVMAP_MODE_REFLECTION",n.envMap&&302===n.envMapMode&&(l="ENVMAP_MODE_REFRACTION"),l),g=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),v=function(e){let t=e.envMapCubeUVHeight;if(null===t)return null;let n=Math.log2(t)-2,r=1/(3*Math.max(Math.pow(2,n),112));return{texelWidth:r,texelHeight:1/t,maxMip:n}}(n),_=n.isWebGL2?"":function(e){let t=[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.normalMapTangentSpace||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(it).join("\n")}(n),y=function(e){let t=[];for(let n in e){let r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(c),x=u.createProgram(),b=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((i=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,y].filter(it).join("\n")).length>0&&(i+="\n"),(a=[_,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,y].filter(it).join("\n")).length>0&&(a+="\n")):(i=[ih(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,y,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+m:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",//
n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",//
n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(it).join("\n"),a=[_,ih(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,y,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+p:"",n.envMap?"#define "+m:"",n.envMap?"#define "+g:"",v?"#define CUBEUV_TEXEL_WIDTH "+v.texelWidth:"",v?"#define CUBEUV_TEXEL_HEIGHT "+v.texelHeight:"",v?"#define CUBEUV_MAX_MIP "+v.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+f:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?nI.tonemapping_pars_fragment:"",0!==n.toneMapping?function(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",nI.colorspace_pars_fragment,function(e,t){let n=function(e){let t;let n=eg.getPrimaries(eg.workingColorSpace),r=eg.getPrimaries(e);switch(n===r?t="":"p3"===n&&r===V?t="LinearDisplayP3ToLinearSRGB":n===V&&"p3"===r&&(t="LinearSRGBToLinearDisplayP3"),e){case k:case z:return[t,"LinearTransferOETF"];case B:case F:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[t,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(it).join("\n")),h=ii(h=ir(h=io(h),n),n),d=ii(d=ir(d=io(d),n),n),h=iu(h),d=iu(d),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(// GLSL 3.0 conversion for built-in materials and ShaderMaterial
b="#version 300 es\n",i="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+i,a=["precision mediump sampler2DArray;","#define varying in",n.glslVersion===j?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===j?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);let M=b+i+h,w=b+a+d,E=r7(u,u.VERTEX_SHADER,M),S=r7(u,u.FRAGMENT_SHADER,w);function T(t){// check for link errors
if(e.debug.checkShaderErrors){let n=u.getProgramInfoLog(x).trim(),r=u.getShaderInfoLog(E).trim(),o=u.getShaderInfoLog(S).trim(),s=!0,A=!0;if(!1===u.getProgramParameter(x,u.LINK_STATUS)){if(s=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(u,x,E,S);else{// default error reporting
let e=ie(u,E,"vertex"),t=ie(u,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+u.getError()+" - VALIDATE_STATUS "+u.getProgramParameter(x,u.VALIDATE_STATUS)+"\n\nProgram Info Log: "+n+"\n"+e+"\n"+t)}}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):(""===r||""===o)&&(A=!1);A&&(t.diagnostics={runnable:s,programLog:n,vertexShader:{log:r,prefix:i},fragmentShader:{log:o,prefix:a}})}// Clean up
// Crashes in iOS9 and iOS10. #18402
// gl.detachShader( program, glVertexShader );
// gl.detachShader( program, glFragmentShader );
u.deleteShader(E),u.deleteShader(S),o=new r8(u,x),s=function(e,t){let n={},r=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let i=0;i<r;i++){let r=e.getActiveAttrib(t,i),a=r.name,o=1;r.type===e.FLOAT_MAT2&&(o=2),r.type===e.FLOAT_MAT3&&(o=3),r.type===e.FLOAT_MAT4&&(o=4),// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );
n[a]={type:r.type,location:e.getAttribLocation(t,a),locationSize:o}}return n}(u,x)}u.attachShader(x,E),u.attachShader(x,S),void 0!==n.index0AttributeName?u.bindAttribLocation(x,0,n.index0AttributeName):!0===n.morphTargets&&u.bindAttribLocation(x,0,"position"),u.linkProgram(x),this.getUniforms=function(){return void 0===o&&T(this),o},this.getAttributes=function(){return void 0===s&&T(this),s};// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,
// flag the program as ready immediately. It may cause a stall when it's first used.
let C=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===C&&(C=u.getProgramParameter(x,37297)),C},// free resource
this.destroy=function(){r.releaseStatesOfProgram(this),u.deleteProgram(x),this.program=void 0},//
this.type=n.shaderType,this.name=n.shaderName,this.id=r9++,this.cacheKey=t,this.usedTimes=1,this.program=x,this.vertexShader=E,this.fragmentShader=S,this}let ip=0;class im{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(e){let t=this.materialCache.get(e);for(let e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){let t=this.shaderCache,n=t.get(e);return void 0===n&&(n=new ig(e),t.set(e,n)),n}}class ig{constructor(e){this.id=ip++,this.code=e,this.usedTimes=0}}function iv(e,t,n,r,i,a,o){let s=new tA,A=new im,l=[],u=i.isWebGL2,c=i.logarithmicDepthBuffer,h=i.vertexTextures,d=i.precision,f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(e){return 0===e?"uv":`uv${e}`}return{getParameters:function(a,s,l,m,g){let v,_,y,x;let b=m.fog,M=g.geometry,w=a.isMeshStandardMaterial?m.environment:null,E=(a.isMeshStandardMaterial?n:t).get(a.envMap||w),S=E&&306===E.mapping?E.image.height:null,T=f[a.type];null!==a.precision&&(d=i.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",d,"instead.");//
let C=M.morphAttributes.position||M.morphAttributes.normal||M.morphAttributes.color,R=void 0!==C?C.length:0,P=0;if(void 0!==M.morphAttributes.position&&(P=1),void 0!==M.morphAttributes.normal&&(P=2),void 0!==M.morphAttributes.color&&(P=3),T){let e=nU[T];v=e.vertexShader,_=e.fragmentShader}else v=a.vertexShader,_=a.fragmentShader,A.update(a),y=A.getVertexShaderID(a),x=A.getFragmentShaderID(a);let L=e.getRenderTarget(),D=!0===g.isInstancedMesh,O=!!a.map,I=!!a.matcap,q=!!E,U=!!a.aoMap,N=!!a.lightMap,B=!!a.bumpMap,F=!!a.normalMap,z=!!a.displacementMap,G=!!a.emissiveMap,V=!!a.metalnessMap,j=!!a.roughnessMap,W=a.anisotropy>0,X=a.clearcoat>0,Q=a.iridescence>0,Y=a.sheen>0,Z=a.transmission>0,K=W&&!!a.anisotropyMap,J=X&&!!a.clearcoatMap,$=X&&!!a.clearcoatNormalMap,ee=X&&!!a.clearcoatRoughnessMap,et=Q&&!!a.iridescenceMap,en=Q&&!!a.iridescenceThicknessMap,er=Y&&!!a.sheenColorMap,ei=Y&&!!a.sheenRoughnessMap,ea=!!a.specularMap,eo=!!a.specularColorMap,es=!!a.specularIntensityMap,eA=Z&&!!a.transmissionMap,el=Z&&!!a.thicknessMap,eu=!!a.gradientMap,ec=!!a.alphaMap,eh=a.alphaTest>0,ed=!!a.alphaHash,ef=!!a.extensions,ep=!!M.attributes.uv1,em=!!M.attributes.uv2,ev=!!M.attributes.uv3,e_=0;a.toneMapped&&(null===L||!0===L.isXRRenderTarget)&&(e_=e.toneMapping);let ey={isWebGL2:u,shaderID:T,shaderType:a.type,shaderName:a.name,vertexShader:v,fragmentShader:_,defines:a.defines,customVertexShaderID:y,customFragmentShaderID:x,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:d,instancing:D,instancingColor:D&&null!==g.instanceColor,supportsVertexTextures:h,outputColorSpace:null===L?e.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:k,map:O,matcap:I,envMap:q,envMapMode:q&&E.mapping,envMapCubeUVHeight:S,aoMap:U,lightMap:N,bumpMap:B,normalMap:F,displacementMap:h&&z,emissiveMap:G,normalMapObjectSpace:F&&1===a.normalMapType,normalMapTangentSpace:F&&0===a.normalMapType,metalnessMap:V,roughnessMap:j,anisotropy:W,anisotropyMap:K,clearcoat:X,clearcoatMap:J,clearcoatNormalMap:$,clearcoatRoughnessMap:ee,iridescence:Q,iridescenceMap:et,iridescenceThicknessMap:en,sheen:Y,sheenColorMap:er,sheenRoughnessMap:ei,specularMap:ea,specularColorMap:eo,specularIntensityMap:es,transmission:Z,transmissionMap:eA,thicknessMap:el,gradientMap:eu,opaque:!1===a.transparent&&1===a.blending,alphaMap:ec,alphaTest:eh,alphaHash:ed,combine:a.combine,//
mapUv:O&&p(a.map.channel),aoMapUv:U&&p(a.aoMap.channel),lightMapUv:N&&p(a.lightMap.channel),bumpMapUv:B&&p(a.bumpMap.channel),normalMapUv:F&&p(a.normalMap.channel),displacementMapUv:z&&p(a.displacementMap.channel),emissiveMapUv:G&&p(a.emissiveMap.channel),metalnessMapUv:V&&p(a.metalnessMap.channel),roughnessMapUv:j&&p(a.roughnessMap.channel),anisotropyMapUv:K&&p(a.anisotropyMap.channel),clearcoatMapUv:J&&p(a.clearcoatMap.channel),clearcoatNormalMapUv:$&&p(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ee&&p(a.clearcoatRoughnessMap.channel),iridescenceMapUv:et&&p(a.iridescenceMap.channel),iridescenceThicknessMapUv:en&&p(a.iridescenceThicknessMap.channel),sheenColorMapUv:er&&p(a.sheenColorMap.channel),sheenRoughnessMapUv:ei&&p(a.sheenRoughnessMap.channel),specularMapUv:ea&&p(a.specularMap.channel),specularColorMapUv:eo&&p(a.specularColorMap.channel),specularIntensityMapUv:es&&p(a.specularIntensityMap.channel),transmissionMapUv:eA&&p(a.transmissionMap.channel),thicknessMapUv:el&&p(a.thicknessMap.channel),alphaMapUv:ec&&p(a.alphaMap.channel),//
vertexTangents:!!M.attributes.tangent&&(F||W),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!M.attributes.color&&4===M.attributes.color.itemSize,vertexUv1s:ep,vertexUv2s:em,vertexUv3s:ev,pointsUvs:!0===g.isPoints&&!!M.attributes.uv&&(O||ec),fog:!!b,useFog:!0===a.fog,fogExp2:b&&b.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:c,skinning:!0===g.isSkinnedMesh,morphTargets:void 0!==M.morphAttributes.position,morphNormals:void 0!==M.morphAttributes.normal,morphColors:void 0!==M.morphAttributes.color,morphTargetsCount:R,morphTextureStride:P,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numSpotLightMaps:s.spotLightMap.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numSpotLightShadowsWithMaps:s.numSpotLightShadowsWithMaps,numLightProbes:s.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&l.length>0,shadowMapType:e.shadowMap.type,toneMapping:e_,useLegacyLights:e._useLegacyLights,decodeVideoTexture:O&&!0===a.map.isVideoTexture&&eg.getTransfer(a.map.colorSpace)===H,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:ef&&!0===a.extensions.derivatives,extensionFragDepth:ef&&!0===a.extensions.fragDepth,extensionDrawBuffers:ef&&!0===a.extensions.drawBuffers,extensionShaderTextureLOD:ef&&!0===a.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||r.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:r.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()};return ey},getProgramCacheKey:function(t){let n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(let e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(n.push(t.precision),n.push(t.outputColorSpace),n.push(t.envMapMode),n.push(t.envMapCubeUVHeight),n.push(t.mapUv),n.push(t.alphaMapUv),n.push(t.lightMapUv),n.push(t.aoMapUv),n.push(t.bumpMapUv),n.push(t.normalMapUv),n.push(t.displacementMapUv),n.push(t.emissiveMapUv),n.push(t.metalnessMapUv),n.push(t.roughnessMapUv),n.push(t.anisotropyMapUv),n.push(t.clearcoatMapUv),n.push(t.clearcoatNormalMapUv),n.push(t.clearcoatRoughnessMapUv),n.push(t.iridescenceMapUv),n.push(t.iridescenceThicknessMapUv),n.push(t.sheenColorMapUv),n.push(t.sheenRoughnessMapUv),n.push(t.specularMapUv),n.push(t.specularColorMapUv),n.push(t.specularIntensityMapUv),n.push(t.transmissionMapUv),n.push(t.thicknessMapUv),n.push(t.combine),n.push(t.fogExp2),n.push(t.sizeAttenuation),n.push(t.morphTargetsCount),n.push(t.morphAttributeCount),n.push(t.numDirLights),n.push(t.numPointLights),n.push(t.numSpotLights),n.push(t.numSpotLightMaps),n.push(t.numHemiLights),n.push(t.numRectAreaLights),n.push(t.numDirLightShadows),n.push(t.numPointLightShadows),n.push(t.numSpotLightShadows),n.push(t.numSpotLightShadowsWithMaps),n.push(t.numLightProbes),n.push(t.shadowMapType),n.push(t.toneMapping),n.push(t.numClippingPlanes),n.push(t.numClipIntersection),n.push(t.depthPacking),s.disableAll(),t.isWebGL2&&s.enable(0),t.supportsVertexTextures&&s.enable(1),t.instancing&&s.enable(2),t.instancingColor&&s.enable(3),t.matcap&&s.enable(4),t.envMap&&s.enable(5),t.normalMapObjectSpace&&s.enable(6),t.normalMapTangentSpace&&s.enable(7),t.clearcoat&&s.enable(8),t.iridescence&&s.enable(9),t.alphaTest&&s.enable(10),t.vertexColors&&s.enable(11),t.vertexAlphas&&s.enable(12),t.vertexUv1s&&s.enable(13),t.vertexUv2s&&s.enable(14),t.vertexUv3s&&s.enable(15),t.vertexTangents&&s.enable(16),t.anisotropy&&s.enable(17),t.alphaHash&&s.enable(18),n.push(s.mask),s.disableAll(),t.fog&&s.enable(0),t.useFog&&s.enable(1),t.flatShading&&s.enable(2),t.logarithmicDepthBuffer&&s.enable(3),t.skinning&&s.enable(4),t.morphTargets&&s.enable(5),t.morphNormals&&s.enable(6),t.morphColors&&s.enable(7),t.premultipliedAlpha&&s.enable(8),t.shadowMapEnabled&&s.enable(9),t.useLegacyLights&&s.enable(10),t.doubleSided&&s.enable(11),t.flipSided&&s.enable(12),t.useDepthPacking&&s.enable(13),t.dithering&&s.enable(14),t.transmission&&s.enable(15),t.sheen&&s.enable(16),t.opaque&&s.enable(17),t.pointsUvs&&s.enable(18),t.decodeVideoTexture&&s.enable(19),n.push(s.mask),n.push(e.outputColorSpace)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){let t;let n=f[e.type];if(n){let e=nU[n];t=ng.clone(e.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,n){let r;// Check if code has been already compiled
for(let e=0,t=l.length;e<t;e++){let t=l[e];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new id(e,n,t,a),l.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){// Remove from unordered set
let t=l.indexOf(e);l[t]=l[l.length-1],l.pop(),// Free WebGL resources
e.destroy()}},releaseShaderCache:function(e){A.remove(e)},// Exposed for resource monitoring & error feedback via renderer.info:
programs:l,dispose:function(){A.dispose()}}}function i_(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function iy(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function ix(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function ib(){let e=[],t=0,n=[],r=[],i=[];function a(n,r,i,a,o,s){let A=e[t];return void 0===A?(A={id:n.id,object:n,geometry:r,material:i,groupOrder:a,renderOrder:n.renderOrder,z:o,group:s},e[t]=A):(A.id=n.id,A.object=n,A.geometry=r,A.material=i,A.groupOrder=a,A.renderOrder=n.renderOrder,A.z=o,A.group=s),t++,A}return{opaque:n,transmissive:r,transparent:i,init:function(){t=0,n.length=0,r.length=0,i.length=0},push:function(e,t,o,s,A,l){let u=a(e,t,o,s,A,l);o.transmission>0?r.push(u):!0===o.transparent?i.push(u):n.push(u)},unshift:function(e,t,o,s,A,l){let u=a(e,t,o,s,A,l);o.transmission>0?r.unshift(u):!0===o.transparent?i.unshift(u):n.unshift(u)},finish:function(){// Clear references from inactive renderItems in the list
for(let n=t,r=e.length;n<r;n++){let t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||iy),r.length>1&&r.sort(t||ix),i.length>1&&i.sort(t||ix)}}}function iM(){let e=new WeakMap;return{get:function(t,n){let r;let i=e.get(t);return void 0===i?(r=new ib,e.set(t,[r])):n>=i.length?(r=new ib,i.push(r)):r=i[n],r},dispose:function(){e=new WeakMap}}}function iw(){let e={};return{get:function(t){let n;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":n={direction:new eL,color:new tk};break;case"SpotLight":n={position:new eL,direction:new eL,color:new tk,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new eL,color:new tk,distance:0,decay:0};break;case"HemisphereLight":n={direction:new eL,skyColor:new tk,groundColor:new tk};break;case"RectAreaLight":n={color:new tk,position:new eL,halfWidth:new eL,halfHeight:new eL}}return e[t.id]=n,n}}}let iE=0;function iS(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function iT(e,t){let n=new iw,r=function(){let e={};return{get:function(t){let n;if(void 0!==e[t.id])return e[t.id];switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new eo};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new eo,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)i.probe.push(new eL);let a=new eL,o=new e8,s=new e8;return{setup:function(a,o){let s=0,A=0,l=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0;// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]
a.sort(iS);// artist-friendly light intensity scaling factor
let x=!0===o?Math.PI:1;for(let e=0,t=a.length;e<t;e++){let t=a[e],o=t.color,b=t.intensity,M=t.distance,w=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)s+=o.r*b*x,A+=o.g*b*x,l+=o.b*b*x;else if(t.isLightProbe){for(let e=0;e<9;e++)i.probe[e].addScaledVector(t.sh.coefficients[e],b);y++}else if(t.isDirectionalLight){let e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*x),t.castShadow){let e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.directionalShadow[u]=n,i.directionalShadowMap[u]=w,i.directionalShadowMatrix[u]=t.shadow.matrix,p++}i.directional[u]=e,u++}else if(t.isSpotLight){let e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(o).multiplyScalar(b*x),e.distance=M,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,i.spot[h]=e;let a=t.shadow;if(t.map&&(i.spotLightMap[v]=t.map,v++,// make sure the lightMatrix is up to date
// TODO : do it if required only
a.updateMatrices(t),t.castShadow&&_++),i.spotLightMatrix[h]=a.matrix,t.castShadow){let e=r.get(t);e.shadowBias=a.bias,e.shadowNormalBias=a.normalBias,e.shadowRadius=a.radius,e.shadowMapSize=a.mapSize,i.spotShadow[h]=e,i.spotShadowMap[h]=w,g++}h++}else if(t.isRectAreaLight){let e=n.get(t);e.color.copy(o).multiplyScalar(b),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),i.rectArea[d]=e,d++}else if(t.isPointLight){let e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*x),e.distance=t.distance,e.decay=t.decay,t.castShadow){let e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,i.pointShadow[c]=n,i.pointShadowMap[c]=w,i.pointShadowMatrix[c]=t.shadow.matrix,m++}i.point[c]=e,c++}else if(t.isHemisphereLight){let e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(b*x),e.groundColor.copy(t.groundColor).multiplyScalar(b*x),i.hemi[f]=e,f++}}d>0&&(t.isWebGL2?(// WebGL 2
i.rectAreaLTC1=nq.LTC_FLOAT_1,i.rectAreaLTC2=nq.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=nq.LTC_FLOAT_1,i.rectAreaLTC2=nq.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=nq.LTC_HALF_1,i.rectAreaLTC2=nq.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=s,i.ambient[1]=A,i.ambient[2]=l;let b=i.hash;(b.directionalLength!==u||b.pointLength!==c||b.spotLength!==h||b.rectAreaLength!==d||b.hemiLength!==f||b.numDirectionalShadows!==p||b.numPointShadows!==m||b.numSpotShadows!==g||b.numSpotMaps!==v||b.numLightProbes!==y)&&(i.directional.length=u,i.spot.length=h,i.rectArea.length=d,i.point.length=c,i.hemi.length=f,i.directionalShadow.length=p,i.directionalShadowMap.length=p,i.pointShadow.length=m,i.pointShadowMap.length=m,i.spotShadow.length=g,i.spotShadowMap.length=g,i.directionalShadowMatrix.length=p,i.pointShadowMatrix.length=m,i.spotLightMatrix.length=g+v-_,i.spotLightMap.length=v,i.numSpotLightShadowsWithMaps=_,i.numLightProbes=y,b.directionalLength=u,b.pointLength=c,b.spotLength=h,b.rectAreaLength=d,b.hemiLength=f,b.numDirectionalShadows=p,b.numPointShadows=m,b.numSpotShadows=g,b.numSpotMaps=v,b.numLightProbes=y,i.version=iE++)},setupView:function(e,t){let n=0,r=0,A=0,l=0,u=0,c=t.matrixWorldInverse;for(let t=0,h=e.length;t<h;t++){let h=e[t];if(h.isDirectionalLight){let e=i.directional[n];e.direction.setFromMatrixPosition(h.matrixWorld),a.setFromMatrixPosition(h.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(c),n++}else if(h.isSpotLight){let e=i.spot[A];e.position.setFromMatrixPosition(h.matrixWorld),e.position.applyMatrix4(c),e.direction.setFromMatrixPosition(h.matrixWorld),a.setFromMatrixPosition(h.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(c),A++}else if(h.isRectAreaLight){let e=i.rectArea[l];e.position.setFromMatrixPosition(h.matrixWorld),e.position.applyMatrix4(c),// extract local rotation of light to derive width/height half vectors
s.identity(),o.copy(h.matrixWorld),o.premultiply(c),s.extractRotation(o),e.halfWidth.set(.5*h.width,0,0),e.halfHeight.set(0,.5*h.height,0),e.halfWidth.applyMatrix4(s),e.halfHeight.applyMatrix4(s),l++}else if(h.isPointLight){let e=i.point[r];e.position.setFromMatrixPosition(h.matrixWorld),e.position.applyMatrix4(c),r++}else if(h.isHemisphereLight){let e=i.hemi[u];e.direction.setFromMatrixPosition(h.matrixWorld),e.direction.transformDirection(c),u++}}},state:i}}function iC(e,t){let n=new iT(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function iR(e,t){let n=new WeakMap;return{get:function(r,i=0){let a;let o=n.get(r);return void 0===o?(a=new iC(e,t),n.set(r,[a])):i>=o.length?(a=new iC(e,t),o.push(a)):a=o[i],a},dispose:function(){n=new WeakMap}}}class iP extends tG{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class iL extends tG{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function iD(e,t,n){let r=new nP,i=new eo,a=new eo,o=new eS,s=new iP({depthPacking:3201}),A=new iL,l={},u=n.maxTextureSize,c={0:1,1:0,2:2},h=new nv({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new eo},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=h.clone();d.defines.HORIZONTAL_PASS=1;let f=new t3;f.setAttribute("position",new tW(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let p=new nc(f,h),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let g=this.type;function v(t,n,r,i){let a=null,o=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==o)a=o;else if(a=!0===r.isPointLight?A:s,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){// in this case we need a unique material instance reflecting the
// appropriate state
let e=a.uuid,t=n.uuid,r=l[e];void 0===r&&(r={},l[e]=r);let i=r[t];void 0===i&&(i=a.clone(),r[t]=i),a=i}if(a.visible=n.visible,a.wireframe=n.wireframe,3===i?a.side=null!==n.shadowSide?n.shadowSide:n.side:a.side=null!==n.shadowSide?n.shadowSide:c[n.side],a.alphaMap=n.alphaMap,a.alphaTest=n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===r.isPointLight&&!0===a.isMeshDistanceMaterial){let t=e.properties.get(a);t.light=r}return a}this.render=function(n,s,A){if(!1===m.enabled||!1===m.autoUpdate&&!1===m.needsUpdate||0===n.length)return;let l=e.getRenderTarget(),c=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),_=e.state;// Set GL state for depth map.
_.setBlending(0),_.buffers.color.setClear(1,1,1,1),_.buffers.depth.setTest(!0),_.setScissorTest(!1);// check for shadow map type changes
let y=3!==g&&3===this.type,x=3===g&&3!==this.type;// render depth map
for(let l=0,c=n.length;l<c;l++){let c=n[l],f=c.shadow;if(void 0===f){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===f.autoUpdate&&!1===f.needsUpdate)continue;i.copy(f.mapSize);let m=f.getFrameExtents();if(i.multiply(m),a.copy(f.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(a.x=Math.floor(u/m.x),i.x=a.x*m.x,f.mapSize.x=a.x),i.y>u&&(a.y=Math.floor(u/m.y),i.y=a.y*m.y,f.mapSize.y=a.y)),null===f.map||!0===y||!0===x){let e=3!==this.type?{minFilter:1003,magFilter:1003}:{};null!==f.map&&f.map.dispose(),f.map=new eC(i.x,i.y,e),f.map.texture.name=c.name+".shadowMap",f.camera.updateProjectionMatrix()}e.setRenderTarget(f.map),e.clear();let g=f.getViewportCount();for(let n=0;n<g;n++){let i=f.getViewport(n);o.set(a.x*i.x,a.y*i.y,a.x*i.z,a.y*i.w),_.viewport(o),f.updateMatrices(c,n),r=f.getFrustum(),function n(i,a,o,s,A){if(!1===i.visible)return;let l=i.layers.test(a.layers);if(l&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===A)&&(!i.frustumCulled||r.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,i.matrixWorld);let n=t.update(i),r=i.material;if(Array.isArray(r)){let t=n.groups;for(let a=0,l=t.length;a<l;a++){let l=t[a],u=r[l.materialIndex];if(u&&u.visible){let t=v(i,u,s,A);e.renderBufferDirect(o,null,n,t,i,l)}}}else if(r.visible){let t=v(i,r,s,A);e.renderBufferDirect(o,null,n,t,i,null)}}let u=i.children;for(let e=0,t=u.length;e<t;e++)n(u[e],a,o,s,A)}(s,A,f.camera,c,this.type)}!0!==f.isPointLightShadow&&3===this.type&&function(n,r){let a=t.update(p);h.defines.VSM_SAMPLES!==n.blurSamples&&(h.defines.VSM_SAMPLES=n.blurSamples,d.defines.VSM_SAMPLES=n.blurSamples,h.needsUpdate=!0,d.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new eC(i.x,i.y)),// vertical pass
h.uniforms.shadow_pass.value=n.map.texture,h.uniforms.resolution.value=n.mapSize,h.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,a,h,p,null),// horizontal pass
d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,a,d,p,null)}(f,A),f.needsUpdate=!1}g=this.type,m.needsUpdate=!1,e.setRenderTarget(l,c,f)}}function iO(e,t,n){let r=n.isWebGL2,i=new function(){let t=!1,n=new eS,r=null,i=new eS(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,o,s){!0===s&&(t*=o,r*=o,a*=o),n.set(t,r,a,o),!1===i.equals(n)&&(e.clearColor(t,r,a,o),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(t){t?z(e.DEPTH_TEST):G(e.DEPTH_TEST)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},o=new function(){let t=!1,n=null,r=null,i=null,a=null,o=null,s=null,A=null,l=null;return{setTest:function(n){t||(n?z(e.STENCIL_TEST):G(e.STENCIL_TEST))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,o){(r!==t||i!==n||a!==o)&&(e.stencilFunc(t,n,o),r=t,i=n,a=o)},setOp:function(t,n,r){(o!==t||s!==n||A!==r)&&(e.stencilOp(t,n,r),o=t,s=n,A=r)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,r=null,i=null,a=null,o=null,s=null,A=null,l=null}}},s=new WeakMap,A=new WeakMap,l={},u={},c=new WeakMap,h=[],d=null,f=!1,p=null,m=null,g=null,v=null,_=null,y=null,x=null,b=new tk(0,0,0),M=0,w=!1,E=null,S=null,T=null,C=null,R=null,P=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),L=!1,D=e.getParameter(e.VERSION);-1!==D.indexOf("WebGL")?L=parseFloat(/^WebGL (\d)/.exec(D)[1])>=1:-1!==D.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(D)[1])>=2);let O=null,I={},q=e.getParameter(e.SCISSOR_BOX),U=e.getParameter(e.VIEWPORT),N=new eS().fromArray(q),B=new eS().fromArray(U);function k(t,n,i,a){let o=new Uint8Array(4),s=e.createTexture();// 4 is required to match default unpack alignment of 4.
e.bindTexture(t,s),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let s=0;s<i;s++)r&&(t===e.TEXTURE_3D||t===e.TEXTURE_2D_ARRAY)?e.texImage3D(n,0,e.RGBA,1,1,a,0,e.RGBA,e.UNSIGNED_BYTE,o):e.texImage2D(n+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,o);return s}let F={};//
function z(t){!0!==l[t]&&(e.enable(t),l[t]=!0)}function G(t){!1!==l[t]&&(e.disable(t),l[t]=!1)}F[e.TEXTURE_2D]=k(e.TEXTURE_2D,e.TEXTURE_2D,1),F[e.TEXTURE_CUBE_MAP]=k(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),r&&(F[e.TEXTURE_2D_ARRAY]=k(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),F[e.TEXTURE_3D]=k(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),// init
i.setClear(0,0,0,1),a.setClear(1),o.setClear(0),z(e.DEPTH_TEST),a.setFunc(3),W(!1),X(1),z(e.CULL_FACE),j(0);let H={100:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};if(r)H[103]=e.MIN,H[104]=e.MAX;else{let e=t.get("EXT_blend_minmax");null!==e&&(H[103]=e.MIN_EXT,H[104]=e.MAX_EXT)}let V={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA,211:e.CONSTANT_COLOR,212:e.ONE_MINUS_CONSTANT_COLOR,213:e.CONSTANT_ALPHA,214:e.ONE_MINUS_CONSTANT_ALPHA};function j(t,n,r,i,a,o,s,A,l,u){if(0===t){!0===f&&(G(e.BLEND),f=!1);return}if(!1===f&&(z(e.BLEND),f=!0),5!==t){if(t!==p||u!==w){if((100!==m||100!==_)&&(e.blendEquation(e.FUNC_ADD),m=100,_=100),u)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}g=null,v=null,y=null,x=null,b.set(0,0,0),M=0,p=t,w=u}return}// custom blending
a=a||n,o=o||r,s=s||i,(n!==m||a!==_)&&(e.blendEquationSeparate(H[n],H[a]),m=n,_=a),(r!==g||i!==v||o!==y||s!==x)&&(e.blendFuncSeparate(V[r],V[i],V[o],V[s]),g=r,v=i,y=o,x=s),(!1===A.equals(b)||l!==M)&&(e.blendColor(A.r,A.g,A.b,l),b.copy(A),M=l),p=t,w=!1}//
function W(t){E!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),E=t)}function X(t){0!==t?(z(e.CULL_FACE),t!==S&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):G(e.CULL_FACE),S=t}function Q(t,n,r){t?(z(e.POLYGON_OFFSET_FILL),(C!==n||R!==r)&&(e.polygonOffset(n,r),C=n,R=r)):G(e.POLYGON_OFFSET_FILL)}return{buffers:{color:i,depth:a,stencil:o},enable:z,disable:G,bindFramebuffer:function(t,n){return u[t]!==n&&(e.bindFramebuffer(t,n),u[t]=n,r&&(t===e.DRAW_FRAMEBUFFER&&(u[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(u[e.DRAW_FRAMEBUFFER]=n)),!0)},drawBuffers:function(r,i){let a=h,o=!1;if(r){if(void 0===(a=c.get(i))&&(a=[],c.set(i,a)),r.isWebGLMultipleRenderTargets){let t=r.texture;if(a.length!==t.length||a[0]!==e.COLOR_ATTACHMENT0){for(let n=0,r=t.length;n<r;n++)a[n]=e.COLOR_ATTACHMENT0+n;a.length=t.length,o=!0}}else a[0]!==e.COLOR_ATTACHMENT0&&(a[0]=e.COLOR_ATTACHMENT0,o=!0)}else a[0]!==e.BACK&&(a[0]=e.BACK,o=!0);o&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return d!==t&&(e.useProgram(t),d=t,!0)},setBlending:j,setMaterial:function(t,n){2===t.side?G(e.CULL_FACE):z(e.CULL_FACE);let r=1===t.side;n&&(r=!r),W(r),1===t.blending&&!1===t.transparent?j(0):j(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.blendColor,t.blendAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),i.setMask(t.colorWrite);let s=t.stencilWrite;o.setTest(s),s&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Q(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?z(e.SAMPLE_ALPHA_TO_COVERAGE):G(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:W,setCullFace:X,setLineWidth:function(t){t!==T&&(L&&e.lineWidth(t),T=t)},setPolygonOffset:Q,setScissorTest:function(t){t?z(e.SCISSOR_TEST):G(e.SCISSOR_TEST)},activeTexture:// texture
function(t){void 0===t&&(t=e.TEXTURE0+P-1),O!==t&&(e.activeTexture(t),O=t)},bindTexture:function(t,n,r){void 0===r&&(r=null===O?e.TEXTURE0+P-1:O);let i=I[r];void 0===i&&(i={type:void 0,texture:void 0},I[r]=i),(i.type!==t||i.texture!==n)&&(O!==r&&(e.activeTexture(r),O=r),e.bindTexture(t,n||F[t]),i.type=t,i.texture=n)},unbindTexture:function(){let t=I[O];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let r=A.get(n);void 0===r&&(r=new WeakMap,A.set(n,r));let i=r.get(t);void 0===i&&(i=e.getUniformBlockIndex(n,t.name),r.set(t,i))},uniformBlockBinding:function(t,n){let r=A.get(n),i=r.get(t);s.get(n)!==i&&(// bind shader specific block index to global block point
e.uniformBlockBinding(n,i,t.__bindingPointIndex),s.set(n,i))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor://
function(t){!1===N.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),N.copy(t))},viewport:function(t){!1===B.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),B.copy(t))},reset://
function(){// reset state
e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===r&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),// reset internals
l={},O=null,I={},u={},c=new WeakMap,h=[],d=null,f=!1,p=null,m=null,g=null,v=null,_=null,y=null,x=null,b=new tk(0,0,0),M=0,w=!1,E=null,S=null,T=null,C=null,R=null,N.set(0,0,e.canvas.width,e.canvas.height),B.set(0,0,e.canvas.width,e.canvas.height),i.reset(),a.reset(),o.reset()}}}function iI(e,t,n,r,i,a,o){let s;let A=i.isWebGL2,l=i.maxTextures,u=i.maxCubemapSize,c=i.maxTextureSize,h=i.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap,m=new WeakMap,g=!1;try{g="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){// Ignore any errors
}function v(e,t){// Use OffscreenCanvas when available. Specially needed in web workers
return g?new OffscreenCanvas(e,t):eu("canvas")}function _(e,t,n,r){let i=1;// only perform resize if necessary
if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){// only perform resize for certain image types
if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let r=t?en:Math.floor,a=r(i*e.width),o=r(i*e.height);void 0===s&&(s=v(a,o));// cube textures can't reuse the same canvas
let A=n?v(a,o):s;A.width=a,A.height=o;let l=A.getContext("2d");return l.drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),A}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function y(e){return et(e.width)&&et(e.height)}function x(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&1006!==e.minFilter}function b(t){e.generateMipmap(t)}function M(n,r,i,a,o=!1){if(!1===A)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let s=r;if(r===e.RED&&(i===e.FLOAT&&(s=e.R32F),i===e.HALF_FLOAT&&(s=e.R16F),i===e.UNSIGNED_BYTE&&(s=e.R8)),r===e.RED_INTEGER&&(i===e.UNSIGNED_BYTE&&(s=e.R8UI),i===e.UNSIGNED_SHORT&&(s=e.R16UI),i===e.UNSIGNED_INT&&(s=e.R32UI),i===e.BYTE&&(s=e.R8I),i===e.SHORT&&(s=e.R16I),i===e.INT&&(s=e.R32I)),r===e.RG&&(i===e.FLOAT&&(s=e.RG32F),i===e.HALF_FLOAT&&(s=e.RG16F),i===e.UNSIGNED_BYTE&&(s=e.RG8)),r===e.RGBA){let t=o?G:eg.getTransfer(a);i===e.FLOAT&&(s=e.RGBA32F),i===e.HALF_FLOAT&&(s=e.RGBA16F),i===e.UNSIGNED_BYTE&&(s=t===H?e.SRGB8_ALPHA8:e.RGBA8),i===e.UNSIGNED_SHORT_4_4_4_4&&(s=e.RGBA4),i===e.UNSIGNED_SHORT_5_5_5_1&&(s=e.RGB5_A1)}return(s===e.R16F||s===e.R32F||s===e.RG16F||s===e.RG32F||s===e.RGBA16F||s===e.RGBA32F)&&t.get("EXT_color_buffer_float"),s}function w(e,t,n){return!0===x(e,n)||e.isFramebufferTexture&&1003!==e.minFilter&&1006!==e.minFilter?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}// Fallback filters for non-power-of-2 textures
function E(t){return 1003===t||1004===t||1005===t?e.NEAREST:e.LINEAR}//
function S(e){let t=e.target;t.removeEventListener("dispose",S),//
function(e){let t=r.get(e);if(void 0===t.__webglInit)return;// check if it's necessary to remove the WebGLTexture object
let n=e.source,i=m.get(n);if(i){let r=i[t.__cacheKey];r.usedTimes--,0===r.usedTimes&&C(e),0===Object.keys(i).length&&m.delete(n)}r.remove(e)}(t),t.isVideoTexture&&p.delete(t)}function T(t){let n=t.target;n.removeEventListener("dispose",T),function(t){let n=t.texture,i=r.get(t),a=r.get(n);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),o.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++){if(Array.isArray(i.__webglFramebuffer[t]))for(let n=0;n<i.__webglFramebuffer[t].length;n++)e.deleteFramebuffer(i.__webglFramebuffer[t][n]);else e.deleteFramebuffer(i.__webglFramebuffer[t]);i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[t])}else{if(Array.isArray(i.__webglFramebuffer))for(let t=0;t<i.__webglFramebuffer.length;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]);else e.deleteFramebuffer(i.__webglFramebuffer);if(i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let t=0;t<i.__webglColorRenderbuffer.length;t++)i.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(i.__webglColorRenderbuffer[t]);i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,i=n.length;t<i;t++){let i=r.get(n[t]);i.__webglTexture&&(e.deleteTexture(i.__webglTexture),o.memory.textures--),r.remove(n[t])}r.remove(n),r.remove(t)}(n)}function C(t){let n=r.get(t);e.deleteTexture(n.__webglTexture);let i=t.source,a=m.get(i);delete a[n.__cacheKey],o.memory.textures--}//
let R=0;//
function P(t,i){let a=r.get(t);if(t.isVideoTexture&&function(e){let t=o.render.frame;// Check the last frame we updated the VideoTexture
p.get(e)!==t&&(p.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){let e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===e.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{U(a,t,i);return}}n.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+i)}let L={1e3:e.REPEAT,1001:e.CLAMP_TO_EDGE,1002:e.MIRRORED_REPEAT},D={1003:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,1005:e.NEAREST_MIPMAP_LINEAR,1006:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,1008:e.LINEAR_MIPMAP_LINEAR},O={512:e.NEVER,519:e.ALWAYS,513:e.LESS,515:e.LEQUAL,514:e.EQUAL,518:e.GEQUAL,516:e.GREATER,517:e.NOTEQUAL};function I(n,a,o){if(o?(e.texParameteri(n,e.TEXTURE_WRAP_S,L[a.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,L[a.wrapT]),(n===e.TEXTURE_3D||n===e.TEXTURE_2D_ARRAY)&&e.texParameteri(n,e.TEXTURE_WRAP_R,L[a.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,D[a.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,D[a.minFilter])):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),(n===e.TEXTURE_3D||n===e.TEXTURE_2D_ARRAY)&&e.texParameteri(n,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),(1001!==a.wrapS||1001!==a.wrapT)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,e.TEXTURE_MAG_FILTER,E(a.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,E(a.minFilter)),1003!==a.minFilter&&1006!==a.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),a.compareFunction&&(e.texParameteri(n,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,O[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){let o=t.get("EXT_texture_filter_anisotropic");1003!==a.magFilter&&(1005===a.minFilter||1008===a.minFilter)&&(1015!==a.type||!1!==t.has("OES_texture_float_linear"))&&(!1!==A||1016!==a.type||!1!==t.has("OES_texture_half_float_linear"))&&(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function q(t,n){let r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",S));// create Source <-> WebGLTextures mapping if necessary
let i=n.source,a=m.get(i);void 0===a&&(a={},m.set(i,a));// check if there is already a WebGLTexture object for the given texture parameters
let s=function(e){let t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(s!==t.__cacheKey){void 0===a[s]&&(// create new entry
a[s]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,// when a new instance of WebGLTexture was created, a texture upload is required
// even if the image contents are identical
r=!0),a[s].usedTimes++;// every time the texture cache key changes, it's necessary to check if an instance of
// WebGLTexture can be deleted in order to avoid a memory leak.
let i=a[t.__cacheKey];void 0!==i&&(a[t.__cacheKey].usedTimes--,0===i.usedTimes&&C(n)),// store references to cache key and WebGLTexture object
t.__cacheKey=s,t.__webglTexture=a[s].texture}return r}function U(t,i,o){let s=e.TEXTURE_2D;(i.isDataArrayTexture||i.isCompressedArrayTexture)&&(s=e.TEXTURE_2D_ARRAY),i.isData3DTexture&&(s=e.TEXTURE_3D);let l=q(t,i),u=i.source;n.bindTexture(s,t.__webglTexture,e.TEXTURE0+o);let h=r.get(u);if(u.version!==h.__version||!0===l){let t;n.activeTexture(e.TEXTURE0+o);let r=eg.getPrimaries(eg.workingColorSpace),d=""===i.colorSpace?null:eg.getPrimaries(i.colorSpace),f=""===i.colorSpace||r===d?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,f);let p=!A&&(1001!==i.wrapS||1001!==i.wrapT||1003!==i.minFilter&&1006!==i.minFilter)&&!1===y(i.image),m=_(i.image,p,!1,c);m=j(i,m);let g=y(m)||A,v=a.convert(i.format,i.colorSpace),E=a.convert(i.type),S=M(i.internalFormat,v,E,i.colorSpace,i.isVideoTexture);I(s,i,g);let T=i.mipmaps,C=A&&!0!==i.isVideoTexture,R=void 0===h.__version||!0===l,P=w(i,m,g);if(i.isDepthTexture)// populate depth texture with dummy data
S=e.DEPTH_COMPONENT,A?S=1015===i.type?e.DEPTH_COMPONENT32F:1014===i.type?e.DEPTH_COMPONENT24:1020===i.type?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:1015===i.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===i.format&&S===e.DEPTH_COMPONENT&&1012!==i.type&&1014!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=1014,E=a.convert(i.type)),1027===i.format&&S===e.DEPTH_COMPONENT&&(// Depth stencil textures need the DEPTH_STENCIL internal format
// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
S=e.DEPTH_STENCIL,1020!==i.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=1020,E=a.convert(i.type))),R&&(C?n.texStorage2D(e.TEXTURE_2D,1,S,m.width,m.height):n.texImage2D(e.TEXTURE_2D,0,S,m.width,m.height,0,v,E,null));else if(i.isDataTexture){// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(T.length>0&&g){C&&R&&n.texStorage2D(e.TEXTURE_2D,P,S,T[0].width,T[0].height);for(let r=0,i=T.length;r<i;r++)t=T[r],C?n.texSubImage2D(e.TEXTURE_2D,r,0,0,t.width,t.height,v,E,t.data):n.texImage2D(e.TEXTURE_2D,r,S,t.width,t.height,0,v,E,t.data);i.generateMipmaps=!1}else C?(R&&n.texStorage2D(e.TEXTURE_2D,P,S,m.width,m.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,m.width,m.height,v,E,m.data)):n.texImage2D(e.TEXTURE_2D,0,S,m.width,m.height,0,v,E,m.data)}else if(i.isCompressedTexture){if(i.isCompressedArrayTexture){C&&R&&n.texStorage3D(e.TEXTURE_2D_ARRAY,P,S,T[0].width,T[0].height,m.depth);for(let r=0,a=T.length;r<a;r++)t=T[r],1023!==i.format?null!==v?C?n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,r,0,0,0,t.width,t.height,m.depth,v,t.data,0,0):n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,r,S,t.width,t.height,m.depth,0,t.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?n.texSubImage3D(e.TEXTURE_2D_ARRAY,r,0,0,0,t.width,t.height,m.depth,v,E,t.data):n.texImage3D(e.TEXTURE_2D_ARRAY,r,S,t.width,t.height,m.depth,0,v,E,t.data)}else{C&&R&&n.texStorage2D(e.TEXTURE_2D,P,S,T[0].width,T[0].height);for(let r=0,a=T.length;r<a;r++)t=T[r],1023!==i.format?null!==v?C?n.compressedTexSubImage2D(e.TEXTURE_2D,r,0,0,t.width,t.height,v,t.data):n.compressedTexImage2D(e.TEXTURE_2D,r,S,t.width,t.height,0,t.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):C?n.texSubImage2D(e.TEXTURE_2D,r,0,0,t.width,t.height,v,E,t.data):n.texImage2D(e.TEXTURE_2D,r,S,t.width,t.height,0,v,E,t.data)}}else if(i.isDataArrayTexture)C?(R&&n.texStorage3D(e.TEXTURE_2D_ARRAY,P,S,m.width,m.height,m.depth),n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,m.width,m.height,m.depth,v,E,m.data)):n.texImage3D(e.TEXTURE_2D_ARRAY,0,S,m.width,m.height,m.depth,0,v,E,m.data);else if(i.isData3DTexture)C?(R&&n.texStorage3D(e.TEXTURE_3D,P,S,m.width,m.height,m.depth),n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,m.width,m.height,m.depth,v,E,m.data)):n.texImage3D(e.TEXTURE_3D,0,S,m.width,m.height,m.depth,0,v,E,m.data);else if(i.isFramebufferTexture){if(R){if(C)n.texStorage2D(e.TEXTURE_2D,P,S,m.width,m.height);else{let t=m.width,r=m.height;for(let i=0;i<P;i++)n.texImage2D(e.TEXTURE_2D,i,S,t,r,0,v,E,null),t>>=1,r>>=1}}}else // regular Texture (image, video, canvas)
// use manually created mipmaps if available
// if there are no manual mipmaps
// set 0 level mipmap and then use GL to generate other mipmap levels
if(T.length>0&&g){C&&R&&n.texStorage2D(e.TEXTURE_2D,P,S,T[0].width,T[0].height);for(let r=0,i=T.length;r<i;r++)t=T[r],C?n.texSubImage2D(e.TEXTURE_2D,r,0,0,v,E,t):n.texImage2D(e.TEXTURE_2D,r,S,v,E,t);i.generateMipmaps=!1}else C?(R&&n.texStorage2D(e.TEXTURE_2D,P,S,m.width,m.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,v,E,m)):n.texImage2D(e.TEXTURE_2D,0,S,v,E,m);x(i,g)&&b(s),h.__version=u.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}// Render targets
// Setup storage for target texture and bind it to correct framebuffer
function N(t,i,o,s,A,l){let u=a.convert(o.format,o.colorSpace),c=a.convert(o.type),h=M(o.internalFormat,u,c,o.colorSpace),f=r.get(i);if(!f.__hasExternalTextures){let t=Math.max(1,i.width>>l),r=Math.max(1,i.height>>l);A===e.TEXTURE_3D||A===e.TEXTURE_2D_ARRAY?n.texImage3D(A,l,h,t,r,i.depth,0,u,c,null):n.texImage2D(A,l,h,t,r,0,u,c,null)}n.bindFramebuffer(e.FRAMEBUFFER,t),V(i)?d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,s,A,r.get(o).__webglTexture,0,z(i)):(A===e.TEXTURE_2D||A>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&A<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,s,A,r.get(o).__webglTexture,l),n.bindFramebuffer(e.FRAMEBUFFER,null)}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
function B(t,n,r){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer){let i=!0===A?e.DEPTH_COMPONENT24:e.DEPTH_COMPONENT16;if(r||V(n)){let t=n.depthTexture;t&&t.isDepthTexture&&(1015===t.type?i=e.DEPTH_COMPONENT32F:1014===t.type&&(i=e.DEPTH_COMPONENT24));let r=z(n);V(n)?d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,r,i,n.width,n.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,r,i,n.width,n.height)}else e.renderbufferStorage(e.RENDERBUFFER,i,n.width,n.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(n.depthBuffer&&n.stencilBuffer){let i=z(n);r&&!1===V(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,n.width,n.height):V(n)?d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,i,e.DEPTH24_STENCIL8,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{let t=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let i=0;i<t.length;i++){let o=t[i],s=a.convert(o.format,o.colorSpace),A=a.convert(o.type),l=M(o.internalFormat,s,A,o.colorSpace),u=z(n);r&&!1===V(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,u,l,n.width,n.height):V(n)?d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,l,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,l,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}// Setup GL resources for a non-texture depth buffer
function F(t){let i=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(a)throw Error("target.depthTexture not supported in Cube render targets");!// Setup resources for a Depth Texture for a FBO (needs an extension)
function(t,i){let a=i&&i.isWebGLCubeRenderTarget;if(a)throw Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!(i.depthTexture&&i.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),P(i.depthTexture,0);let o=r.get(i.depthTexture).__webglTexture,s=z(i);if(1026===i.depthTexture.format)V(i)?d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,o,0,s):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,o,0);else if(1027===i.depthTexture.format)V(i)?d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,o,0,s):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,o,0);else throw Error("Unknown depthTexture format")}(i.__webglFramebuffer,t)}else if(a){i.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer[r]),i.__webglDepthbuffer[r]=e.createRenderbuffer(),B(i.__webglDepthbuffer[r],t,!1)}else n.bindFramebuffer(e.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),B(i.__webglDepthbuffer,t,!1);n.bindFramebuffer(e.FRAMEBUFFER,null)}function z(e){return Math.min(h,e.samples)}function V(e){let n=r.get(e);return A&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function j(e,n){let r=e.colorSpace,i=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||1035===e.format||r!==k&&""!==r&&(eg.getTransfer(r)===H?!1===A?!0===t.has("EXT_sRGB")&&1023===i?(e.format=1035,// it's not possible to generate mips in WebGL 1 with this extension
e.minFilter=1006,e.generateMipmaps=!1):n=ey.sRGBToLinear(n):(1023!==i||1009!==a)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",r)),n}//
this.allocateTextureUnit=function(){let e=R;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),R+=1,e},this.resetTextureUnits=function(){R=0},this.setTexture2D=P,this.setTexture2DArray=function(t,i){let a=r.get(t);if(t.version>0&&a.__version!==t.version){U(a,t,i);return}n.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+i)},this.setTexture3D=function(t,i){let a=r.get(t);if(t.version>0&&a.__version!==t.version){U(a,t,i);return}n.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+i)},this.setTextureCube=function(t,i){let o=r.get(t);if(t.version>0&&o.__version!==t.version){(function(t,i,o){if(6!==i.image.length)return;let s=q(t,i),l=i.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+o);let c=r.get(l);if(l.version!==c.__version||!0===s){let t;n.activeTexture(e.TEXTURE0+o);let r=eg.getPrimaries(eg.workingColorSpace),h=""===i.colorSpace?null:eg.getPrimaries(i.colorSpace),d=""===i.colorSpace||r===h?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);let f=i.isCompressedTexture||i.image[0].isCompressedTexture,p=i.image[0]&&i.image[0].isDataTexture,m=[];for(let e=0;e<6;e++)f||p?m[e]=p?i.image[e].image:i.image[e]:m[e]=_(i.image[e],!1,!0,u),m[e]=j(i,m[e]);let g=m[0],v=y(g)||A,E=a.convert(i.format,i.colorSpace),S=a.convert(i.type),T=M(i.internalFormat,E,S,i.colorSpace),C=A&&!0!==i.isVideoTexture,R=void 0===c.__version||!0===s,P=w(i,g,v);if(I(e.TEXTURE_CUBE_MAP,i,v),f){C&&R&&n.texStorage2D(e.TEXTURE_CUBE_MAP,P,T,g.width,g.height);for(let r=0;r<6;r++){t=m[r].mipmaps;for(let a=0;a<t.length;a++){let o=t[a];1023!==i.format?null!==E?C?n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,a,0,0,o.width,o.height,E,o.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,a,T,o.width,o.height,0,o.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):C?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,a,0,0,o.width,o.height,E,S,o.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,a,T,o.width,o.height,0,E,S,o.data)}}}else{t=i.mipmaps,C&&R&&(t.length>0&&P++,n.texStorage2D(e.TEXTURE_CUBE_MAP,P,T,m[0].width,m[0].height));for(let r=0;r<6;r++)if(p){C?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,0,0,m[r].width,m[r].height,E,S,m[r].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,T,m[r].width,m[r].height,0,E,S,m[r].data);for(let i=0;i<t.length;i++){let a=t[i],o=a.image[r].image;C?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,i+1,0,0,o.width,o.height,E,S,o.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,i+1,T,o.width,o.height,0,E,S,o.data)}}else{C?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,0,0,E,S,m[r]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,T,E,S,m[r]);for(let i=0;i<t.length;i++){let a=t[i];C?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,i+1,0,0,E,S,a.image[r]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+r,i+1,T,E,S,a.image[r])}}}x(i,v)&&b(e.TEXTURE_CUBE_MAP),c.__version=l.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version})(o,t,i);return}n.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture,e.TEXTURE0+i)},this.rebindTextures=// rebind framebuffer with external textures
function(t,n,i){let a=r.get(t);void 0!==n&&N(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==i&&F(t)},this.setupRenderTarget=// Set up GL resources for the render target
function(t){let s=t.texture,l=r.get(t),u=r.get(s);t.addEventListener("dispose",T),!0!==t.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=e.createTexture()),u.__version=s.version,o.memory.textures++);let c=!0===t.isWebGLCubeRenderTarget,h=!0===t.isWebGLMultipleRenderTargets,d=y(t)||A;// Setup framebuffer
if(c){l.__webglFramebuffer=[];for(let t=0;t<6;t++)if(A&&s.mipmaps&&s.mipmaps.length>0){l.__webglFramebuffer[t]=[];for(let n=0;n<s.mipmaps.length;n++)l.__webglFramebuffer[t][n]=e.createFramebuffer()}else l.__webglFramebuffer[t]=e.createFramebuffer()}else{if(A&&s.mipmaps&&s.mipmaps.length>0){l.__webglFramebuffer=[];for(let t=0;t<s.mipmaps.length;t++)l.__webglFramebuffer[t]=e.createFramebuffer()}else l.__webglFramebuffer=e.createFramebuffer();if(h){if(i.drawBuffers){let n=t.texture;for(let t=0,i=n.length;t<i;t++){let i=r.get(n[t]);void 0===i.__webglTexture&&(i.__webglTexture=e.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}if(A&&t.samples>0&&!1===V(t)){let r=h?s:[s];l.__webglMultisampledFramebuffer=e.createFramebuffer(),l.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,l.__webglMultisampledFramebuffer);for(let n=0;n<r.length;n++){let i=r[n];l.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,l.__webglColorRenderbuffer[n]);let o=a.convert(i.format,i.colorSpace),s=a.convert(i.type),A=M(i.internalFormat,o,s,i.colorSpace,!0===t.isXRRenderTarget),u=z(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,u,A,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,l.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(l.__webglDepthRenderbuffer=e.createRenderbuffer(),B(l.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}// Setup color buffer
if(c){n.bindTexture(e.TEXTURE_CUBE_MAP,u.__webglTexture),I(e.TEXTURE_CUBE_MAP,s,d);for(let n=0;n<6;n++)if(A&&s.mipmaps&&s.mipmaps.length>0)for(let r=0;r<s.mipmaps.length;r++)N(l.__webglFramebuffer[n][r],t,s,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r);else N(l.__webglFramebuffer[n],t,s,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);x(s,d)&&b(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(h){let i=t.texture;for(let a=0,o=i.length;a<o;a++){let o=i[a],s=r.get(o);n.bindTexture(e.TEXTURE_2D,s.__webglTexture),I(e.TEXTURE_2D,o,d),N(l.__webglFramebuffer,t,o,e.COLOR_ATTACHMENT0+a,e.TEXTURE_2D,0),x(o,d)&&b(e.TEXTURE_2D)}n.unbindTexture()}else{let r=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(A?r=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(r,u.__webglTexture),I(r,s,d),A&&s.mipmaps&&s.mipmaps.length>0)for(let n=0;n<s.mipmaps.length;n++)N(l.__webglFramebuffer[n],t,s,e.COLOR_ATTACHMENT0,r,n);else N(l.__webglFramebuffer,t,s,e.COLOR_ATTACHMENT0,r,0);x(s,d)&&b(r),n.unbindTexture()}t.depthBuffer&&F(t)},this.updateRenderTargetMipmap=function(t){let i=y(t)||A,a=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let o=0,s=a.length;o<s;o++){let s=a[o];if(x(s,i)){let i=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=r.get(s).__webglTexture;n.bindTexture(i,a),b(i),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(A&&t.samples>0&&!1===V(t)){let i=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,o=t.height,s=e.COLOR_BUFFER_BIT,A=[],l=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,u=r.get(t),c=!0===t.isWebGLMultipleRenderTargets;// If MRT we need to remove FBO attachments
if(c)for(let t=0;t<i.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<i.length;n++){A.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&A.push(l);let h=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;if(!1===h&&(t.depthBuffer&&(s|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&(s|=e.STENCIL_BUFFER_BIT)),c&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer[n]),!0===h&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[l]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[l])),c){let t=r.get(i[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,o,0,0,a,o,s,e.NEAREST),f&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,A)}// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments
if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),c)for(let t=0;t<i.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,u.__webglColorRenderbuffer[t]);let a=r.get(i[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=F,this.setupFrameBufferTexture=N,this.useMultisampledRTT=V}function iq(e,t,n){let r=n.isWebGL2;return{convert:function(n,i=""){let a;let o=eg.getTransfer(i);if(1009===n)return e.UNSIGNED_BYTE;if(1017===n)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return e.UNSIGNED_SHORT_5_5_5_1;if(1010===n)return e.BYTE;if(1011===n)return e.SHORT;if(1012===n)return e.UNSIGNED_SHORT;if(1013===n)return e.INT;if(1014===n)return e.UNSIGNED_INT;if(1015===n)return e.FLOAT;if(1016===n)return r?e.HALF_FLOAT:null!==(a=t.get("OES_texture_half_float"))?a.HALF_FLOAT_OES:null;if(1021===n)return e.ALPHA;if(1023===n)return e.RGBA;if(1024===n)return e.LUMINANCE;if(1025===n)return e.LUMINANCE_ALPHA;if(1026===n)return e.DEPTH_COMPONENT;if(1027===n)return e.DEPTH_STENCIL;// WebGL 1 sRGB fallback
if(1035===n)return null!==(a=t.get("EXT_sRGB"))?a.SRGB_ALPHA_EXT:null;// WebGL2 formats.
if(1028===n)return e.RED;if(1029===n)return e.RED_INTEGER;if(1030===n)return e.RG;if(1031===n)return e.RG_INTEGER;if(1033===n)return e.RGBA_INTEGER;// S3TC
if(33776===n||33777===n||33778===n||33779===n){if(o===H){if(null===(a=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(33776===n)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(33777===n)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(33778===n)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(33779===n)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(a=t.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===n)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===n)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===n)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===n)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}}// PVRTC
if(35840===n||35841===n||35842===n||35843===n){if(null===(a=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===n)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}// ETC1
if(36196===n)return null!==(a=t.get("WEBGL_compressed_texture_etc1"))?a.COMPRESSED_RGB_ETC1_WEBGL:null;// ETC2
if(37492===n||37496===n){if(null===(a=t.get("WEBGL_compressed_texture_etc")))return null;if(37492===n)return o===H?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}// ASTC
if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(null===(a=t.get("WEBGL_compressed_texture_astc")))return null;if(37808===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return o===H?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}// BPTC
if(36492===n||36494===n||36495===n){if(null===(a=t.get("EXT_texture_compression_bptc")))return null;if(36492===n)return o===H?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===n)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===n)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}// RGTC
if(36283===n||36284===n||36285===n||36286===n){if(null===(a=t.get("EXT_texture_compression_rgtc")))return null;if(36492===n)return a.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return(//
1020===n?r?e.UNSIGNED_INT_24_8:null!==(a=t.get("WEBGL_depth_texture"))?a.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[n]?e[n]:null)}}}class iU extends ny{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class iN extends tb{constructor(){super(),this.isGroup=!0,this.type="Group"}}const iB={type:"move"};class ik{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new iN,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new iN,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new eL,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new eL),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new iN,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new eL,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new eL),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){let t=this._hand;if(t)for(let n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,i=null,a=null,o=this._targetRay,s=this._grip,A=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(A&&e.hand){for(let r of(a=!0,e.hand.values())){// Update the joints groups with the XRJoint poses
let e=t.getJointPose(r,n),i=this._getHandJoint(A,r);null!==e&&(i.matrix.fromArray(e.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=e.radius),i.visible=null!==e}// Custom events
// Check pinchz
let r=A.joints["index-finger-tip"],i=A.joints["thumb-tip"],o=r.position.distanceTo(i.position);A.inputState.pinching&&o>.025?(A.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!A.inputState.pinching&&o<=.015&&(A.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&null!==(i=t.getPose(e.gripSpace,n))&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1);null!==o&&(null===(r=t.getPose(e.targetRaySpace,n))&&null!==i&&(r=i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(iB)))}return null!==o&&(o.visible=null!==r),null!==s&&(s.visible=null!==i),null!==A&&(A.visible=null!==a),this}// private method
_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){let n=new iN;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class iF extends eE{constructor(e,t,n,r,i,a,o,s,A,l){if(1026!==(l=void 0!==l?l:1026)&&1027!==l)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&1026===l&&(n=1014),void 0===n&&1027===l&&(n=1020),super(null,r,i,a,o,s,l,n,A),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==o?o:1003,this.minFilter=void 0!==s?s:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}class iz extends W{constructor(e,t){super();let n=this,r=null,i=1,a=null,o="local-floor",s=1,A=null,l=null,u=null,c=null,h=null,d=null,f=t.getContextAttributes(),p=null,m=null,g=[],v=[],_=new ny;_.layers.enable(1),_.viewport=new eS;let y=new ny;y.layers.enable(2),y.viewport=new eS;let x=[_,y],b=new iU;b.layers.enable(1),b.layers.enable(2);let M=null,w=null;//
function E(e){let t=v.indexOf(e.inputSource);if(-1===t)return;let n=g[t];void 0!==n&&(n.update(e.inputSource,e.frame,A||a),n.dispatchEvent({type:e.type,data:e.inputSource}))}function S(){r.removeEventListener("select",E),r.removeEventListener("selectstart",E),r.removeEventListener("selectend",E),r.removeEventListener("squeeze",E),r.removeEventListener("squeezestart",E),r.removeEventListener("squeezeend",E),r.removeEventListener("end",S),r.removeEventListener("inputsourceschange",T);for(let e=0;e<g.length;e++){let t=v[e];null!==t&&(v[e]=null,g[e].disconnect(t))}M=null,w=null,// restore framebuffer/rendering state
e.setRenderTarget(p),h=null,c=null,u=null,r=null,m=null,//
D.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function T(e){// Notify disconnected
for(let t=0;t<e.removed.length;t++){let n=e.removed[t],r=v.indexOf(n);r>=0&&(v[r]=null,g[r].disconnect(n))}// Notify connected
for(let t=0;t<e.added.length;t++){let n=e.added[t],r=v.indexOf(n);if(-1===r){// Assign input source a controller that currently has no input source
for(let e=0;e<g.length;e++){if(e>=v.length){v.push(n),r=e;break}if(null===v[e]){v[e]=n,r=e;break}}// If all controllers do currently receive input we ignore new ones
if(-1===r)break}let i=g[r];i&&i.connect(n)}}//
this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=g[e];return void 0===t&&(t=new ik,g[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=g[e];return void 0===t&&(t=new ik,g[e]=t),t.getGripSpace()},this.getHand=function(e){let t=g[e];return void 0===t&&(t=new ik,g[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return A||a},this.setReferenceSpace=function(e){A=e},this.getBaseLayer=function(){return null!==c?c:h},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return r},this.setSession=async function(l){if(null!==(r=l)){if(p=e.getRenderTarget(),r.addEventListener("select",E),r.addEventListener("selectstart",E),r.addEventListener("selectend",E),r.addEventListener("squeeze",E),r.addEventListener("squeezestart",E),r.addEventListener("squeezeend",E),r.addEventListener("end",S),r.addEventListener("inputsourceschange",T),!0!==f.xrCompatible&&await t.makeXRCompatible(),void 0===r.renderState.layers||!1===e.capabilities.isWebGL2){let n={antialias:void 0!==r.renderState.layers||f.antialias,alpha:!0,depth:f.depth,stencil:f.stencil,framebufferScaleFactor:i};h=new XRWebGLLayer(r,t,n),r.updateRenderState({baseLayer:h}),m=new eC(h.framebufferWidth,h.framebufferHeight,{format:1023,type:1009,colorSpace:e.outputColorSpace,stencilBuffer:f.stencil})}else{let n=null,a=null,o=null;f.depth&&(o=f.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=f.stencil?1027:1026,a=f.stencil?1020:1014);let s={colorFormat:t.RGBA8,depthFormat:o,scaleFactor:i};c=(u=new XRWebGLBinding(r,t)).createProjectionLayer(s),r.updateRenderState({layers:[c]}),m=new eC(c.textureWidth,c.textureHeight,{format:1023,type:1009,depthTexture:new iF(c.textureWidth,c.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:f.stencil,colorSpace:e.outputColorSpace,samples:f.antialias?4:0});let A=e.properties.get(m);A.__ignoreDepthValues=c.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(s),A=null,a=await r.requestReferenceSpace(o),D.setContext(r),D.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==r)return r.environmentBlendMode};//
let C=new eL,R=new eL;function P(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;b.near=y.near=_.near=e.near,b.far=y.far=_.far=e.far,(M!==b.near||w!==b.far)&&(// Note that the new renderState won't apply until the next frame. See #18320
r.updateRenderState({depthNear:b.near,depthFar:b.far}),M=b.near,w=b.far);let t=e.parent,n=b.cameras;P(b,t);for(let e=0;e<n.length;e++)P(n[e],t);2===n.length?/**
		 * Assumes 2 cameras that are parallel and share an X-axis, and that
		 * the cameras' projection and world matrices have already been set.
		 * And that near and far planes are identical for both cameras.
		 * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765
		 */function(e,t,n){C.setFromMatrixPosition(t.matrixWorld),R.setFromMatrixPosition(n.matrixWorld);let r=C.distanceTo(R),i=t.projectionMatrix.elements,a=n.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),A=(i[9]+1)/i[5],l=(i[9]-1)/i[5],u=(i[8]-1)/i[0],c=(a[8]+1)/a[0],h=r/(-u+c),d=-(h*u);// TODO: Better way to apply this offset?
t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(d),e.translateZ(h),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();// Find the union of the frustum values of the cameras and scale
// the values so that the near plane's position does not change in world space,
// although must now be relative to the new union camera.
let f=o+h,p=s+h;e.projectionMatrix.makePerspective(o*u-d,o*c+(r-d),A*s/p*f,l*s/p*f,f,p),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(b,_,y):b.projectionMatrix.copy(_.projectionMatrix),null===t?e.matrix.copy(b.matrixWorld):(e.matrix.copy(t.matrixWorld),e.matrix.invert(),e.matrix.multiply(b.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(b.projectionMatrix),e.projectionMatrixInverse.copy(b.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*Z*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)},this.getCamera=function(){return b},this.getFoveation=function(){if(null!==c||null!==h)return s},this.setFoveation=function(e){// 0 = no foveation = full resolution
// 1 = maximum foveation = the edges render at lower resolution
s=e,null!==c&&(c.fixedFoveation=e),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=e)};// Animation Loop
let L=null,D=new nL;D.setAnimationLoop(function(t,r){if(l=r.getViewerPose(A||a),d=r,null!==l){let t=l.views;null!==h&&(e.setRenderTargetFramebuffer(m,h.framebuffer),e.setRenderTarget(m));let n=!1;// check if it's necessary to rebuild cameraXR's camera list
t.length!==b.cameras.length&&(b.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){let i=t[r],a=null;if(null!==h)a=h.getViewport(i);else{let t=u.getViewSubImage(c,i);a=t.viewport,0===r&&(e.setRenderTargetTextures(m,t.colorTexture,c.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(m))}let o=x[r];void 0===o&&((o=new ny).layers.enable(r),o.viewport=new eS,x[r]=o),o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.quaternion,o.scale),o.projectionMatrix.fromArray(i.projectionMatrix),o.projectionMatrixInverse.copy(o.projectionMatrix).invert(),o.viewport.set(a.x,a.y,a.width,a.height),0===r&&(b.matrix.copy(o.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),!0===n&&b.cameras.push(o)}}//
for(let e=0;e<g.length;e++){let t=v[e],n=g[e];null!==t&&void 0!==n&&n.update(t,r,A||a)}L&&L(t,r),r.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:r}),d=null}),this.setAnimationLoop=function(e){L=e},this.dispose=function(){}}}function iG(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function r(r,i){r.opacity.value=i.opacity,i.color&&r.diffuse.value.copy(i.color),i.emissive&&r.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(r.map.value=i.map,n(i.map,r.mapTransform)),i.alphaMap&&(r.alphaMap.value=i.alphaMap,n(i.alphaMap,r.alphaMapTransform)),i.bumpMap&&(r.bumpMap.value=i.bumpMap,n(i.bumpMap,r.bumpMapTransform),r.bumpScale.value=i.bumpScale,1===i.side&&(r.bumpScale.value*=-1)),i.normalMap&&(r.normalMap.value=i.normalMap,n(i.normalMap,r.normalMapTransform),r.normalScale.value.copy(i.normalScale),1===i.side&&r.normalScale.value.negate()),i.displacementMap&&(r.displacementMap.value=i.displacementMap,n(i.displacementMap,r.displacementMapTransform),r.displacementScale.value=i.displacementScale,r.displacementBias.value=i.displacementBias),i.emissiveMap&&(r.emissiveMap.value=i.emissiveMap,n(i.emissiveMap,r.emissiveMapTransform)),i.specularMap&&(r.specularMap.value=i.specularMap,n(i.specularMap,r.specularMapTransform)),i.alphaTest>0&&(r.alphaTest.value=i.alphaTest);let a=t.get(i).envMap;if(a&&(r.envMap.value=a,r.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,r.reflectivity.value=i.reflectivity,r.ior.value=i.ior,r.refractionRatio.value=i.refractionRatio),i.lightMap){r.lightMap.value=i.lightMap;// artist-friendly light intensity scaling factor
let t=!0===e._useLegacyLights?Math.PI:1;r.lightMapIntensity.value=i.lightMapIntensity*t,n(i.lightMap,r.lightMapTransform)}i.aoMap&&(r.aoMap.value=i.aoMap,r.aoMapIntensity.value=i.aoMapIntensity,n(i.aoMap,r.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,nm(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,i,a,o,s){i.isMeshBasicMaterial?r(e,i):i.isMeshLambertMaterial?r(e,i):i.isMeshToonMaterial?(r(e,i),i.gradientMap&&(e.gradientMap.value=i.gradientMap)):i.isMeshPhongMaterial?(r(e,i),e.specular.value.copy(i.specular),e.shininess.value=Math.max(i.shininess,1e-4)):i.isMeshStandardMaterial?(r(e,i),function(e,r){e.metalness.value=r.metalness,r.metalnessMap&&(e.metalnessMap.value=r.metalnessMap,n(r.metalnessMap,e.metalnessMapTransform)),e.roughness.value=r.roughness,r.roughnessMap&&(e.roughnessMap.value=r.roughnessMap,n(r.roughnessMap,e.roughnessMapTransform));let i=t.get(r).envMap;i&&(e.envMapIntensity.value=r.envMapIntensity)}(e,i),i.isMeshPhysicalMaterial&&(e.ior.value=i.ior,i.sheen>0&&(e.sheenColor.value.copy(i.sheenColor).multiplyScalar(i.sheen),e.sheenRoughness.value=i.sheenRoughness,i.sheenColorMap&&(e.sheenColorMap.value=i.sheenColorMap,n(i.sheenColorMap,e.sheenColorMapTransform)),i.sheenRoughnessMap&&(e.sheenRoughnessMap.value=i.sheenRoughnessMap,n(i.sheenRoughnessMap,e.sheenRoughnessMapTransform))),i.clearcoat>0&&(e.clearcoat.value=i.clearcoat,e.clearcoatRoughness.value=i.clearcoatRoughness,i.clearcoatMap&&(e.clearcoatMap.value=i.clearcoatMap,n(i.clearcoatMap,e.clearcoatMapTransform)),i.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=i.clearcoatRoughnessMap,n(i.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),i.clearcoatNormalMap&&(e.clearcoatNormalMap.value=i.clearcoatNormalMap,n(i.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(i.clearcoatNormalScale),1===i.side&&e.clearcoatNormalScale.value.negate())),i.iridescence>0&&(e.iridescence.value=i.iridescence,e.iridescenceIOR.value=i.iridescenceIOR,e.iridescenceThicknessMinimum.value=i.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=i.iridescenceThicknessRange[1],i.iridescenceMap&&(e.iridescenceMap.value=i.iridescenceMap,n(i.iridescenceMap,e.iridescenceMapTransform)),i.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=i.iridescenceThicknessMap,n(i.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),i.transmission>0&&(e.transmission.value=i.transmission,e.transmissionSamplerMap.value=s.texture,e.transmissionSamplerSize.value.set(s.width,s.height),i.transmissionMap&&(e.transmissionMap.value=i.transmissionMap,n(i.transmissionMap,e.transmissionMapTransform)),e.thickness.value=i.thickness,i.thicknessMap&&(e.thicknessMap.value=i.thicknessMap,n(i.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=i.attenuationDistance,e.attenuationColor.value.copy(i.attenuationColor)),i.anisotropy>0&&(e.anisotropyVector.value.set(i.anisotropy*Math.cos(i.anisotropyRotation),i.anisotropy*Math.sin(i.anisotropyRotation)),i.anisotropyMap&&(e.anisotropyMap.value=i.anisotropyMap,n(i.anisotropyMap,e.anisotropyMapTransform))),e.specularIntensity.value=i.specularIntensity,e.specularColor.value.copy(i.specularColor),i.specularColorMap&&(e.specularColorMap.value=i.specularColorMap,n(i.specularColorMap,e.specularColorMapTransform)),i.specularIntensityMap&&(e.specularIntensityMap.value=i.specularIntensityMap,n(i.specularIntensityMap,e.specularIntensityMapTransform)))):i.isMeshMatcapMaterial?(r(e,i),i.matcap&&(e.matcap.value=i.matcap)):i.isMeshDepthMaterial?r(e,i):i.isMeshDistanceMaterial?(r(e,i),function(e,n){let r=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(r.matrixWorld),e.nearDistance.value=r.shadow.camera.near,e.farDistance.value=r.shadow.camera.far}(e,i)):i.isMeshNormalMaterial?r(e,i):i.isLineBasicMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,i.map&&(e.map.value=i.map,n(i.map,e.mapTransform)),i.isLineDashedMaterial&&(e.dashSize.value=i.dashSize,e.totalSize.value=i.dashSize+i.gapSize,e.scale.value=i.scale)):i.isPointsMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,e.size.value=i.size*a,e.scale.value=.5*o,i.map&&(e.map.value=i.map,n(i.map,e.uvTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,n(i.alphaMap,e.alphaMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest)):i.isSpriteMaterial?(e.diffuse.value.copy(i.color),e.opacity.value=i.opacity,e.rotation.value=i.rotation,i.map&&(e.map.value=i.map,n(i.map,e.mapTransform)),i.alphaMap&&(e.alphaMap.value=i.alphaMap,n(i.alphaMap,e.alphaMapTransform)),i.alphaTest>0&&(e.alphaTest.value=i.alphaTest)):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1);// #15581
}}}function iH(e,t,n,r){let i={},a={},o=[],s=n.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function A(e){let t={boundary:0,storage:0// bytes
};return"number"==typeof e?(// float/int
t.boundary=4,t.storage=4):e.isVector2?(// vec2
t.boundary=8,t.storage=8):e.isVector3||e.isColor?(// vec3
t.boundary=16,t.storage=12):e.isVector4?(// vec4
t.boundary=16,t.storage=16):e.isMatrix3?(// mat3 (in STD140 a 3x3 matrix is represented as 3x4)
t.boundary=48,t.storage=48):e.isMatrix4?(// mat4
t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function l(t){let n=t.target;n.removeEventListener("dispose",l);let r=o.indexOf(n.__bindingPointIndex);o.splice(r,1),e.deleteBuffer(i[n.id]),delete i[n.id],delete a[n.id]}return{bind:function(e,t){let n=t.program;r.uniformBlockBinding(e,n)},update:function(n,u){let c=i[n.id];void 0===c&&(function(e){// determine total buffer size according to the STD140 layout
// Hint: STD140 is the only supported layout in WebGL 2
let t=e.uniforms,n=0,r=0;for(let e=0,i=t.length;e<i;e++){let i=t[e],a={boundary:0,storage:0// bytes
},o=Array.isArray(i.value)?i.value:[i.value];for(let e=0,t=o.length;e<t;e++){let t=o[e],n=A(t);a.boundary+=n.boundary,a.storage+=n.storage}//
if(// the following two properties will be used for partial buffer updates
i.__data=new Float32Array(a.storage/Float32Array.BYTES_PER_ELEMENT),i.__offset=n,e>0){r=n%16;let e=16-r;// check for chunk overflow
0!==r&&e-a.boundary<0&&(// add padding and adjust offset
n+=16-r,i.__offset=n)}n+=a.storage}// ensure correct final padding
(r=n%16)>0&&(n+=16-r),//
e.__size=n,e.__cache={}}(n),c=function(t){// the setup of an UBO is independent of a particular shader program but global
let n=function(){for(let e=0;e<s;e++)if(-1===o.indexOf(e))return o.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;let r=e.createBuffer(),i=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,r),e.bufferData(e.UNIFORM_BUFFER,i,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,r),r}(n),i[n.id]=c,n.addEventListener("dispose",l));// ensure to update the binding points/block indices mapping for this program
let h=u.program;r.updateUBOMapping(n,h);// update UBO once per frame
let d=t.render.frame;a[n.id]!==d&&(function(t){let n=i[t.id],r=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let t=0,n=r.length;t<n;t++){let n=r[t];// partly update the buffer if necessary
if(!0===function(e,t,n){let r=e.value;if(void 0===n[t]){// cache entry does not exist so far
if("number"==typeof r)n[t]=r;else{let e=Array.isArray(r)?r:[r],i=[];for(let t=0;t<e.length;t++)i.push(e[t].clone());n[t]=i}return!0}// compare current value with cached entry
if("number"==typeof r){if(n[t]!==r)return n[t]=r,!0}else{let e=Array.isArray(n[t])?n[t]:[n[t]],i=Array.isArray(r)?r:[r];for(let t=0;t<e.length;t++){let n=e[t];if(!1===n.equals(i[t]))return n.copy(i[t]),!0}}return!1}(n,t,a)){let t=n.__offset,r=Array.isArray(n.value)?n.value:[n.value],i=0;for(let a=0;a<r.length;a++){let o=r[a],s=A(o);"number"==typeof o?(n.__data[0]=o,e.bufferSubData(e.UNIFORM_BUFFER,t+i,n.__data)):o.isMatrix3?(// manually converting 3x3 to 3x4
n.__data[0]=o.elements[0],n.__data[1]=o.elements[1],n.__data[2]=o.elements[2],n.__data[3]=o.elements[0],n.__data[4]=o.elements[3],n.__data[5]=o.elements[4],n.__data[6]=o.elements[5],n.__data[7]=o.elements[0],n.__data[8]=o.elements[6],n.__data[9]=o.elements[7],n.__data[10]=o.elements[8],n.__data[11]=o.elements[0]):(o.toArray(n.__data,i),i+=s.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,n.__data)}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),a[n.id]=d)},dispose:function(){for(let t in i)e.deleteBuffer(i[t]);o=[],i={},a={}}}}class iV{constructor(e={}){let t,n,r,i,a,o,s,A,l,u,c,h,d,f,p,m,g,v,_,y,x,b,M,w,E;let{canvas:S=function(){let e=eu("canvas");return e.style.display="block",e}(),context:T=null,depth:C=!0,stencil:R=!0,alpha:P=!1,antialias:L=!1,premultipliedAlpha:D=!0,preserveDrawingBuffer:O=!1,powerPreference:I="default",failIfMajorPerformanceCaveat:q=!1}=e;this.isWebGLRenderer=!0,t=null!==T?T.getContextAttributes().alpha:P;let U=new Uint32Array(4),N=new Int32Array(4),F=null,z=null,G=[],H=[];// public properties
this.domElement=S,// Debug configuration container
this.debug={/**
			 * Enables error checking and reporting when shader programs are being compiled
			 * @type {boolean}
			 */checkShaderErrors:!0,/**
			 * Callback for custom error reporting.
			 * @type {?Function}
			 */onShaderError:null},// clearing
this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,// scene graph
this.sortObjects=!0,// user-defined clipping
this.clippingPlanes=[],this.localClippingEnabled=!1,// physically based shading
this._outputColorSpace=B,// physical lights
this._useLegacyLights=!1,// tone mapping
this.toneMapping=0,this.toneMappingExposure=1;// internal properties
let V=this,j=!1,W=0,X=0,Q=null,Y=-1,Z=null,K=new eS,J=new eS,$=null,ee=new tk(0),et=0,er=S.width,ei=S.height,ea=1,es=null,eA=null,el=new eS(0,0,er,ei),ec=new eS(0,0,er,ei),eh=!1,ed=new nP,ef=!1,ep=!1,em=null,eg=new e8,ev=new eo,e_=new eL,ey={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ex(){return null===Q?ea:1}// initialize
let eb=T;function eM(e,t){for(let n=0;n<e.length;n++){let r=e[n],i=S.getContext(r,t);if(null!==i)return i}return null}try{if("setAttribute"in S&&S.setAttribute("data-engine","three.js r158"),// event listeners must be registered before WebGL context is created, see #12753
S.addEventListener("webglcontextlost",eT,!1),S.addEventListener("webglcontextrestored",eR,!1),S.addEventListener("webglcontextcreationerror",eP,!1),null===eb){let e=["webgl2","webgl","experimental-webgl"];if(!0===V.isWebGL1Renderer&&e.shift(),eb=eM(e,{alpha:!0,depth:C,stencil:R,antialias:L,premultipliedAlpha:D,preserveDrawingBuffer:O,powerPreference:I,failIfMajorPerformanceCaveat:q}),null===eb){if(eM(e))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}"undefined"!=typeof WebGLRenderingContext&&eb instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),void 0===eb.getShaderPrecisionFormat&&(eb.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ew(){n=new n8(eb),r=new nz(eb,n,e),n.init(r),M=new iq(eb,n,r),i=new iO(eb,n,r),a=new re(eb),o=new i_,s=new iI(eb,n,i,o,r,M,a),A=new nH(V),l=new n6(V),u=new nD(eb,r),w=new nk(eb,n,u,r),c=new n7(eb,u,a,w),h=new ri(eb,c,u,a),y=new rr(eb,r,s),g=new nG(o),d=new iv(V,A,l,n,r,w,g),f=new iG(V,o),p=new iM,m=new iR(n,r),_=new nB(V,A,l,i,h,t,D),v=new iD(V,h,r),E=new iH(eb,a,r,i),x=new nF(eb,n,a,r),b=new n9(eb,n,a,r),a.programs=d.programs,V.capabilities=r,V.extensions=n,V.properties=o,V.renderLists=p,V.shadowMap=v,V.state=i,V.info=a}ew();// xr
let eE=new iz(V,eb);// Events
function eT(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),j=!0}function eR(){console.log("THREE.WebGLRenderer: Context Restored."),j=!1;let e=a.autoReset,t=v.enabled,n=v.autoUpdate,r=v.needsUpdate,i=v.type;ew(),a.autoReset=e,v.enabled=t,v.autoUpdate=n,v.needsUpdate=r,v.type=i}function eP(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function eD(e){let t=e.target;t.removeEventListener("dispose",eD),function(e){let t=o.get(e).programs;void 0!==t&&(t.forEach(function(e){d.releaseProgram(e)}),e.isShaderMaterial&&d.releaseShaderCache(e))}(t),o.remove(t)}// Compile
function eO(e,t,n){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,ez(e,t,n),e.side=0,e.needsUpdate=!0,ez(e,t,n),e.side=2):ez(e,t,n)}this.xr=eE,// API
this.getContext=function(){return eb},this.getContextAttributes=function(){return eb.getContextAttributes()},this.forceContextLoss=function(){let e=n.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=n.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return ea},this.setPixelRatio=function(e){void 0!==e&&(ea=e,this.setSize(er,ei,!1))},this.getSize=function(e){return e.set(er,ei)},this.setSize=function(e,t,n=!0){if(eE.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}er=e,ei=t,S.width=Math.floor(e*ea),S.height=Math.floor(t*ea),!0===n&&(S.style.width=e+"px",S.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return e.set(er*ea,ei*ea).floor()},this.setDrawingBufferSize=function(e,t,n){er=e,ei=t,ea=n,S.width=Math.floor(e*n),S.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(K)},this.getViewport=function(e){return e.copy(el)},this.setViewport=function(e,t,n,r){e.isVector4?el.set(e.x,e.y,e.z,e.w):el.set(e,t,n,r),i.viewport(K.copy(el).multiplyScalar(ea).floor())},this.getScissor=function(e){return e.copy(ec)},this.setScissor=function(e,t,n,r){e.isVector4?ec.set(e.x,e.y,e.z,e.w):ec.set(e,t,n,r),i.scissor(J.copy(ec).multiplyScalar(ea).floor())},this.getScissorTest=function(){return eh},this.setScissorTest=function(e){i.setScissorTest(eh=e)},this.setOpaqueSort=function(e){es=e},this.setTransparentSort=function(e){eA=e},// Clearing
this.getClearColor=function(e){return e.copy(_.getClearColor())},this.setClearColor=function(){_.setClearColor.apply(_,arguments)},this.getClearAlpha=function(){return _.getClearAlpha()},this.setClearAlpha=function(){_.setClearAlpha.apply(_,arguments)},this.clear=function(e=!0,t=!0,n=!0){let r=0;if(e){// check if we're trying to clear an integer target
let e=!1;if(null!==Q){let t=Q.texture.format;e=1033===t||1031===t||1029===t}// use the appropriate clear functions to clear the target if it's a signed
// or unsigned integer target
if(e){let e=Q.texture.type,t=_.getClearColor(),n=_.getClearAlpha(),r=t.r,i=t.g,a=t.b;1009===e||1014===e||1012===e||1020===e||1017===e||1018===e?(U[0]=r,U[1]=i,U[2]=a,U[3]=n,eb.clearBufferuiv(eb.COLOR,0,U)):(N[0]=r,N[1]=i,N[2]=a,N[3]=n,eb.clearBufferiv(eb.COLOR,0,N))}else r|=eb.COLOR_BUFFER_BIT}t&&(r|=eb.DEPTH_BUFFER_BIT),n&&(r|=eb.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),eb.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},//
this.dispose=function(){S.removeEventListener("webglcontextlost",eT,!1),S.removeEventListener("webglcontextrestored",eR,!1),S.removeEventListener("webglcontextcreationerror",eP,!1),p.dispose(),m.dispose(),o.dispose(),A.dispose(),l.dispose(),h.dispose(),w.dispose(),E.dispose(),d.dispose(),eE.dispose(),eE.removeEventListener("sessionstart",eq),eE.removeEventListener("sessionend",eU),em&&(em.dispose(),em=null),eN.stop()},// Buffer rendering
this.renderBufferDirect=function(e,t,n,a,h,d){let p;null===t&&(t=ey);let m=h.isMesh&&0>h.matrixWorld.determinant(),v=function(e,t,n,a,u){var c;!0!==t.isScene&&(t=ey),s.resetTextureUnits();let h=t.fog,d=a.isMeshStandardMaterial?t.environment:null,p=null===Q?V.outputColorSpace:!0===Q.isXRRenderTarget?Q.texture.colorSpace:k,m=(a.isMeshStandardMaterial?l:A).get(a.envMap||d),v=!0===a.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,_=!!n.attributes.tangent&&(!!a.normalMap||a.anisotropy>0),x=!!n.morphAttributes.position,b=!!n.morphAttributes.normal,M=!!n.morphAttributes.color,w=0;a.toneMapped&&(null===Q||!0===Q.isXRRenderTarget)&&(w=V.toneMapping);let S=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,T=void 0!==S?S.length:0,C=o.get(a),R=z.state.lights;if(!0===ef&&(!0===ep||e!==Z)){let t=e===Z&&a.id===Y;// we might want to call this function with some ClippingGroup
// object instead of the material, once it becomes feasible
// (#8465, #8379)
g.setState(a,e,t)}//
let P=!1;a.version===C.__version?C.needsLights&&C.lightsStateVersion!==R.state.version?P=!0:C.outputColorSpace!==p?P=!0:u.isInstancedMesh&&!1===C.instancing?P=!0:u.isInstancedMesh||!0!==C.instancing?u.isSkinnedMesh&&!1===C.skinning?P=!0:u.isSkinnedMesh||!0!==C.skinning?u.isInstancedMesh&&!0===C.instancingColor&&null===u.instanceColor?P=!0:u.isInstancedMesh&&!1===C.instancingColor&&null!==u.instanceColor?P=!0:C.envMap!==m?P=!0:!0===a.fog&&C.fog!==h?P=!0:void 0!==C.numClippingPlanes&&(C.numClippingPlanes!==g.numPlanes||C.numIntersection!==g.numIntersection)?P=!0:C.vertexAlphas!==v?P=!0:C.vertexTangents!==_?P=!0:C.morphTargets!==x?P=!0:C.morphNormals!==b?P=!0:C.morphColors!==M?P=!0:C.toneMapping!==w?P=!0:!0===r.isWebGL2&&C.morphTargetsCount!==T&&(P=!0):P=!0:P=!0:(P=!0,C.__version=a.version);//
let L=C.currentProgram;!0===P&&(L=ez(a,t,u));let D=!1,O=!1,I=!1,q=L.getUniforms(),U=C.uniforms;if(i.useProgram(L.program)&&(D=!0,O=!0,I=!0),a.id!==Y&&(Y=a.id,O=!0),D||Z!==e){// common camera uniforms
q.setValue(eb,"projectionMatrix",e.projectionMatrix),q.setValue(eb,"viewMatrix",e.matrixWorldInverse);let t=q.map.cameraPosition;void 0!==t&&t.setValue(eb,e_.setFromMatrixPosition(e.matrixWorld)),r.logarithmicDepthBuffer&&q.setValue(eb,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&q.setValue(eb,"isOrthographic",!0===e.isOrthographicCamera),Z!==e&&(Z=e,// lighting uniforms depend on the camera so enforce an update
// now, in case this material supports lights - or later, when
// the next material that does gets activated:
O=!0,I=!0)}// skinning and morph target uniforms must be set even if material didn't change
// auto-setting of texture unit for bone and morph texture must go before other textures
// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures
if(u.isSkinnedMesh){q.setOptional(eb,u,"bindMatrix"),q.setOptional(eb,u,"bindMatrixInverse");let e=u.skeleton;e&&(r.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),q.setValue(eb,"boneTexture",e.boneTexture,s),q.setValue(eb,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let N=n.morphAttributes;// UBOs
if((void 0!==N.position||void 0!==N.normal||void 0!==N.color&&!0===r.isWebGL2)&&y.update(u,n,L),(O||C.receiveShadow!==u.receiveShadow)&&(C.receiveShadow=u.receiveShadow,q.setValue(eb,"receiveShadow",u.receiveShadow)),a.isMeshGouraudMaterial&&null!==a.envMap&&(U.envMap.value=m,U.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1),O&&(q.setValue(eb,"toneMappingExposure",V.toneMappingExposure),C.needsLights&&(c=I,U.ambientLightColor.needsUpdate=c,U.lightProbe.needsUpdate=c,U.directionalLights.needsUpdate=c,U.directionalLightShadows.needsUpdate=c,U.pointLights.needsUpdate=c,U.pointLightShadows.needsUpdate=c,U.spotLights.needsUpdate=c,U.spotLightShadows.needsUpdate=c,U.rectAreaLights.needsUpdate=c,U.hemisphereLights.needsUpdate=c),h&&!0===a.fog&&f.refreshFogUniforms(U,h),f.refreshMaterialUniforms(U,a,ea,ei,em),r8.upload(eb,eG(C),U,s)),a.isShaderMaterial&&!0===a.uniformsNeedUpdate&&(r8.upload(eb,eG(C),U,s),a.uniformsNeedUpdate=!1),a.isSpriteMaterial&&q.setValue(eb,"center",u.center),// common matrices
q.setValue(eb,"modelViewMatrix",u.modelViewMatrix),q.setValue(eb,"normalMatrix",u.normalMatrix),q.setValue(eb,"modelMatrix",u.matrixWorld),a.isShaderMaterial||a.isRawShaderMaterial){let e=a.uniformsGroups;for(let t=0,n=e.length;t<n;t++)if(r.isWebGL2){let n=e[t];E.update(n,L),E.bind(n,L)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return L}(e,t,n,a,h);i.setMaterial(a,m);//
let _=n.index,M=1;if(!0===a.wireframe){if(void 0===(_=c.getWireframeAttribute(n)))return;M=2}//
let S=n.drawRange,T=n.attributes.position,C=S.start*M,R=(S.start+S.count)*M;null!==d&&(C=Math.max(C,d.start*M),R=Math.min(R,(d.start+d.count)*M)),null!==_?(C=Math.max(C,0),R=Math.min(R,_.count)):null!=T&&(C=Math.max(C,0),R=Math.min(R,T.count));let P=R-C;if(P<0||P===1/0)return;//
w.setup(h,a,v,n,_);let L=x;//
if(null!==_&&(p=u.get(_),(L=b).setIndex(p)),h.isMesh)!0===a.wireframe?(i.setLineWidth(a.wireframeLinewidth*ex()),L.setMode(eb.LINES)):L.setMode(eb.TRIANGLES);else if(h.isLine){let e=a.linewidth;void 0===e&&(e=1),i.setLineWidth(e*ex()),h.isLineSegments?L.setMode(eb.LINES):h.isLineLoop?L.setMode(eb.LINE_LOOP):L.setMode(eb.LINE_STRIP)}else h.isPoints?L.setMode(eb.POINTS):h.isSprite&&L.setMode(eb.TRIANGLES);if(h.isInstancedMesh)L.renderInstances(C,P,h.count);else if(n.isInstancedBufferGeometry){let e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);L.renderInstances(C,P,t)}else L.render(C,P)},this.compile=function(e,t,n=null){null===n&&(n=e),(z=m.get(n)).init(),H.push(z),// gather lights from both the target scene and the new object that will be added to the scene.
n.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(z.pushLight(e),e.castShadow&&z.pushShadow(e))}),e!==n&&e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(z.pushLight(e),e.castShadow&&z.pushShadow(e))}),z.setupLights(V._useLegacyLights);// Only initialize materials in the new scene, not the targetScene.
let r=new Set;return e.traverse(function(e){let t=e.material;if(t){if(Array.isArray(t))for(let i=0;i<t.length;i++){let a=t[i];eO(a,n,e),r.add(a)}else eO(t,n,e),r.add(t)}}),H.pop(),z=null,r},// compileAsync
this.compileAsync=function(e,t,r=null){let i=this.compile(e,t,r);// Wait for all the materials in the new object to indicate that they're
// ready to be used before resolving the promise.
return new Promise(t=>{function r(){// once the list of compiling materials is empty, call the callback
if(i.forEach(function(e){let t=o.get(e),n=t.currentProgram;n.isReady()&&i.delete(e)}),0===i.size){t(e);return}// if some materials are still not ready, wait a bit and check again
setTimeout(r,10)}null!==n.get("KHR_parallel_shader_compile")?// blocking then do so right away.
r():// initialized a chance to finish.
setTimeout(r,10)})};// Animation Loop
let eI=null;function eq(){eN.stop()}function eU(){eN.start()}let eN=new nL;function eB(e,t,a,o){let A=e.opaque,l=e.transmissive,u=e.transparent;z.setupLightsView(a),!0===ef&&g.setGlobalState(V.clippingPlanes,a),l.length>0&&function(e,t,i,a){let o=!0===i.isScene?i.overrideMaterial:null;if(null!==o)return;let A=r.isWebGL2;null===em&&(em=new eC(1,1,{generateMipmaps:!0,type:n.has("EXT_color_buffer_half_float")?1016:1009,minFilter:1008,samples:A?4:0})),V.getDrawingBufferSize(ev),A?em.setSize(ev.x,ev.y):em.setSize(en(ev.x),en(ev.y));//
let l=V.getRenderTarget();V.setRenderTarget(em),V.getClearColor(ee),(et=V.getClearAlpha())<1&&V.setClearColor(16777215,.5),V.clear();// Turn off the features which can affect the frag color for opaque objects pass.
// Otherwise they are applied twice in opaque objects pass and transmission objects pass.
let u=V.toneMapping;V.toneMapping=0,ek(e,i,a),s.updateMultisampleRenderTarget(em),s.updateRenderTargetMipmap(em);let c=!1;for(let e=0,n=t.length;e<n;e++){let n=t[e],r=n.object,o=n.geometry,s=n.material,A=n.group;if(2===s.side&&r.layers.test(a.layers)){let e=s.side;s.side=1,s.needsUpdate=!0,eF(r,i,a,o,s,A),s.side=e,s.needsUpdate=!0,c=!0}}!0===c&&(s.updateMultisampleRenderTarget(em),s.updateRenderTargetMipmap(em)),V.setRenderTarget(l),V.setClearColor(ee,et),V.toneMapping=u}(A,l,t,a),o&&i.viewport(K.copy(o)),A.length>0&&ek(A,t,a),l.length>0&&ek(l,t,a),u.length>0&&ek(u,t,a),// Ensure depth buffer writing is enabled so it can be cleared on next render
i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),i.setPolygonOffset(!1)}function ek(e,t,n){let r=!0===t.isScene?t.overrideMaterial:null;for(let i=0,a=e.length;i<a;i++){let a=e[i],o=a.object,s=a.geometry,A=null===r?a.material:r,l=a.group;o.layers.test(n.layers)&&eF(o,t,n,s,A,l)}}function eF(e,t,n,r,i,a){e.onBeforeRender(V,t,n,r,i,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(V,t,n,r,e,a),!0===i.transparent&&2===i.side&&!1===i.forceSinglePass?(i.side=1,i.needsUpdate=!0,V.renderBufferDirect(n,t,r,i,e,a),i.side=0,i.needsUpdate=!0,V.renderBufferDirect(n,t,r,i,e,a),i.side=2):V.renderBufferDirect(n,t,r,i,e,a),e.onAfterRender(V,t,n,r,i,a)}function ez(e,t,n){!0!==t.isScene&&(t=ey);let r=o.get(e),i=z.state.lights,a=z.state.shadowsArray,s=i.state.version,u=d.getParameters(e,i.state,a,t,n),c=d.getProgramCacheKey(u),h=r.programs;// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change
r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?l:A).get(e.envMap||r.environment),void 0===h&&(// new material
e.addEventListener("dispose",eD),h=new Map,r.programs=h);let f=h.get(c);if(void 0!==f){if(r.currentProgram===f&&r.lightsStateVersion===s)return eH(e,u),f}else u.uniforms=d.getUniforms(e),e.onBuild(n,u,V),e.onBeforeCompile(u,V),f=d.acquireProgram(u,c),h.set(c,f),r.uniforms=u.uniforms;let p=r.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(p.clippingPlanes=g.uniform),eH(e,u),// store the light setup it was created for
r.needsLights=e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,r.lightsStateVersion=s,r.needsLights&&(// wire up the material to this renderer's lighting state
p.ambientLightColor.value=i.state.ambient,p.lightProbe.value=i.state.probe,p.directionalLights.value=i.state.directional,p.directionalLightShadows.value=i.state.directionalShadow,p.spotLights.value=i.state.spot,p.spotLightShadows.value=i.state.spotShadow,p.rectAreaLights.value=i.state.rectArea,p.ltc_1.value=i.state.rectAreaLTC1,p.ltc_2.value=i.state.rectAreaLTC2,p.pointLights.value=i.state.point,p.pointLightShadows.value=i.state.pointShadow,p.hemisphereLights.value=i.state.hemi,p.directionalShadowMap.value=i.state.directionalShadowMap,p.directionalShadowMatrix.value=i.state.directionalShadowMatrix,p.spotShadowMap.value=i.state.spotShadowMap,p.spotLightMatrix.value=i.state.spotLightMatrix,p.spotLightMap.value=i.state.spotLightMap,p.pointShadowMap.value=i.state.pointShadowMap,p.pointShadowMatrix.value=i.state.pointShadowMatrix),r.currentProgram=f,r.uniformsList=null,f}function eG(e){if(null===e.uniformsList){let t=e.currentProgram.getUniforms();e.uniformsList=r8.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function eH(e,t){let n=o.get(e);n.outputColorSpace=t.outputColorSpace,n.instancing=t.instancing,n.instancingColor=t.instancingColor,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}eN.setAnimationLoop(function(e){eI&&eI(e)}),"undefined"!=typeof self&&eN.setContext(self),this.setAnimationLoop=function(e){eI=e,eE.setAnimationLoop(e),null===e?eN.stop():eN.start()},eE.addEventListener("sessionstart",eq),eE.addEventListener("sessionend",eU),// Rendering
this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===j)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===eE.enabled&&!0===eE.isPresenting&&(!0===eE.cameraAutoUpdate&&eE.updateCamera(t),t=eE.getCamera()),!0===e.isScene&&e.onBeforeRender(V,e,t,Q),(z=m.get(e,H.length)).init(),H.push(z),eg.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ed.setFromProjectionMatrix(eg),ep=this.localClippingEnabled,ef=g.init(this.clippingPlanes,ep),(F=p.get(e,G.length)).init(),G.push(F),function e(t,n,r,i){if(!1===t.visible)return;let a=t.layers.test(n.layers);if(a){if(t.isGroup)r=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(n);else if(t.isLight)z.pushLight(t),t.castShadow&&z.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||ed.intersectsSprite(t)){i&&e_.setFromMatrixPosition(t.matrixWorld).applyMatrix4(eg);let e=h.update(t),n=t.material;n.visible&&F.push(t,e,n,r,e_.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||ed.intersectsObject(t))){let e=h.update(t),n=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),e_.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),e_.copy(e.boundingSphere.center)),e_.applyMatrix4(t.matrixWorld).applyMatrix4(eg)),Array.isArray(n)){let i=e.groups;for(let a=0,o=i.length;a<o;a++){let o=i[a],s=n[o.materialIndex];s&&s.visible&&F.push(t,e,s,r,e_.z,o)}}else n.visible&&F.push(t,e,n,r,e_.z,null)}}let o=t.children;for(let t=0,a=o.length;t<a;t++)e(o[t],n,r,i)}(e,t,0,V.sortObjects),F.finish(),!0===V.sortObjects&&F.sort(es,eA),//
this.info.render.frame++,!0===ef&&g.beginShadows();let n=z.state.shadowsArray;if(v.render(n,e,t),!0===ef&&g.endShadows(),!0===this.info.autoReset&&this.info.reset(),//
_.render(F,e),// render scene
z.setupLights(V._useLegacyLights),t.isArrayCamera){let n=t.cameras;for(let t=0,r=n.length;t<r;t++){let r=n[t];eB(F,e,r,r.viewport)}}else eB(F,e,t);null!==Q&&(// resolve multisample renderbuffers to a single-sample texture if necessary
s.updateMultisampleRenderTarget(Q),// Generate mipmap if we're using any kind of mipmap filtering
s.updateRenderTargetMipmap(Q)),!0===e.isScene&&e.onAfterRender(V,e,t),// _gl.finish();
w.resetDefaultState(),Y=-1,Z=null,H.pop(),z=H.length>0?H[H.length-1]:null,G.pop(),F=G.length>0?G[G.length-1]:null},this.getActiveCubeFace=function(){return W},this.getActiveMipmapLevel=function(){return X},this.getRenderTarget=function(){return Q},this.setRenderTargetTextures=function(e,t,r){o.get(e.texture).__webglTexture=t,o.get(e.depthTexture).__webglTexture=r;let i=o.get(e);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===r,i.__autoAllocateDepthBuffer||!0!==n.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){let n=o.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){Q=e,W=t,X=n;let a=!0,A=null,l=!1,u=!1;if(e){let c=o.get(e);void 0!==c.__useDefaultFramebuffer?(// We need to make sure to rebind the framebuffer.
i.bindFramebuffer(eb.FRAMEBUFFER,null),a=!1):void 0===c.__webglFramebuffer?s.setupRenderTarget(e):c.__hasExternalTextures&&s.rebindTextures(e,o.get(e.texture).__webglTexture,o.get(e.depthTexture).__webglTexture);let h=e.texture;(h.isData3DTexture||h.isDataArrayTexture||h.isCompressedArrayTexture)&&(u=!0);let d=o.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(A=Array.isArray(d[t])?d[t][n]:d[t],l=!0):A=r.isWebGL2&&e.samples>0&&!1===s.useMultisampledRTT(e)?o.get(e).__webglMultisampledFramebuffer:Array.isArray(d)?d[n]:d,K.copy(e.viewport),J.copy(e.scissor),$=e.scissorTest}else K.copy(el).multiplyScalar(ea).floor(),J.copy(ec).multiplyScalar(ea).floor(),$=eh;let c=i.bindFramebuffer(eb.FRAMEBUFFER,A);if(c&&r.drawBuffers&&a&&i.drawBuffers(e,A),i.viewport(K),i.scissor(J),i.setScissorTest($),l){let r=o.get(e.texture);eb.framebufferTexture2D(eb.FRAMEBUFFER,eb.COLOR_ATTACHMENT0,eb.TEXTURE_CUBE_MAP_POSITIVE_X+t,r.__webglTexture,n)}else if(u){let r=o.get(e.texture);eb.framebufferTextureLayer(eb.FRAMEBUFFER,eb.COLOR_ATTACHMENT0,r.__webglTexture,n||0,t||0)}Y=-1},this.readRenderTargetPixels=function(e,t,a,s,A,l,u){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let c=o.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==u&&(c=c[u]),c){i.bindFramebuffer(eb.FRAMEBUFFER,c);try{let i=e.texture,o=i.format,u=i.type;if(1023!==o&&M.convert(o)!==eb.getParameter(eb.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let c=1016===u&&(n.has("EXT_color_buffer_half_float")||r.isWebGL2&&n.has("EXT_color_buffer_float"));if(1009!==u&&M.convert(u)!==eb.getParameter(eb.IMPLEMENTATION_COLOR_READ_TYPE)&&// Edge and Chrome Mac < 52 (#9513)
!(1015===u&&(r.isWebGL2||n.has("OES_texture_float")||n.has("WEBGL_color_buffer_float")))&&// Chrome Mac >= 52 and Firefox
!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)
t>=0&&t<=e.width-s&&a>=0&&a<=e.height-A&&eb.readPixels(t,a,s,A,M.convert(o),M.convert(u),l)}finally{// restore framebuffer of current render target if necessary
let e=null!==Q?o.get(Q).__webglFramebuffer:null;i.bindFramebuffer(eb.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){let r=Math.pow(2,-n),a=Math.floor(t.image.width*r),o=Math.floor(t.image.height*r);s.setTexture2D(t,0),eb.copyTexSubImage2D(eb.TEXTURE_2D,n,0,0,e.x,e.y,a,o),i.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){let a=t.image.width,o=t.image.height,A=M.convert(n.format),l=M.convert(n.type);s.setTexture2D(n,0),// As another texture upload may have changed pixelStorei
// parameters, make sure they are correct for the dstTexture
eb.pixelStorei(eb.UNPACK_FLIP_Y_WEBGL,n.flipY),eb.pixelStorei(eb.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),eb.pixelStorei(eb.UNPACK_ALIGNMENT,n.unpackAlignment),t.isDataTexture?eb.texSubImage2D(eb.TEXTURE_2D,r,e.x,e.y,a,o,A,l,t.image.data):t.isCompressedTexture?eb.compressedTexSubImage2D(eb.TEXTURE_2D,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,A,t.mipmaps[0].data):eb.texSubImage2D(eb.TEXTURE_2D,r,e.x,e.y,A,l,t.image),0===r&&n.generateMipmaps&&eb.generateMipmap(eb.TEXTURE_2D),i.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r,a=0){let o;if(V.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let A=e.max.x-e.min.x+1,l=e.max.y-e.min.y+1,u=e.max.z-e.min.z+1,c=M.convert(r.format),h=M.convert(r.type);if(r.isData3DTexture)s.setTexture3D(r,0),o=eb.TEXTURE_3D;else if(r.isDataArrayTexture)s.setTexture2DArray(r,0),o=eb.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}eb.pixelStorei(eb.UNPACK_FLIP_Y_WEBGL,r.flipY),eb.pixelStorei(eb.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),eb.pixelStorei(eb.UNPACK_ALIGNMENT,r.unpackAlignment);let d=eb.getParameter(eb.UNPACK_ROW_LENGTH),f=eb.getParameter(eb.UNPACK_IMAGE_HEIGHT),p=eb.getParameter(eb.UNPACK_SKIP_PIXELS),m=eb.getParameter(eb.UNPACK_SKIP_ROWS),g=eb.getParameter(eb.UNPACK_SKIP_IMAGES),v=n.isCompressedTexture?n.mipmaps[0]:n.image;eb.pixelStorei(eb.UNPACK_ROW_LENGTH,v.width),eb.pixelStorei(eb.UNPACK_IMAGE_HEIGHT,v.height),eb.pixelStorei(eb.UNPACK_SKIP_PIXELS,e.min.x),eb.pixelStorei(eb.UNPACK_SKIP_ROWS,e.min.y),eb.pixelStorei(eb.UNPACK_SKIP_IMAGES,e.min.z),n.isDataTexture||n.isData3DTexture?eb.texSubImage3D(o,a,t.x,t.y,t.z,A,l,u,c,h,v.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),eb.compressedTexSubImage3D(o,a,t.x,t.y,t.z,A,l,u,c,v.data)):eb.texSubImage3D(o,a,t.x,t.y,t.z,A,l,u,c,h,v),eb.pixelStorei(eb.UNPACK_ROW_LENGTH,d),eb.pixelStorei(eb.UNPACK_IMAGE_HEIGHT,f),eb.pixelStorei(eb.UNPACK_SKIP_PIXELS,p),eb.pixelStorei(eb.UNPACK_SKIP_ROWS,m),eb.pixelStorei(eb.UNPACK_SKIP_IMAGES,g),0===a&&r.generateMipmaps&&eb.generateMipmap(o),i.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?s.setTextureCube(e,0):e.isData3DTexture?s.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?s.setTexture2DArray(e,0):s.setTexture2D(e,0),i.unbindTexture()},this.resetState=function(){W=0,X=0,Q=null,i.reset(),w.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return 2e3}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;let t=this.getContext();t.drawingBufferColorSpace=e===F?"display-p3":"srgb",t.unpackColorSpace=eg.workingColorSpace===z?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===B?3001:3e3}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=3001===e?B:k}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}(class extends iV{}).prototype.isWebGL1Renderer=!0;class ij{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=K()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=K()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){//
return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=K()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const iW=/*@__PURE__*/new eL;class iX{constructor(e,t,n,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)iW.fromBufferAttribute(this,t),iW.applyMatrix4(e),this.setXYZ(t,iW.x,iW.y,iW.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)iW.fromBufferAttribute(this,t),iW.applyNormalMatrix(e),this.setXYZ(t,iW.x,iW.y,iW.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)iW.fromBufferAttribute(this,t),iW.transformDirection(e),this.setXYZ(t,iW.x,iW.y,iW.z);return this}setX(e,t){return this.normalized&&(t=ei(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ei(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ei(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ei(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=er(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=er(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=er(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=er(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ei(t,this.array),n=ei(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ei(t,this.array),n=ei(n,this.array),r=ei(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ei(t,this.array),n=ei(n,this.array),r=ei(r,this.array),i=ei(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new iX(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");let e=[];for(let t=0;t<this.count;t++){let n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new tW(new this.array.constructor(e),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");let e=[];for(let t=0;t<this.count;t++){let n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}// de-interleave data and save it as an ordinary buffer attribute for now
return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}}}class iQ extends tW{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}class iY extends tG{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new tk(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const iZ=/*@__PURE__*/new eL,iK=/*@__PURE__*/new eL,iJ=/*@__PURE__*/new e8,i$=/*@__PURE__*/new e6,i0=/*@__PURE__*/new eJ;class i1 extends tb{constructor(e=new t3,t=new iY){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;// we assume non-indexed geometry
if(null===e.index){let t=e.attributes.position,n=[0];for(let e=1,r=t.count;e<r;e++)iZ.fromBufferAttribute(t,e-1),iK.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=iZ.distanceTo(iK);e.setAttribute("lineDistance",new tY(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){let n=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),i0.copy(n.boundingSphere),i0.applyMatrix4(r),i0.radius+=i,!1===e.ray.intersectsSphere(i0))return;//
iJ.copy(r).invert(),i$.copy(e.ray).applyMatrix4(iJ);let o=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,A=new eL,l=new eL,u=new eL,c=new eL,h=this.isLineSegments?2:1,d=n.index,f=n.attributes,p=f.position;if(null!==d){let n=Math.max(0,a.start),r=Math.min(d.count,a.start+a.count);for(let i=n,a=r-1;i<a;i+=h){let n=d.getX(i),r=d.getX(i+1);A.fromBufferAttribute(p,n),l.fromBufferAttribute(p,r);let a=i$.distanceSqToSegment(A,l,c,u);if(a>s)continue;c.applyMatrix4(this.matrixWorld);let o=e.ray.origin.distanceTo(c);o<e.near||o>e.far||t.push({distance:o,// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:u.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else{let n=Math.max(0,a.start),r=Math.min(p.count,a.start+a.count);for(let i=n,a=r-1;i<a;i+=h){A.fromBufferAttribute(p,i),l.fromBufferAttribute(p,i+1);let n=i$.distanceSqToSegment(A,l,c,u);if(n>s)continue;c.applyMatrix4(this.matrixWorld);let r=e.ray.origin.distanceTo(c);r<e.near||r>e.far||t.push({distance:r,// What do we want? intersection point on the ray or on the segment??
// point: raycaster.ray.at( distance ),
point:u.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,n=Object.keys(t);if(n.length>0){let e=t[n[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,n=e.length;t<n;t++){let n=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}}}const i2=/*@__PURE__*/new eL,i3=/*@__PURE__*/new eL;class i4 extends i1{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let e=this.geometry;// we assume non-indexed geometry
if(null===e.index){let t=e.attributes.position,n=[];for(let e=0,r=t.count;e<r;e+=2)i2.fromBufferAttribute(t,e),i3.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+i2.distanceTo(i3);e.setAttribute("lineDistance",new tY(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}/**
 * Extensible curve object.
 *
 * Some common of curve methods:
 * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )
 * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )
 * .getPoints(), .getSpacedPoints()
 * .getLength()
 * .updateArcLengths()
 *
 * This following curves inherit from THREE.Curve:
 *
 * -- 2D curves --
 * THREE.ArcCurve
 * THREE.CubicBezierCurve
 * THREE.EllipseCurve
 * THREE.LineCurve
 * THREE.QuadraticBezierCurve
 * THREE.SplineCurve
 *
 * -- 3D curves --
 * THREE.CatmullRomCurve3
 * THREE.CubicBezierCurve3
 * THREE.LineCurve3
 * THREE.QuadraticBezierCurve3
 *
 * A series of curves can be represented as a THREE.CurvePath.
 *
 **/class i5{constructor(){this.type="Curve",this.arcLengthDivisions=200}// Virtual base class method to overwrite and implement in subclasses
//	- t [0 .. 1]
getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}// Get point at relative position in curve according to arc length
// - u [0 .. 1]
getPointAt(e,t){let n=this.getUtoTmapping(e);return this.getPoint(n,t)}// Get sequence of points using getPoint( t )
getPoints(e=5){let t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}// Get sequence of points using getPointAt( u )
getSpacedPoints(e=5){let t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}// Get total curve arc length
getLength(){let e=this.getLengths();return e[e.length-1]}// Get list of cumulative segment lengths
getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],n,r=this.getPoint(0),i=0;t.push(0);for(let a=1;a<=e;a++)t.push(i+=(n=this.getPoint(a/e)).distanceTo(r)),r=n;return this.cacheArcLengths=t,t;// { sums: cache, sum: sum }; Sum is in the last element.
}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant
getUtoTmapping(e,t){let n;let r=this.getLengths(),i=0,a=r.length;n=t||e*r[a-1];// binary search for the index with largest value smaller than target u distance
let o=0,s=a-1,A;for(;o<=s;)if((A=r[i=Math.floor(o+(s-o)/2)]-n)<0)o=i+1;else if(A>0)s=i-1;else{s=i;break;// DONE
}if(r[i=s]===n)return i/(a-1);// we could get finer grain at lengths, or use simple interpolation between two points
let l=r[i],u=r[i+1],c=(i+(n-l)/(u-l))/(a-1);return c}// Returns a unit vector tangent at t
// In case any sub curve does not implement its tangent derivation,
// 2 points a small delta apart will be used to find its gradient
// which seems to give a reasonable approximation
getTangent(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),r>1&&(r=1);let i=this.getPoint(n),a=this.getPoint(r),o=t||(i.isVector2?new eo:new eL);return o.copy(a).sub(i).normalize(),o}getTangentAt(e,t){let n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf
let n=new eL,r=[],i=[],a=[],o=new eL,s=new e8;// compute the tangent vectors for each segment on the curve
for(let t=0;t<=e;t++){let n=t/e;r[t]=this.getTangentAt(n,new eL)}// select an initial normal vector perpendicular to the first tangent vector,
// and in the direction of the minimum tangent xyz component
i[0]=new eL,a[0]=new eL;let A=Number.MAX_VALUE,l=Math.abs(r[0].x),u=Math.abs(r[0].y),c=Math.abs(r[0].z);l<=A&&(A=l,n.set(1,0,0)),u<=A&&(A=u,n.set(0,1,0)),c<=A&&n.set(0,0,1),o.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],o),a[0].crossVectors(r[0],i[0]);// compute the slowly-varying normal and binormal vectors for each segment on the curve
for(let t=1;t<=e;t++){if(i[t]=i[t-1].clone(),a[t]=a[t-1].clone(),o.crossVectors(r[t-1],r[t]),o.length()>Number.EPSILON){o.normalize();let e=Math.acos(J(r[t-1].dot(r[t]),-1,1));// clamp for floating pt errors
i[t].applyMatrix4(s.makeRotationAxis(o,e))}a[t].crossVectors(r[t],i[t])}// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same
if(!0===t){let t=Math.acos(J(i[0].dot(i[e]),-1,1));t/=e,r[0].dot(o.crossVectors(i[0],i[e]))>0&&(t=-t);for(let n=1;n<=e;n++)// twist a little...
i[n].applyMatrix4(s.makeRotationAxis(r[n],t*n)),a[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class i6 extends i5{constructor(e=0,t=0,n=1,r=1,i=0,a=2*Math.PI,o=!1,s=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s}getPoint(e,t){let n=t||new eo,r=2*Math.PI,i=this.aEndAngle-this.aStartAngle,a=Math.abs(i)<Number.EPSILON;// ensures that deltaAngle is 0 .. 2 PI
for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);let o=this.aStartAngle+e*i,s=this.aX+this.xRadius*Math.cos(o),A=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){let e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),n=s-this.aX,r=A-this.aY;// Rotate the point about the center of the ellipse.
s=n*e-r*t+this.aX,A=n*t+r*e+this.aY}return n.set(s,A)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}/**
 * Centripetal CatmullRom Curve - which is useful for avoiding
 * cusps and self-intersections in non-uniform catmull rom curves.
 * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
 *
 * curve.type accepts centripetal(default), chordal and catmullrom
 * curve.tension is used for catmullrom which defaults to 0.5
 *//*
Based on an optimized c++ solution in
 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
 - http://ideone.com/NoEbVM

This CubicPoly class could be used for reusing some variables and calculations,
but for three.js curve use, it could be possible inlined and flatten into a single function call
which can be placed in CurveUtils.
*/function i8(){let e=0,t=0,n=0,r=0;/*
	 * Compute coefficients for a cubic polynomial
	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
	 * such that
	 *   p(0) = x0, p(1) = x1
	 *  and
	 *   p'(0) = t0, p'(1) = t1.
	 */function i(i,a,o,s){e=i,t=o,n=-3*i+3*a-2*o-s,r=2*i-2*a+o+s}return{initCatmullRom:function(e,t,n,r,a){i(t,n,a*(n-e),a*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,a,o,s){// compute tangents when parameterized in [t1,t2]
let A=(t-e)/a-(n-e)/(a+o)+(n-t)/o,l=(n-t)/o-(r-t)/(o+s)+(r-n)/s;i(t,n,// rescale tangents for parametrization in [0,1]
A*=o,l*=o)},calc:function(i){let a=i*i;return e+t*i+n*a+r*(a*i)}}}//
const i7=/*@__PURE__*/new eL,i9=/*@__PURE__*/new i8,ae=/*@__PURE__*/new i8,at=/*@__PURE__*/new i8;/**
 * Bezier Curves formulas obtained from
 * https://en.wikipedia.org/wiki/B%C3%A9zier_curve
 */function an(e,t,n,r,i){let a=(r-t)*.5,o=(i-n)*.5,s=e*e;return(2*n-2*r+a+o)*(e*s)+(-3*n+3*r-2*a-o)*s+a*e+n}function ar(e,t,n,r){return(//
function(e,t){let n=1-e;return n*n*t}(e,t)+2*(1-e)*e*n+e*e*r)}function ai(e,t,n,r,i){return(//
function(e,t){let n=1-e;return n*n*n*t}(e,t)+function(e,t){let n=1-e;return 3*n*n*e*t}(e,n)+3*(1-e)*e*e*r+e*e*e*i)}class aa extends i5{constructor(e=new eo,t=new eo,n=new eo,r=new eo){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new eo){let n=this.v0,r=this.v1,i=this.v2,a=this.v3;return t.set(ai(e,n.x,r.x,i.x,a.x),ai(e,n.y,r.y,i.y,a.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ao extends i5{constructor(e=new eL,t=new eL,n=new eL,r=new eL){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new eL){let n=this.v0,r=this.v1,i=this.v2,a=this.v3;return t.set(ai(e,n.x,r.x,i.x,a.x),ai(e,n.y,r.y,i.y,a.y),ai(e,n.z,r.z,i.z,a.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class as extends i5{constructor(e=new eo,t=new eo){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new eo){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}// Line curve is linear, so we can overwrite default getPointAt
getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new eo){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class aA extends i5{constructor(e=new eo,t=new eo,n=new eo){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new eo){let n=this.v0,r=this.v1,i=this.v2;return t.set(ar(e,n.x,r.x,i.x),ar(e,n.y,r.y,i.y)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class al extends i5{constructor(e=new eL,t=new eL,n=new eL){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new eL){let n=this.v0,r=this.v1,i=this.v2;return t.set(ar(e,n.x,r.x,i.x),ar(e,n.y,r.y,i.y),ar(e,n.z,r.z,i.z)),t}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class au extends i5{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new eo){let n=this.points,r=(n.length-1)*e,i=Math.floor(r),a=r-i,o=n[0===i?i:i-1],s=n[i],A=n[i>n.length-2?n.length-1:i+1],l=n[i>n.length-3?n.length-1:i+2];return t.set(an(a,o.x,s.x,A.x,l.x),an(a,o.y,s.y,A.y,l.y)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let n=e.points[t];this.points.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){let n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let n=e.points[t];this.points.push(new eo().fromArray(n))}return this}}var ac=/*#__PURE__*/Object.freeze({__proto__:null,ArcCurve:class extends i6{constructor(e,t,n,r,i,a){super(e,t,n,n,r,i,a),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends i5{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new eL){let n,r;let i=this.points,a=i.length,o=(a-(this.closed?0:1))*e,s=Math.floor(o),A=o-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/a)+1)*a:0===A&&s===a-1&&(s=a-2,A=1),this.closed||s>0?n=i[(s-1)%a]:(// extrapolate first point
i7.subVectors(i[0],i[1]).add(i[0]),n=i7);let l=i[s%a],u=i[(s+1)%a];if(this.closed||s+2<a?r=i[(s+2)%a]:(// extrapolate last point
i7.subVectors(i[a-1],i[a-2]).add(i[a-1]),r=i7),"centripetal"===this.curveType||"chordal"===this.curveType){// init Centripetal / Chordal Catmull-Rom
let e="chordal"===this.curveType?.5:.25,t=Math.pow(n.distanceToSquared(l),e),i=Math.pow(l.distanceToSquared(u),e),a=Math.pow(u.distanceToSquared(r),e);i<1e-4&&(i=1),t<1e-4&&(t=i),a<1e-4&&(a=i),i9.initNonuniformCatmullRom(n.x,l.x,u.x,r.x,t,i,a),ae.initNonuniformCatmullRom(n.y,l.y,u.y,r.y,t,i,a),at.initNonuniformCatmullRom(n.z,l.z,u.z,r.z,t,i,a)}else"catmullrom"===this.curveType&&(i9.initCatmullRom(n.x,l.x,u.x,r.x,this.tension),ae.initCatmullRom(n.y,l.y,u.y,r.y,this.tension),at.initCatmullRom(n.z,l.z,u.z,r.z,this.tension));return t.set(i9.calc(A),ae.calc(A),at.calc(A)),t}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){let n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){let n=e.points[t];this.points.push(new eL().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},CubicBezierCurve:aa,CubicBezierCurve3:ao,EllipseCurve:i6,LineCurve:as,LineCurve3:class extends i5{constructor(e=new eL,t=new eL){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new eL){return 1===e?t.copy(this.v2):(t.copy(this.v2).sub(this.v1),t.multiplyScalar(e).add(this.v1)),t}// Line curve is linear, so we can overwrite default getPointAt
getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new eL){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:aA,QuadraticBezierCurve3:al,SplineCurve:au});/**************************************************************
 *	Curved Path - a curve path is simply a array of connected
 *  curves, but retains the api of a curve
 **************************************************************/class ah extends i5{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){// Add a line curve if start and end of lines are not connected
let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){let n=!0===e.isVector2?"LineCurve":"LineCurve3";this.curves.push(new ac[n](t,e))}return this}// To get accurate point with reference to
// entire path distance at time t,
// following has to be done:
// 1. Length of each sub path have to be known
// 2. Locate and identify type of curve
// 3. Get t for the curve
// 4. Return curve.getPointAt(t')
getPoint(e,t){let n=e*this.getLength(),r=this.getCurveLengths(),i=0;// To think about boundaries points.
for(;i<r.length;){if(r[i]>=n){let e=r[i]-n,a=this.curves[i],o=a.getLength(),s=0===o?0:1-e/o;return a.getPointAt(s,t)}i++}return null;// loop where sum != 0, sum > d , sum+1 <d
}// We cannot use the default THREE.Curve getPoint() with getLength() because in
// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
// getPoint() depends on getLength
getLength(){let e=this.getCurveLengths();return e[e.length-1]}// cacheLengths must be recalculated.
updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}// Compute lengths and cache them
// We cannot overwrite getLengths() because UtoT mapping uses it.
getCurveLengths(){// We use cache values if curves and cache array are same length
if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;// Get length of sub-curve
// Push sums into cached array
let e=[],t=0;for(let n=0,r=this.curves.length;n<r;n++)e.push(t+=this.curves[n].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t;let n=[];for(let r=0,i=this.curves;r<i.length;r++){let a=i[r],o=a.isEllipseCurve?2*e:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,s=a.getPoints(o);for(let e=0;e<s.length;e++){let r=s[e];t&&t.equals(r)||(n.push(r),t=r);// ensures no consecutive points are duplicates
}}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){let n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){let n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){let n=e.curves[t];this.curves.push(new ac[n.type]().fromJSON(n))}return this}}class ad extends ah{constructor(e){super(),this.type="Path",this.currentPoint=new eo,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let n=new as(this.currentPoint.clone(),new eo(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){let i=new aA(this.currentPoint.clone(),new eo(e,t),new eo(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,i,a){let o=new aa(this.currentPoint.clone(),new eo(e,t),new eo(n,r),new eo(i,a));return this.curves.push(o),this.currentPoint.set(i,a),this}splineThru(e/*Array of Vector*/){let t=[this.currentPoint.clone()].concat(e),n=new au(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,i,a){let o=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+o,t+s,n,r,i,a),this}absarc(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this}ellipse(e,t,n,r,i,a,o,s){let A=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+A,t+l,n,r,i,a,o,s),this}absellipse(e,t,n,r,i,a,o,s){let A=new i6(e,t,n,r,i,a,o,s);if(this.curves.length>0){// if a previous curve is present, attempt to join
let e=A.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(A);let l=A.getPoint(1);return this.currentPoint.copy(l),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class af extends t3{constructor(e=[new eo(0,-.5),new eo(.5,0),new eo(0,.5)],t=12,n=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t),// clamp phiLength so it's in range of [ 0, 2PI ]
r=J(r,0,2*Math.PI);// buffers
let i=[],a=[],o=[],s=[],A=[],l=1/t,u=new eL,c=new eo,h=new eL,d=new eL,f=new eL,p=0,m=0;// pre-compute normals for initial "meridian"
for(let t=0;t<=e.length-1;t++)switch(t){case 0:p=e[t+1].x-e[t].x,m=e[t+1].y-e[t].y,h.x=1*m,h.y=-p,h.z=0*m,f.copy(h),h.normalize(),s.push(h.x,h.y,h.z);break;case e.length-1:s.push(f.x,f.y,f.z);break;default:p=e[t+1].x-e[t].x,m=e[t+1].y-e[t].y,h.x=1*m,h.y=-p,h.z=0*m,d.copy(h),h.x+=f.x,h.y+=f.y,h.z+=f.z,h.normalize(),s.push(h.x,h.y,h.z),f.copy(d)}// generate vertices, uvs and normals
for(let i=0;i<=t;i++){let h=n+i*l*r,d=Math.sin(h),f=Math.cos(h);for(let n=0;n<=e.length-1;n++){// vertex
u.x=e[n].x*d,u.y=e[n].y,u.z=e[n].x*f,a.push(u.x,u.y,u.z),// uv
c.x=i/t,c.y=n/(e.length-1),o.push(c.x,c.y);// normal
let r=s[3*n+0]*d,l=s[3*n+1],h=s[3*n+0]*f;A.push(r,l,h)}}// indices
for(let n=0;n<t;n++)for(let t=0;t<e.length-1;t++){let r=t+n*e.length,a=r+e.length,o=r+e.length+1,s=r+1;// faces
i.push(r,a,s),i.push(o,s,a)}// build geometry
this.setIndex(i),this.setAttribute("position",new tY(a,3)),this.setAttribute("uv",new tY(o,2)),this.setAttribute("normal",new tY(A,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new af(e.points,e.segments,e.phiStart,e.phiLength)}}class ap extends af{constructor(e=1,t=1,n=4,r=8){let i=new ad;i.absarc(0,-t/2,e,1.5*Math.PI,0),i.absarc(0,t/2,e,0,.5*Math.PI),super(i.getPoints(n),r),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:r}}static fromJSON(e){return new ap(e.radius,e.length,e.capSegments,e.radialSegments)}}class am extends t3{constructor(e=1,t=32,n=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);// buffers
let i=[],a=[],o=[],s=[],A=new eL,l=new eo;// center point
a.push(0,0,0),o.push(0,0,1),s.push(.5,.5);for(let i=0,u=3;i<=t;i++,u+=3){let c=n+i/t*r;// vertex
A.x=e*Math.cos(c),A.y=e*Math.sin(c),a.push(A.x,A.y,A.z),// normal
o.push(0,0,1),// uvs
l.x=(a[u]/e+1)/2,l.y=(a[u+1]/e+1)/2,s.push(l.x,l.y)}// indices
for(let e=1;e<=t;e++)i.push(e,e+1,0);// build geometry
this.setIndex(i),this.setAttribute("position",new tY(a,3)),this.setAttribute("normal",new tY(o,3)),this.setAttribute("uv",new tY(s,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new am(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ag extends t3{constructor(e=1,t=1,n=1,r=32,i=1,a=!1,o=0,s=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:a,thetaStart:o,thetaLength:s};let A=this;r=Math.floor(r),i=Math.floor(i);// buffers
let l=[],u=[],c=[],h=[],d=0,f=[],p=n/2,m=0;function g(n){// save the index of the first center vertex
let i=d,a=new eo,f=new eL,g=0,v=!0===n?e:t,_=!0===n?1:-1;// first we generate the center vertex data of the cap.
// because the geometry needs one set of uvs per face,
// we must generate a center vertex per face/segment
for(let e=1;e<=r;e++)// vertex
u.push(0,p*_,0),// normal
c.push(0,_,0),// uv
h.push(.5,.5),// increase index
d++;// save the index of the last center vertex
let y=d;// now we generate the surrounding vertices, normals and uvs
for(let e=0;e<=r;e++){let t=e/r,n=t*s+o,i=Math.cos(n),A=Math.sin(n);// vertex
f.x=v*A,f.y=p*_,f.z=v*i,u.push(f.x,f.y,f.z),// normal
c.push(0,_,0),// uv
a.x=.5*i+.5,a.y=.5*A*_+.5,h.push(a.x,a.y),// increase index
d++}// generate indices
for(let e=0;e<r;e++){let t=i+e,r=y+e;!0===n?l.push(r,r+1,t):l.push(r+1,r,t),g+=3}// add a group to the geometry. this will ensure multi material support
A.addGroup(m,g,!0===n?1:2),// calculate new start value for groups
m+=g}// generate geometry
(function(){let a=new eL,g=new eL,v=0,_=(t-e)/n;// generate vertices, normals and uvs
for(let A=0;A<=i;A++){let l=[],m=A/i,v=m*(t-e)+e;for(let e=0;e<=r;e++){let t=e/r,i=t*s+o,A=Math.sin(i),f=Math.cos(i);// vertex
g.x=v*A,g.y=-m*n+p,g.z=v*f,u.push(g.x,g.y,g.z),// normal
a.set(A,_,f).normalize(),c.push(a.x,a.y,a.z),// uv
h.push(t,1-m),// save index of vertex in respective row
l.push(d++)}// now save vertices of the row in our index array
f.push(l)}// generate indices
for(let e=0;e<r;e++)for(let t=0;t<i;t++){// we use the index array to access the correct indices
let n=f[t][e],r=f[t+1][e],i=f[t+1][e+1],a=f[t][e+1];// faces
l.push(n,r,a),l.push(r,i,a),// update group counter
v+=6}// add a group to the geometry. this will ensure multi material support
A.addGroup(m,v,0),// calculate new start value for groups
m+=v})(),!1===a&&(e>0&&g(!0),t>0&&g(!1)),// build geometry
this.setIndex(l),this.setAttribute("position",new tY(u,3)),this.setAttribute("normal",new tY(c,3)),this.setAttribute("uv",new tY(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ag(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class av extends ag{constructor(e=1,t=1,n=32,r=1,i=!1,a=0,o=2*Math.PI){super(0,e,t,n,r,i,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:o}}static fromJSON(e){return new av(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class a_ extends t3{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};// default buffer data
let i=[],a=[];function o(e){i.push(e.x,e.y,e.z)}function s(t,n){let r=3*t;n.x=e[r+0],n.y=e[r+1],n.z=e[r+2]}function A(e,t,n,r){r<0&&1===e.x&&(a[t]=e.x-1),0===n.x&&0===n.z&&(a[t]=r/2/Math.PI+.5)}// Angle around the Y axis, counter-clockwise when looking from above.
function l(e){return Math.atan2(e.z,-e.x)}// the subdivision creates the vertex buffer data
// helper functions
(function(e){let n=new eL,r=new eL,i=new eL;// iterate over all faces and apply a subdivision with the given detail value
for(let a=0;a<t.length;a+=3)// get the vertices of the face
s(t[a+0],n),s(t[a+1],r),s(t[a+2],i),// perform subdivision
function(e,t,n,r){let i=r+1,a=[];// construct all of the vertices for this subdivision
for(let r=0;r<=i;r++){a[r]=[];let o=e.clone().lerp(n,r/i),s=t.clone().lerp(n,r/i),A=i-r;for(let e=0;e<=A;e++)0===e&&r===i?a[r][e]=o:a[r][e]=o.clone().lerp(s,e/A)}// construct all of the faces
for(let e=0;e<i;e++)for(let t=0;t<2*(i-e)-1;t++){let n=Math.floor(t/2);t%2==0?(o(a[e][n+1]),o(a[e+1][n]),o(a[e][n])):(o(a[e][n+1]),o(a[e+1][n+1]),o(a[e+1][n]))}}(n,r,i,e)})(r),// all vertices should lie on a conceptual sphere with a given radius
function(e){let t=new eL;// iterate over the entire buffer and apply the radius to each vertex
for(let n=0;n<i.length;n+=3)t.x=i[n+0],t.y=i[n+1],t.z=i[n+2],t.normalize().multiplyScalar(e),i[n+0]=t.x,i[n+1]=t.y,i[n+2]=t.z}(n),// finally, create the uv data
function(){let e=new eL;for(let t=0;t<i.length;t+=3){e.x=i[t+0],e.y=i[t+1],e.z=i[t+2];let n=l(e)/2/Math.PI+.5,r=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;a.push(n,1-r)}(function(){let e=new eL,t=new eL,n=new eL,r=new eL,o=new eo,s=new eo,u=new eo;for(let c=0,h=0;c<i.length;c+=9,h+=6){e.set(i[c+0],i[c+1],i[c+2]),t.set(i[c+3],i[c+4],i[c+5]),n.set(i[c+6],i[c+7],i[c+8]),o.set(a[h+0],a[h+1]),s.set(a[h+2],a[h+3]),u.set(a[h+4],a[h+5]),r.copy(e).add(t).add(n).divideScalar(3);let d=l(r);A(o,h+0,e,d),A(s,h+2,t,d),A(u,h+4,n,d)}})(),function(){// handle case when face straddles the seam, see #3269
for(let e=0;e<a.length;e+=6){// uv data of a single face
let t=a[e+0],n=a[e+2],r=a[e+4],i=Math.max(t,n,r),o=Math.min(t,n,r);// 0.9 is somewhat arbitrary
i>.9&&o<.1&&(t<.2&&(a[e+0]+=1),n<.2&&(a[e+2]+=1),r<.2&&(a[e+4]+=1))}}()}(),// build non-indexed geometry
this.setAttribute("position",new tY(i,3)),this.setAttribute("normal",new tY(i.slice(),3)),this.setAttribute("uv",new tY(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new a_(e.vertices,e.indices,e.radius,e.details)}}class ay extends a_{constructor(e=1,t=0){let n=(1+Math.sqrt(5))/2,r=1/n;super([// (±1, ±1, ±1)
-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)
0,-r,-n,0,-r,n,0,r,-n,0,r,n,// (±1/φ, ±φ, 0)
-r,-n,0,-r,n,0,r,-n,0,r,n,0,// (±φ, 0, ±1/φ)
-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ay(e.radius,e.detail)}}class ax extends ad{constructor(e){super(e),this.uuid=K(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t}// get points of shape and holes (keypoints based on segments parameter)
extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){let n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){let n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){let n=e.holes[t];this.holes.push(new ad().fromJSON(n))}return this}}/**
 * Port from https://github.com/mapbox/earcut (v2.2.4)
 */const ab={triangulate:function(e,t,n=2){let r,i,a,o,s,A,l;let u=t&&t.length,c=u?t[0]*n:e.length,h=aM(e,0,c,n,!0),d=[];if(!h||h.next===h.prev)return d;// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
if(u&&(h=// link every hole into the outer loop, producing a single-ring polygon without holes
function(e,t,n,r){let i,a,o,s,A;let l=[];for(i=0,a=t.length;i<a;i++)o=t[i]*r,s=i<a-1?t[i+1]*r:e.length,(A=aM(e,o,s,r,!1))===A.next&&(A.steiner=!0),l.push(// find the leftmost node of a polygon ring
function(e){let t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e)return n}(A));// process holes from left to right
for(l.sort(aE),i=0;i<l.length;i++)n=// find a bridge between vertices that connects hole with an outer ring and link it
function(e,t){let n=// David Eberly's algorithm for finding a bridge between hole and outer polygon
function(e,t){let n=t,r=-1/0,i,a=e.x,o=e.y;// find a segment intersected by a ray from the hole's leftmost point to the left;
// segment's endpoint with lesser x will be potential connection point
do{if(o<=n.y&&o>=n.next.y&&n.next.y!==n.y){let e=n.x+(o-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=a&&e>r&&(r=e,i=n.x<n.next.x?n:n.next,e===a))return i;// hole touches outer segment; pick leftmost endpoint
}n=n.next}while(n!==t)if(!i)return null;// look for points inside the triangle of hole point, segment intersection and endpoint;
// if there are no points found, we have a valid connection;
// otherwise choose the point of the minimum angle with the ray as connection point
let s=i,A=i.x,l=i.y,u=1/0,c;n=i;do{var h,d;a>=n.x&&n.x>=A&&a!==n.x&&aT(o<l?a:r,o,A,l,o<l?r:a,o,n.x,n.y)&&(c=Math.abs(o-n.y)/(a-n.x),aO(n,e)&&(c<u||c===u&&(n.x>i.x||n.x===i.x&&(h=i,d=n,0>aC(h.prev,h,d.prev)&&0>aC(d.next,h,h.next))))&&(i=n,u=c)),n=n.next}while(n!==s)return i}(e,t);if(!n)return t;let r=aI(n,e);return(// filter collinear points around the cuts
aw(r,r.next),aw(n,n.next))}(l[i],n);return n}(e,t,h,n)),e.length>80*n){r=a=e[0],i=o=e[1];for(let t=n;t<c;t+=n)s=e[t],A=e[t+1],s<r&&(r=s),A<i&&(i=A),s>a&&(a=s),A>o&&(o=A);l=0!==// minX, minY and invSize are later used to transform coords into integers for z-order calculation
(l=Math.max(a-r,o-i))?32767/l:0}return(// main ear slicing loop which triangulates a polygon (given as a linked list)
function e(t,n,r,i,a,o,s){if(!t)return;// interlink polygon nodes in z-order
!s&&o&&// interlink polygon nodes in z-order
function(e,t,n,r){let i=e;do 0===i.z&&(i.z=aS(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e)i.prevZ.nextZ=null,i.prevZ=null,// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function(e){let t,n,r,i,a,o,s,A,l=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,r=n,s=0,t=0;t<l&&(s++,r=r.nextZ);t++);for(A=l;s>0||A>0&&r;)0!==s&&(0===A||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,A--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,l*=2}while(o>1)}(i)}(t,i,a,o);let A=t,l,u;// iterate through ears, slicing them one by one
for(;t.prev!==t.next;){if(l=t.prev,u=t.next,o?function(e,t,n,r){let i=e.prev,a=e.next;if(aC(i,e,a)>=0)return!1;// reflex, can't be an ear
let o=i.x,s=e.x,A=a.x,l=i.y,u=e.y,c=a.y,h=o<s?o<A?o:A:s<A?s:A,d=l<u?l<c?l:c:u<c?u:c,f=o>s?o>A?o:A:s>A?s:A,p=l>u?l>c?l:c:u>c?u:c,m=aS(h,d,t,n,r),g=aS(f,p,t,n,r),v=e.prevZ,_=e.nextZ;// look for points inside the triangle in both directions
for(;v&&v.z>=m&&_&&_.z<=g;){if(v.x>=h&&v.x<=f&&v.y>=d&&v.y<=p&&v!==i&&v!==a&&aT(o,l,s,u,A,c,v.x,v.y)&&aC(v.prev,v,v.next)>=0||(v=v.prevZ,_.x>=h&&_.x<=f&&_.y>=d&&_.y<=p&&_!==i&&_!==a&&aT(o,l,s,u,A,c,_.x,_.y)&&aC(_.prev,_,_.next)>=0))return!1;_=_.nextZ}// look for remaining points in decreasing z-order
for(;v&&v.z>=m;){if(v.x>=h&&v.x<=f&&v.y>=d&&v.y<=p&&v!==i&&v!==a&&aT(o,l,s,u,A,c,v.x,v.y)&&aC(v.prev,v,v.next)>=0)return!1;v=v.prevZ}// look for remaining points in increasing z-order
for(;_&&_.z<=g;){if(_.x>=h&&_.x<=f&&_.y>=d&&_.y<=p&&_!==i&&_!==a&&aT(o,l,s,u,A,c,_.x,_.y)&&aC(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}(t,i,a,o):// check whether a polygon node forms a valid ear with adjacent nodes
function(e){let t=e.prev,n=e.next;if(aC(t,e,n)>=0)return!1;// reflex, can't be an ear
// now make sure we don't have other points inside the potential ear
let r=t.x,i=e.x,a=n.x,o=t.y,s=e.y,A=n.y,l=r<i?r<a?r:a:i<a?i:a,u=o<s?o<A?o:A:s<A?s:A,c=r>i?r>a?r:a:i>a?i:a,h=o>s?o>A?o:A:s>A?s:A,d=n.next;for(;d!==t;){if(d.x>=l&&d.x<=c&&d.y>=u&&d.y<=h&&aT(r,o,i,s,a,A,d.x,d.y)&&aC(d.prev,d,d.next)>=0)return!1;d=d.next}return!0}(t)){// cut off the triangle
n.push(l.i/r|0),n.push(t.i/r|0),n.push(u.i/r|0),aU(t),// skipping the next vertex leads to less sliver triangles
t=u.next,A=u.next;continue}// if we looped through the whole remaining polygon and can't find any more ears
if((t=u)===A){// try filtering points and slicing again
s?1===s?e(t=// go through all polygon nodes and cure small local self-intersections
function(e,t,n){let r=e;do{let i=r.prev,a=r.next.next;!aR(i,a)&&aP(i,r,r.next,a)&&aO(i,a)&&aO(a,i)&&(t.push(i.i/n|0),t.push(r.i/n|0),t.push(a.i/n|0),// remove two nodes involved
aU(r),aU(r.next),r=e=a),r=r.next}while(r!==e)return aw(r)}(aw(t),n,r),n,r,i,a,o,2):2===s&&// try splitting polygon into two and triangulate them independently
function(t,n,r,i,a,o){// look for a valid diagonal that divides the polygon into two
let s=t;do{let t=s.next.next;for(;t!==s.prev;){var A,l;if(s.i!==t.i&&(A=s,l=t,A.next.i!==l.i&&A.prev.i!==l.i&&!// check if a polygon diagonal intersects any polygon segments
function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&aP(n,n.next,e,t))return!0;n=n.next}while(n!==e)return!1}(A,l)&&// dones't intersect other edges
(aO(A,l)&&aO(l,A)&&// check if the middle point of a polygon diagonal is inside the polygon
function(e,t){let n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next;while(n!==e)return r}(A,l)&&// locally visible
(aC(A.prev,A,l.prev)||aC(A,l.prev,l))||// does not create opposite-facing sectors
aR(A,l)&&aC(A.prev,A,A.next)>0&&aC(l.prev,l,l.next)>0))){// split the polygon in two by the diagonal
let A=aI(s,t);// filter colinear points around the cuts
s=aw(s,s.next),A=aw(A,A.next),// run earcut on each half
e(s,n,r,i,a,o,0),e(A,n,r,i,a,o,0);return}t=t.next}s=s.next}while(s!==t)}(t,n,r,i,a,o):e(aw(t),n,r,i,a,o,1);break}}}(h,d,n,r,i,l,0),d)}};// create a circular doubly linked list from polygon points in the specified winding order
function aM(e,t,n,r,i){let a,o;if(i===function(e,t,n,r){let i=0;for(let a=t,o=n-r;a<n;a+=r)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}(e,t,n,r)>0)for(a=t;a<n;a+=r)o=aq(a,e[a],e[a+1],o);else for(a=n-r;a>=t;a-=r)o=aq(a,e[a],e[a+1],o);return o&&aR(o,o.next)&&(aU(o),o=o.next),o}// eliminate colinear or duplicate points
function aw(e,t){if(!e)return e;t||(t=e);let n=e,r;do if(r=!1,!n.steiner&&(aR(n,n.next)||0===aC(n.prev,n,n.next))){if(aU(n),(n=t=n.prev)===n.next)break;r=!0}else n=n.next;while(r||n!==t)return t}function aE(e,t){return e.x-t.x}// z-order of a point given coords and inverse of the longer side of data bbox
function aS(e,t,n,r,i){return(e=((e=((e=((e=(// coords are transformed into non-negative 15-bit integer range
(e=(e-n)*i|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=(t-r)*i|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}// check if a point lies within a convex triangle
function aT(e,t,n,r,i,a,o,s){return(i-o)*(t-s)>=(e-o)*(a-s)&&(e-o)*(r-s)>=(n-o)*(t-s)&&(n-o)*(a-s)>=(i-o)*(r-s)}// signed area of a triangle
function aC(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}// check if two points are equal
function aR(e,t){return e.x===t.x&&e.y===t.y}// check if two segments intersect
function aP(e,t,n,r){let i=aD(aC(e,t,n)),a=aD(aC(e,t,r)),o=aD(aC(n,r,e)),s=aD(aC(n,r,t));return!!(i!==a&&o!==s||0===i&&aL(e,n,t)||0===a&&aL(e,r,t)||0===o&&aL(n,e,r)||0===s&&aL(n,t,r))}// for collinear points p, q, r, check if point q lies on segment pr
function aL(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function aD(e){return e>0?1:e<0?-1:0}// check if a polygon diagonal is locally inside the polygon
function aO(e,t){return 0>aC(e.prev,e,e.next)?aC(e,t,e.next)>=0&&aC(e,e.prev,t)>=0:0>aC(e,t,e.prev)||0>aC(e,e.next,t)}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
function aI(e,t){let n=new aN(e.i,e.x,e.y),r=new aN(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}// create a node and optionally link it with previous one (in a circular doubly linked list)
function aq(e,t,n,r){let i=new aN(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function aU(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function aN(e,t,n){// vertex index in coordinates array
this.i=e,// vertex coordinates
this.x=t,this.y=n,// previous and next vertex nodes in a polygon ring
this.prev=null,this.next=null,// z-order curve value
this.z=0,// previous and next nodes in z-order
this.prevZ=null,this.nextZ=null,// indicates whether this is a steiner point
this.steiner=!1}class aB{// calculate area of the contour polygon
static area(e){let t=e.length,n=0;for(let r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return .5*n}static isClockWise(e){return 0>aB.area(e)}static triangulateShape(e,t){let n=[],r=[],i=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]
ak(e),aF(n,e);//
let a=e.length;t.forEach(ak);for(let e=0;e<t.length;e++)r.push(a),a+=t[e].length,aF(n,t[e]);//
let o=ab.triangulate(n,r);//
for(let e=0;e<o.length;e+=3)i.push(o.slice(e,e+3));return i}}function ak(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function aF(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}/**
 * Creates extruded geometry from a path shape.
 *
 * parameters = {
 *
 *  curveSegments: <int>, // number of points on the curves
 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
 *  depth: <float>, // Depth to extrude the shape
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into the original shape bevel goes
 *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel
 *  bevelOffset: <float>, // how far from shape outline does bevel start
 *  bevelSegments: <int>, // number of bevel layers
 *
 *  extrudePath: <THREE.Curve> // curve to extrude shape along
 *
 *  UVGenerator: <Object> // object that provides UV generator functions
 *
 * }
 */class az extends t3{constructor(e=new ax([new eo(.5,.5),new eo(-.5,.5),new eo(-.5,-.5),new eo(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let n=this,r=[],i=[];for(let a=0,o=e.length;a<o;a++){let o=e[a];!// functions
function(e){let a,o,s,A;let l=[],u=void 0!==t.curveSegments?t.curveSegments:12,c=void 0!==t.steps?t.steps:1,h=void 0!==t.depth?t.depth:1,d=void 0===t.bevelEnabled||t.bevelEnabled,f=void 0!==t.bevelThickness?t.bevelThickness:.2,p=void 0!==t.bevelSize?t.bevelSize:f-.1,m=void 0!==t.bevelOffset?t.bevelOffset:0,g=void 0!==t.bevelSegments?t.bevelSegments:3,v=t.extrudePath,_=void 0!==t.UVGenerator?t.UVGenerator:aG,y,x=!1;v&&(y=v.getSpacedPoints(c),x=!0,d=!1,// SETUP TNB variables
// TODO1 - have a .isClosed in spline?
a=v.computeFrenetFrames(c,!1),// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);
o=new eL,s=new eL,A=new eL),d||(g=0,f=0,p=0,m=0);// Variables initialization
let b=e.extractPoints(u),M=b.shape,w=b.holes,E=!aB.isClockWise(M);if(E){M=M.reverse();// Maybe we should also check if holes are in the opposite direction, just to be safe ...
for(let e=0,t=w.length;e<t;e++){let t=w[e];aB.isClockWise(t)&&(w[e]=t.reverse())}}let S=aB.triangulateShape(M,w),T=M;for(let e=0,t=w.length;e<t;e++){let t=w[e];M=M.concat(t)}function C(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().addScaledVector(t,n)}let R=M.length,P=S.length;// Find directions for point movement
function L(e,t,n){let r,i,a;// good reading for geometry algorithms (here: line-line intersection)
// http://geomalgorithms.com/a05-_intersect-1.html
let o=e.x-t.x,s=e.y-t.y,A=n.x-e.x,l=n.y-e.y,u=o*o+s*s;if(Math.abs(o*l-s*A)>Number.EPSILON){// not collinear
// length of vectors for normalizing
let c=Math.sqrt(u),h=Math.sqrt(A*A+l*l),d=t.x-s/c,f=t.y+o/c,p=n.x-l/h,m=n.y+A/h,g=((p-d)*l-(m-f)*A)/(o*l-s*A);// vector from inPt to intersection point
r=d+o*g-e.x,i=f+s*g-e.y;// Don't normalize!, otherwise sharp corners become ugly
//  but prevent crazy spikes
let v=r*r+i*i;if(v<=2)return new eo(r,i);a=Math.sqrt(v/2)}else{// handle special case of collinear edges
let e=!1;// assumes: opposite
o>Number.EPSILON?A>Number.EPSILON&&(e=!0):o<-Number.EPSILON?A<-Number.EPSILON&&(e=!0):Math.sign(s)===Math.sign(l)&&(e=!0),e?(// console.log("Warning: lines are a straight sequence");
r=-s,i=o,a=Math.sqrt(u)):(// console.log("Warning: lines are a straight spike");
r=o,i=s,a=Math.sqrt(u/2))}return new eo(r/a,i/a)}let D=[];for(let e=0,t=T.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),//  (j)---(i)---(k)
// console.log('i,j,k', i, j , k)
D[e]=L(T[e],T[n],T[r]);let O=[],I,q=D.concat();for(let e=0,t=w.length;e<t;e++){let t=w[e];I=[];for(let e=0,n=t.length,r=n-1,i=e+1;e<n;e++,r++,i++)r===n&&(r=0),i===n&&(i=0),//  (j)---(i)---(k)
I[e]=L(t[e],t[r],t[i]);O.push(I),q=q.concat(I)}// Loop bevelSegments, 1 for the front, 1 for the back
for(let e=0;e<g;e++){//for ( b = bevelSegments; b > 0; b -- ) {
let t=e/g,n=f*Math.cos(t*Math.PI/2),r=p*Math.sin(t*Math.PI/2)+m;// contract shape
for(let e=0,t=T.length;e<t;e++){let t=C(T[e],D[e],r);B(t.x,t.y,-n)}// expand holes
for(let e=0,t=w.length;e<t;e++){let t=w[e];I=O[e];for(let e=0,i=t.length;e<i;e++){let i=C(t[e],I[e],r);B(i.x,i.y,-n)}}}let U=p+m;// Back facing vertices
for(let e=0;e<R;e++){let t=d?C(M[e],q[e],U):M[e];x?(// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );
s.copy(a.normals[0]).multiplyScalar(t.x),o.copy(a.binormals[0]).multiplyScalar(t.y),A.copy(y[0]).add(s).add(o),B(A.x,A.y,A.z)):B(t.x,t.y,0)}// Add stepped vertices...
// Including front facing vertices
for(let e=1;e<=c;e++)for(let t=0;t<R;t++){let n=d?C(M[t],q[t],U):M[t];x?(// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );
s.copy(a.normals[e]).multiplyScalar(n.x),o.copy(a.binormals[e]).multiplyScalar(n.y),A.copy(y[e]).add(s).add(o),B(A.x,A.y,A.z)):B(n.x,n.y,h/c*e)}// Add bevel segments planes
//for ( b = 1; b <= bevelSegments; b ++ ) {
for(let e=g-1;e>=0;e--){let t=e/g,n=f*Math.cos(t*Math.PI/2),r=p*Math.sin(t*Math.PI/2)+m;// contract shape
for(let e=0,t=T.length;e<t;e++){let t=C(T[e],D[e],r);B(t.x,t.y,h+n)}// expand holes
for(let e=0,t=w.length;e<t;e++){let t=w[e];I=O[e];for(let e=0,i=t.length;e<i;e++){let i=C(t[e],I[e],r);x?B(i.x,i.y+y[c-1].y,y[c-1].x+n):B(i.x,i.y,h+n)}}}function N(e,t){let i=e.length;for(;--i>=0;){let a=i,o=i-1;o<0&&(o=e.length-1);//console.log('b', i,j, i-1, k,vertices.length);
for(let e=0,i=c+2*g;e<i;e++){let i=R*e,s=R*(e+1),A=t+a+i,l=t+o+i,u=t+o+s,c=t+a+s;!function(e,t,i,a){F(e),F(t),F(a),F(t),F(i),F(a);let o=r.length/3,s=_.generateSideWallUV(n,r,o-6,o-3,o-2,o-1);z(s[0]),z(s[1]),z(s[3]),z(s[1]),z(s[2]),z(s[3])}(A,l,u,c)}}}function B(e,t,n){l.push(e),l.push(t),l.push(n)}function k(e,t,i){F(e),F(t),F(i);let a=r.length/3,o=_.generateTopUV(n,r,a-3,a-2,a-1);z(o[0]),z(o[1]),z(o[2])}function F(e){r.push(l[3*e+0]),r.push(l[3*e+1]),r.push(l[3*e+2])}function z(e){i.push(e.x),i.push(e.y)}/* Faces */// Top and bottom faces
/////  Internal functions
(function(){let e=r.length/3;if(d){let e=0*R;// steps + 1
// Bottom faces
for(let t=0;t<P;t++){let n=S[t];k(n[2]+e,n[1]+e,n[0]+e)}e=R*(c+2*g);// Top faces
for(let t=0;t<P;t++){let n=S[t];k(n[0]+e,n[1]+e,n[2]+e)}}else{// Bottom faces
for(let e=0;e<P;e++){let t=S[e];k(t[2],t[1],t[0])}// Top faces
for(let e=0;e<P;e++){let t=S[e];k(t[0]+R*c,t[1]+R*c,t[2]+R*c)}}n.addGroup(e,r.length/3-e,0)})(),// Sides faces
// Create faces for the z-sides of the shape
function(){let e=r.length/3,t=0;N(T,0),t+=T.length;for(let e=0,n=w.length;e<n;e++){let n=w[e];N(n,t),//, true
t+=n.length}n.addGroup(e,r.length/3-e,1)}()}(o)}// build geometry
this.setAttribute("position",new tY(r,3)),this.setAttribute("uv",new tY(i,2)),this.computeVertexNormals()}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(let t=0,r=e.length;t<r;t++){let r=e[t];n.shapes.push(r.uuid)}else n.shapes.push(e.uuid);return n.options=Object.assign({},t),void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON()),n}(t,n,e)}static fromJSON(e,t){let n=[];for(let r=0,i=e.shapes.length;r<i;r++){let i=t[e.shapes[r]];n.push(i)}let r=e.options.extrudePath;return void 0!==r&&(e.options.extrudePath=new ac[r.type]().fromJSON(r)),new az(n,e.options)}}const aG={generateTopUV:function(e,t,n,r,i){let a=t[3*n],o=t[3*n+1],s=t[3*r],A=t[3*r+1],l=t[3*i],u=t[3*i+1];return[new eo(a,o),new eo(s,A),new eo(l,u)]},generateSideWallUV:function(e,t,n,r,i,a){let o=t[3*n],s=t[3*n+1],A=t[3*n+2],l=t[3*r],u=t[3*r+1],c=t[3*r+2],h=t[3*i],d=t[3*i+1],f=t[3*i+2],p=t[3*a],m=t[3*a+1],g=t[3*a+2];return Math.abs(s-u)<Math.abs(o-l)?[new eo(o,1-A),new eo(l,1-c),new eo(h,1-f),new eo(p,1-g)]:[new eo(s,1-A),new eo(u,1-c),new eo(d,1-f),new eo(m,1-g)]}};class aH extends a_{constructor(e=1,t=0){let n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new aH(e.radius,e.detail)}}class aV extends a_{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new aV(e.radius,e.detail)}}class aj extends t3{constructor(e=.5,t=1,n=32,r=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},n=Math.max(3,n),r=Math.max(1,r);// buffers
let o=[],s=[],A=[],l=[],u=e,c=(t-e)/r,h=new eL,d=new eo;// generate vertices, normals and uvs
for(let e=0;e<=r;e++){for(let e=0;e<=n;e++){// values are generate from the inside of the ring to the outside
let r=i+e/n*a;// vertex
h.x=u*Math.cos(r),h.y=u*Math.sin(r),s.push(h.x,h.y,h.z),// normal
A.push(0,0,1),// uv
d.x=(h.x/t+1)/2,d.y=(h.y/t+1)/2,l.push(d.x,d.y)}// increase the radius for next row of vertices
u+=c}// indices
for(let e=0;e<r;e++){let t=e*(n+1);for(let e=0;e<n;e++){let r=e+t,i=r+n+1,a=r+n+2,s=r+1;// faces
o.push(r,i,s),o.push(i,a,s)}}// build geometry
this.setIndex(o),this.setAttribute("position",new tY(s,3)),this.setAttribute("normal",new tY(A,3)),this.setAttribute("uv",new tY(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aj(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class aW extends t3{constructor(e=new ax([new eo(0,.5),new eo(-.5,-.5),new eo(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};// buffers
let n=[],r=[],i=[],a=[],o=0,s=0;// allow single and array values for "shapes" parameter
if(!1===Array.isArray(e))A(e);else for(let t=0;t<e.length;t++)A(e[t]),this.addGroup(o,s,t),o+=s,s=0;// helper functions
function A(e){let o=r.length/3,A=e.extractPoints(t),l=A.shape,u=A.holes;// check direction of vertices
!1===aB.isClockWise(l)&&(l=l.reverse());for(let e=0,t=u.length;e<t;e++){let t=u[e];!0===aB.isClockWise(t)&&(u[e]=t.reverse())}let c=aB.triangulateShape(l,u);// join vertices of inner and outer paths to a single array
for(let e=0,t=u.length;e<t;e++){let t=u[e];l=l.concat(t)}// vertices, normals, uvs
for(let e=0,t=l.length;e<t;e++){let t=l[e];r.push(t.x,t.y,0),i.push(0,0,1),a.push(t.x,t.y)}// indices
for(let e=0,t=c.length;e<t;e++){let t=c[e],r=t[0]+o,i=t[1]+o,a=t[2]+o;n.push(r,i,a),s+=3}}// build geometry
this.setIndex(n),this.setAttribute("position",new tY(r,3)),this.setAttribute("normal",new tY(i,3)),this.setAttribute("uv",new tY(a,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON(),t=this.parameters.shapes;return function(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){let r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(t,e)}static fromJSON(e,t){let n=[];for(let r=0,i=e.shapes.length;r<i;r++){let i=t[e.shapes[r]];n.push(i)}return new aW(n,e.curveSegments)}}class aX extends t3{constructor(e=1,t=32,n=16,r=0,i=2*Math.PI,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));let s=Math.min(a+o,Math.PI),A=0,l=[],u=new eL,c=new eL,h=[],d=[],f=[],p=[];// generate vertices, normals and uvs
for(let h=0;h<=n;h++){let m=[],g=h/n,v=0;0===h&&0===a?v=.5/t:h===n&&s===Math.PI&&(v=-.5/t);for(let n=0;n<=t;n++){let s=n/t;// vertex
u.x=-e*Math.cos(r+s*i)*Math.sin(a+g*o),u.y=e*Math.cos(a+g*o),u.z=e*Math.sin(r+s*i)*Math.sin(a+g*o),d.push(u.x,u.y,u.z),// normal
c.copy(u).normalize(),f.push(c.x,c.y,c.z),// uv
p.push(s+v,1-g),m.push(A++)}l.push(m)}// indices
for(let e=0;e<n;e++)for(let r=0;r<t;r++){let t=l[e][r+1],i=l[e][r],o=l[e+1][r],A=l[e+1][r+1];(0!==e||a>0)&&h.push(t,i,A),(e!==n-1||s<Math.PI)&&h.push(i,o,A)}// build geometry
this.setIndex(h),this.setAttribute("position",new tY(d,3)),this.setAttribute("normal",new tY(f,3)),this.setAttribute("uv",new tY(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aX(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class aQ extends a_{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new aQ(e.radius,e.detail)}}class aY extends t3{constructor(e=1,t=.4,n=12,r=48,i=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},n=Math.floor(n),r=Math.floor(r);// buffers
let a=[],o=[],s=[],A=[],l=new eL,u=new eL,c=new eL;// generate vertices, normals and uvs
for(let a=0;a<=n;a++)for(let h=0;h<=r;h++){let d=h/r*i,f=a/n*Math.PI*2;// vertex
u.x=(e+t*Math.cos(f))*Math.cos(d),u.y=(e+t*Math.cos(f))*Math.sin(d),u.z=t*Math.sin(f),o.push(u.x,u.y,u.z),// normal
l.x=e*Math.cos(d),l.y=e*Math.sin(d),c.subVectors(u,l).normalize(),s.push(c.x,c.y,c.z),// uv
A.push(h/r),A.push(a/n)}// generate indices
for(let e=1;e<=n;e++)for(let t=1;t<=r;t++){// indices
let n=(r+1)*e+t-1,i=(r+1)*(e-1)+t-1,o=(r+1)*(e-1)+t,s=(r+1)*e+t;// faces
a.push(n,i,s),a.push(i,o,s)}// build geometry
this.setIndex(a),this.setAttribute("position",new tY(o,3)),this.setAttribute("normal",new tY(s,3)),this.setAttribute("uv",new tY(A,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aY(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class aZ extends t3{constructor(e=1,t=.4,n=64,r=8,i=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:a},n=Math.floor(n),r=Math.floor(r);// buffers
let o=[],s=[],A=[],l=[],u=new eL,c=new eL,h=new eL,d=new eL,f=new eL,p=new eL,m=new eL;// generate vertices, normals and uvs
for(let o=0;o<=n;++o){// the radian "u" is used to calculate the position on the torus curve of the current tubular segment
let v=o/n*i*Math.PI*2;// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions
g(v,i,a,e,h),g(v+.01,i,a,e,d),// calculate orthonormal basis
p.subVectors(d,h),m.addVectors(d,h),f.crossVectors(p,m),m.crossVectors(f,p),// normalize B, N. T can be ignored, we don't use it
f.normalize(),m.normalize();for(let e=0;e<=r;++e){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.
let i=e/r*Math.PI*2,a=-t*Math.cos(i),d=t*Math.sin(i);// now calculate the final vertex position.
// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve
u.x=h.x+(a*m.x+d*f.x),u.y=h.y+(a*m.y+d*f.y),u.z=h.z+(a*m.z+d*f.z),s.push(u.x,u.y,u.z),// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)
c.subVectors(u,h).normalize(),A.push(c.x,c.y,c.z),// uv
l.push(o/n),l.push(e/r)}}// generate indices
for(let e=1;e<=n;e++)for(let t=1;t<=r;t++){// indices
let n=(r+1)*(e-1)+(t-1),i=(r+1)*e+(t-1),a=(r+1)*e+t,s=(r+1)*(e-1)+t;// faces
o.push(n,i,s),o.push(i,a,s)}// this function calculates the current position on the torus curve
function g(e,t,n,r,i){let a=Math.cos(e),o=Math.sin(e),s=n/t*e,A=Math.cos(s);i.x=r*(2+A)*.5*a,i.y=r*(2+A)*o*.5,i.z=r*Math.sin(s)*.5}// build geometry
this.setIndex(o),this.setAttribute("position",new tY(s,3)),this.setAttribute("normal",new tY(A,3)),this.setAttribute("uv",new tY(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new aZ(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class aK extends t3{constructor(e=new al(new eL(-1,-1,0),new eL(-1,1,0),new eL(1,1,0)),t=64,n=1,r=8,i=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:i};let a=e.computeFrenetFrames(t,i);// expose internals
this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;// helper variables
let o=new eL,s=new eL,A=new eo,l=new eL,u=[],c=[],h=[],d=[];function f(i){// we use getPointAt to sample evenly distributed points from the given path
l=e.getPointAt(i/t,l);// retrieve corresponding normal and binormal
let A=a.normals[i],h=a.binormals[i];// generate normals and vertices for the current segment
for(let e=0;e<=r;e++){let t=e/r*Math.PI*2,i=Math.sin(t),a=-Math.cos(t);// normal
s.x=a*A.x+i*h.x,s.y=a*A.y+i*h.y,s.z=a*A.z+i*h.z,s.normalize(),c.push(s.x,s.y,s.z),// vertex
o.x=l.x+n*s.x,o.y=l.y+n*s.y,o.z=l.z+n*s.z,u.push(o.x,o.y,o.z)}}// create buffer data
// functions
(function(){for(let e=0;e<t;e++)f(e);// if the geometry is not closed, generate the last row of vertices and normals
// at the regular position on the given path
//
// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)
f(!1===i?t:0),// uvs are generated in a separate function.
// this makes it easy compute correct values for closed geometries
function(){for(let e=0;e<=t;e++)for(let n=0;n<=r;n++)A.x=e/t,A.y=n/r,h.push(A.x,A.y)}(),// finally create faces
function(){for(let e=1;e<=t;e++)for(let t=1;t<=r;t++){let n=(r+1)*(e-1)+(t-1),i=(r+1)*e+(t-1),a=(r+1)*e+t,o=(r+1)*(e-1)+t;// faces
d.push(n,i,o),d.push(i,a,o)}}()})(),// build geometry
this.setIndex(d),this.setAttribute("position",new tY(u,3)),this.setAttribute("normal",new tY(c,3)),this.setAttribute("uv",new tY(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){// This only works for built-in curves (e.g. CatmullRomCurve3).
// User defined curves or instances of CurvePath will not be deserialized.
return new aK(new ac[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}function aJ(e,t,n){let r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==n.has(r)&&!0!==n.has(i)&&(n.add(r),n.add(i),!0)}class a$ extends tG{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new tk(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tk(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new eo(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}// converts an array to a specific type
function a0(e,t,n){return e&&// let 'undefined' and 'null' pass
(n||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}/**
 * Abstract base class of interpolants over parametric samples.
 *
 * The parameter domain is one dimensional, typically the time or a path
 * along a curve defined by the data.
 *
 * The sample values can have any dimensionality and derived classes may
 * apply special interpretations to the data.
 *
 * This class provides the interval seek in a Template Method, deferring
 * the actual interpolation to derived classes.
 *
 * Time complexity is O(1) for linear access crossing at most two points
 * and O(log N) for random access, where N is the number of positions.
 *
 * References:
 *
 * 		http://www.oodesign.com/template-method-pattern.html
 *
 */class a1{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{let a;n:{//- See http://jsperf.com/comparison-to-undefined/3
//- slower code:
//-
//- 				if ( t >= t1 || t1 === undefined ) {
r:if(!(e<r)){for(let a=n+2;;){if(void 0===r){if(e<i)break r;return(// after end
n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1))}if(n===a)break;// this loop
if(i=r,e<(r=t[++n]))break t}// prepare binary search on the right side of the index
a=t.length;break n}//- slower code:
//-					if ( t < t0 || t0 === undefined ) {
if(!(e>=i)){// looping?
let o=t[1];e<o&&(n=2,i=o);// linear reverse scan
for(let a=n-2;;){if(void 0===i)return(// before start
this._cachedIndex=0,this.copySampleValue_(0));if(n===a)break;// this loop
if(r=i,e>=(i=t[--n-1]))break t}// prepare binary search on the left side of the index
a=n,n=0;break n}break e}// linear scan
// binary search
for(;n<a;){let r=n+a>>>1;e<t[r]?a=r:n=r+1}// check boundary cases, again
if(r=t[n],void 0===(i=t[n-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}// seek
this._cachedIndex=n,this.intervalChanged_(n,i,r)}// validate_interval
return this.interpolate_(n,i,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){// copies a sample value to the result buffer
let t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t}// Template methods for derived classes:
interpolate_(){throw Error("call to abstract method");// implementations shall return this.resultBuffer
}intervalChanged_(){// empty
}}/**
 * Fast and simple cubic spline interpolant.
 *
 * It was derived from a Hermitian construction setting the first derivative
 * at each sample position to the linear slope between neighboring positions
 * over their parameter interval.
 */class a2 extends a1{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){let r=this.parameterPositions,i=e-2,a=e+1,o=r[i],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:// f'(t0) = 0
i=e,o=2*t-n;break;case 2402:// use the other end of the curve
i=r.length-2,o=t+r[i]-r[i+1];break;default:// f''(t0) = 0 a.k.a. Natural Spline
i=e,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:// f'(tN) = 0
a=e,s=2*n-t;break;case 2402:// use the other end of the curve
a=1,s=n+r[1]-r[0];break;default:// f''(tN) = 0, a.k.a. Natural Spline
a=e-1,s=t}let A=(n-t)*.5,l=this.valueSize;this._weightPrev=A/(t-o),this._weightNext=A/(s-n),this._offsetPrev=i*l,this._offsetNext=a*l}interpolate_(e,t,n,r){let i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,A=s-o,l=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,h=this._weightNext,d=(n-t)/(r-t),f=d*d,p=f*d,m=-c*p+2*c*f-c*d,g=(1+c)*p+(-1.5-2*c)*f+(-.5+c)*d+1,v=(-1-h)*p+(1.5+h)*f+.5*d,_=h*p-h*f;// combine data linearly
for(let e=0;e!==o;++e)i[e]=m*a[l+e]+g*a[A+e]+v*a[s+e]+_*a[u+e];return i}}class a3 extends a1{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){let i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,A=s-o,l=(n-t)/(r-t),u=1-l;for(let e=0;e!==o;++e)i[e]=a[A+e]*u+a[s+e]*l;return i}}/**
 *
 * Interpolant that evaluates to the sample value at the position preceding
 * the parameter.
 */class a4 extends a1{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e/*, t0, t, t1 */){return this.copySampleValue_(e-1)}}class a5{constructor(e,t,n,r){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=a0(t,this.TimeBufferType),this.values=a0(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}// Serialization (in static context, because of constructor invocation
// and automatic invocation of .toJSON):
static toJSON(e){let t;let n=e.constructor;// derived classes can define a static toJSON method
if(n.toJSON!==this.toJSON)t=n.toJSON(e);else{// by default, we assume the data can be serialized as-is
t={name:e.name,times:a0(e.times,Array),values:a0(e.values,Array)};let n=e.getInterpolation();n!==e.DefaultInterpolation&&(t.interpolation=n)}return t.type=e.ValueTypeName,t}InterpolantFactoryMethodDiscrete(e){return new a4(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new a3(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new a2(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){// fall back to default, unless the default itself is messed up
if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(t);// fatal, in this case
}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}// move all keyframes either forwards or backwards in time
shift(e){if(0!==e){let t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
scale(e){if(1!==e){let t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
trim(e,t){let n=this.times,r=n.length,i=0,a=r-1;for(;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==i||a!==r){i>=a&&(i=(a=Math.max(a,1))-1);let e=this.getValueSize();this.times=n.slice(i,a),this.values=this.values.slice(i*e,a*e)}return this}// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==i;t++){let r=n[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==a&&a>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,a),e=!1;break}a=r}if(void 0!==r&&ArrayBuffer.isView(r)&&!(r instanceof DataView))for(let t=0,n=r.length;t!==n;++t){let n=r[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e}// removes equivalent sequential keys as common in morph target sequences
// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
optimize(){// times or values may be shared with other tracks, so overwriting is unsafe
let e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),r=2302===this.getInterpolation(),i=e.length-1,a=1;for(let o=1;o<i;++o){let i=!1,s=e[o],A=e[o+1];// remove adjacent keyframes scheduled at the same time
if(s!==A&&(1!==o||s!==e[0])){if(r)i=!0;else{// remove unnecessary keyframes same as their neighbors
let e=o*n,r=e-n,a=e+n;for(let o=0;o!==n;++o){let n=t[e+o];if(n!==t[r+o]||n!==t[a+o]){i=!0;break}}}}// in-place compaction
if(i){if(o!==a){e[a]=e[o];let r=o*n,i=a*n;for(let e=0;e!==n;++e)t[i+e]=t[r+e]}++a}}// flush last keyframe (compaction looks ahead)
if(i>0){e[a]=e[i];for(let e=i*n,r=a*n,o=0;o!==n;++o)t[r+o]=t[e+o];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){let e=this.times.slice(),t=this.values.slice(),n=this.constructor,r=new n(this.name,e,t);return(// Interpolant argument to constructor is not saved, so copy the factory method directly.
r.createInterpolant=this.createInterpolant,r)}}a5.prototype.TimeBufferType=Float32Array,a5.prototype.ValueBufferType=Float32Array,a5.prototype.DefaultInterpolation=2301;/**
 * A Track of Boolean keyframe values.
 */class a6 extends a5{}a6.prototype.ValueTypeName="bool",a6.prototype.ValueBufferType=Array,a6.prototype.DefaultInterpolation=2300,a6.prototype.InterpolantFactoryMethodLinear=void 0,a6.prototype.InterpolantFactoryMethodSmooth=void 0,/**
 * A Track of keyframe values that represent color.
 */(class extends a5{}).prototype.ValueTypeName="color",/**
 * A Track of numeric keyframe values.
 */(class extends a5{}).prototype.ValueTypeName="number";/**
 * Spherical linear unit quaternion interpolant.
 */class a8 extends a1{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){let i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(n-t)/(r-t),A=e*o;for(let e=A+o;A!==e;A+=4)eP.slerpFlat(i,0,a,A-o,a,A,s);return i}}/**
 * A Track of quaternion keyframe values.
 */class a7 extends a5{InterpolantFactoryMethodLinear(e){return new a8(this.times,this.values,this.getValueSize(),e)}}a7.prototype.ValueTypeName="quaternion",// ValueBufferType is inherited
a7.prototype.DefaultInterpolation=2301,a7.prototype.InterpolantFactoryMethodSmooth=void 0;/**
 * A Track that interpolates Strings
 */class a9 extends a5{}a9.prototype.ValueTypeName="string",a9.prototype.ValueBufferType=Array,a9.prototype.DefaultInterpolation=2300,a9.prototype.InterpolantFactoryMethodLinear=void 0,a9.prototype.InterpolantFactoryMethodSmooth=void 0,/**
 * A Track of vectored keyframe values.
 */(class extends a5{}).prototype.ValueTypeName="vector";const oe={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&// console.log( 'THREE.Cache', 'Adding key:', key );
(this.files[e]=t)},get:function(e){if(!1!==this.enabled)// console.log( 'THREE.Cache', 'Checking key:', key );
return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},ot=/*@__PURE__*/new class{constructor(e,t,n){let r;let i=this,a=!1,o=0,s=0,A=[];// Refer to #5689 for the reason why we don't set .onStart
// in the constructor
this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){s++,!1===a&&void 0!==i.onStart&&i.onStart(e,o,s),a=!0},this.itemEnd=function(e){o++,void 0!==i.onProgress&&i.onProgress(e,o,s),o===s&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return r?r(e):e},this.setURLModifier=function(e){return r=e,this},this.addHandler=function(e,t){return A.push(e,t),this},this.removeHandler=function(e){let t=A.indexOf(e);return -1!==t&&A.splice(t,2),this},this.getHandler=function(e){for(let t=0,n=A.length;t<n;t+=2){let n=A[t],r=A[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}};class on{constructor(e){this.manager=void 0!==e?e:ot,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let n=this;return new Promise(function(r,i){n.load(e,r,t,i)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}on.DEFAULT_MATERIAL_NAME="__DEFAULT";class or extends on{constructor(e){super(e)}load(e,t,n,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let i=this,a=oe.get(e);if(void 0!==a)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;let o=eu("img");function s(){l(),oe.add(e,this),t&&t(this),i.manager.itemEnd(e)}function A(t){l(),r&&r(t),i.manager.itemError(e),i.manager.itemEnd(e)}function l(){o.removeEventListener("load",s,!1),o.removeEventListener("error",A,!1)}return o.addEventListener("load",s,!1),o.addEventListener("error",A,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o}}class oi extends on{constructor(e){super(e)}load(e,t,n,r){let i=new eE,a=new or(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){i.image=e,i.needsUpdate=!0,void 0!==t&&t(i)},n,r),i}}class oa extends tb{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new tk(e),this.intensity=t}dispose(){// Empty here in base class; some subclasses override.
}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}const oo=/*@__PURE__*/new e8,os=/*@__PURE__*/new eL,oA=/*@__PURE__*/new eL;class ol{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new eo(512,512),this.map=null,this.mapPass=null,this.matrix=new e8,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new nP,this._frameExtents=new eo(1,1),this._viewportCount=1,this._viewports=[new eS(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,n=this.matrix;os.setFromMatrixPosition(e.matrixWorld),t.position.copy(os),oA.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(oA),t.updateMatrixWorld(),oo.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(oo),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(oo)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class ou extends ol{constructor(){super(new nV(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class oc{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=oh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=oh();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function oh(){return("undefined"==typeof performance?Date:performance).now();// see #10732
}// Characters [].:/ are reserved for track binding syntax.
const od="\\[\\]\\.:\\/",of=RegExp("["+od+"]","g"),op="[^"+od+"]",om="[^"+od.replace("\\.","")+"]",og=/*@__PURE__*//((?:WC+[\/:])*)/.source.replace("WC",op),ov=/*@__PURE__*//(WCOD+)?/.source.replace("WCOD",om),o_=/*@__PURE__*//(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",op),oy=/*@__PURE__*//\.(WC+)(?:\[(.+)\])?/.source.replace("WC",op),ox=RegExp("^"+og+ov+o_+oy+"$"),ob=["material","materials","bones","map"];// Note: This class uses a State pattern on a per-method basis:
// 'bind' sets 'this.getValue' / 'setValue' and shadows the
// prototype version of these methods with one that represents
// the bound state. When the property is not found, the methods
// become no-ops.
class oM{constructor(e,t,n){this.path=t,this.parsedPath=n||oM.parseTrackName(t),this.node=oM.findNode(e,this.parsedPath.nodeName),this.rootNode=e,// initial state of these methods that calls 'bind'
this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new oM.Composite(e,t,n):new oM(e,t,n)}/**
	 * Replaces spaces with underscores and removes unsupported characters from
	 * node names, to ensure compatibility with parseTrackName().
	 *
	 * @param {string} name Node name to be sanitized.
	 * @return {string}
	 */static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(of,"")}static parseTrackName(e){let t=ox.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let n={// directoryName: matches[ 1 ], // (tschw) currently unused
nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){let e=n.nodeName.substring(r+1);// Object names must be checked against an allowlist. Otherwise, there
// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
// 'bar' could be the objectName, or part of a nodeName (which can
// include '.' characters).
-1!==ob.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;// search into skeleton bones.
if(e.skeleton){let n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}// search into node subtree.
if(e.children){let n=function(e){for(let r=0;r<e.length;r++){let i=e[r];if(i.name===t||i.uuid===t)return i;let a=n(i.children);if(a)return a}return null},r=n(e.children);if(r)return r}return null}// these are used to "bind" a nonexistent property
_getValue_unavailable(){}_setValue_unavailable(){}// Getters
_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}// Direct
_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}// EntireArray
_setValue_array(e,t){let n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}// ArrayElement
_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}// HasToFromArray
_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}// create getter / setter pair for a property in the scene graph
bind(){let e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;// ensure there is a value node
if(e||(e=oM.findNode(this.rootNode,t.nodeName),this.node=e),// set fail state so we can just 'return' on error
this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let r=t.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....
switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}// potential future optimization: skip this if propertyIndex is already an integer
// and convert the integer string to a true integer.
e=e.skeleton.bones;// support resolving morphTarget names into indices.
for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(void 0===e[n]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(void 0!==r){if(void 0===e[r]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[r]}}// resolve property
let a=e[r];if(void 0===a){let n=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",e);return}// determine versioning scheme
let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);// determine how the property gets bound
let s=this.BindingType.Direct;if(void 0!==i){// access a sub element of the property array (only primitives are supported right now)
if("morphTargetInfluences"===r){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.
// support resolving morphTarget names into indices.
if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}s=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=i}else void 0!==a.fromArray&&void 0!==a.toArray?(// must use copy for Object3D.Euler/Quaternion
s=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(s=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;// select getter / setter
this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][o]}unbind(){this.node=null,// back to the prototype version of getValue / setValue
// note: avoiding to mutate the shape of 'this' via 'delete'
this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}oM.Composite=class{constructor(e,t,n){let r=n||oM.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();// bind all binding
let n=this._targetGroup.nCachedObjects_,r=this._bindings[n];// and only call .getValue on the first
void 0!==r&&r.getValue(e,t)}setValue(e,t){let n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},oM.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},oM.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},oM.prototype.GetterByBindingType=[oM.prototype._getValue_direct,oM.prototype._getValue_array,oM.prototype._getValue_arrayElement,oM.prototype._getValue_toArray],oM.prototype.SetterByBindingTypeAndVersioning=[[// Direct
oM.prototype._setValue_direct,oM.prototype._setValue_direct_setNeedsUpdate,oM.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[// EntireArray
oM.prototype._setValue_array,oM.prototype._setValue_array_setNeedsUpdate,oM.prototype._setValue_array_setMatrixWorldNeedsUpdate],[// ArrayElement
oM.prototype._setValue_arrayElement,oM.prototype._setValue_arrayElement_setNeedsUpdate,oM.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[// HasToFromArray
oM.prototype._setValue_fromArray,oM.prototype._setValue_fromArray_setNeedsUpdate,oM.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);class ow extends ij{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}function oE(e,t){return e.distance-t.distance}function oS(e,t,n,r){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===r){let r=e.children;for(let e=0,i=r.length;e<i;e++)oS(r[e],t,n,!0)}}/**
 * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
 *
 * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.
 * The azimuthal angle (theta) is measured from the positive z-axis.
 */class oT{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}// restrict phi to be between EPS and PI-EPS
makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(J(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const oC=/*@__PURE__*/new eL,oR=/*@__PURE__*/new eL;class oP{constructor(){this.type="ShapePath",this.color=new tk,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ad,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,i,a){return this.currentPath.bezierCurveTo(e,t,n,r,i,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){let t,n,r,i,a;let o=aB.isClockWise,s=this.subPaths;if(0===s.length)return[];let A=[];if(1===s.length)return n=s[0],(r=new ax).curves=n.curves,A.push(r),A;let l=!o(s[0].getPoints());l=e?!l:l;// console.log("Holes first", holesFirst);
let u=[],c=[],h=[],d=0;c[0]=void 0,h[d]=[];for(let r=0,a=s.length;r<a;r++)t=o(i=(n=s[r]).getPoints()),(t=e?!t:t)?(!l&&c[d]&&d++,c[d]={s:new ax,p:i},c[d].s.curves=n.curves,l&&d++,h[d]=[]):h[d].push({h:n,p:i[0]});// only Holes? -> probably all Shapes with wrong orientation
if(!c[0])return function(e){let t=[];for(let n=0,r=e.length;n<r;n++){let r=e[n],i=new ax;i.curves=r.curves,t.push(i)}return t}(s);if(c.length>1){let e=!1,t=0;for(let e=0,t=c.length;e<t;e++)u[e]=[];for(let n=0,r=c.length;n<r;n++){let r=h[n];for(let i=0;i<r.length;i++){let a=r[i],o=!0;for(let r=0;r<c.length;r++)(function(e,t){let n=t.length,r=!1;for(let i=n-1,a=0;a<n;i=a++){let n=t[i],o=t[a],s=o.x-n.x,A=o.y-n.y;if(Math.abs(A)>Number.EPSILON){if(A<0&&(n=t[a],s=-s,o=t[i],A=-A),e.y<n.y||e.y>o.y)continue;if(e.y===n.y){if(e.x===n.x)return!0;// inPt is on contour ?
}else{let t=A*(e.x-n.x)-s*(e.y-n.y);if(0===t)return!0;// inPt is on contour ?
if(t<0)continue;r=!r;// true intersection left of inPt
}}else{// parallel or collinear
if(e.y!==n.y)continue;// parallel
// edge lies on the same horizontal line as inPt
if(o.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=o.x)return!0;// inPt: Point on contour !
// continue;
}}return r})(a.p,c[r].p)&&(n!==r&&t++,o?(o=!1,u[r].push(a)):e=!0);o&&u[n].push(a)}}t>0&&!1===e&&(h=u)}for(let e=0,t=c.length;e<t;e++){r=c[e].s,A.push(r),a=h[e];for(let e=0,t=a.length;e<t;e++)r.holes.push(a[e].h)}//console.log("shape", shapes);
return A}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"158"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="158");//
const oL=new eL,oD=new e8,oO=new e8,oI=new eL,oq=new eL;var oU=/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)},oN="object"==typeof L&&L&&L.Object===Object&&L,oB="object"==typeof self&&self&&self.Object===Object&&self,ok=oN||oB||Function("return this")(),oF=function(){return ok.Date.now()},oz=/\s/,oG=/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */function(e){for(var t=e.length;t--&&oz.test(e.charAt(t)););return t},oH=/^\s+/,oV=ok.Symbol,oj=Object.prototype,oW=oj.hasOwnProperty,oX=oj.toString,oQ=oV?oV.toStringTag:void 0,oY=/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */function(e){var t=oW.call(e,oQ),n=e[oQ];try{e[oQ]=void 0;var r=!0}catch(e){}var i=oX.call(e);return r&&(t?e[oQ]=n:delete e[oQ]),i},oZ=Object.prototype.toString,oK=oV?oV.toStringTag:void 0,oJ=/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */function(e){var t;return"symbol"==typeof e||null!=e&&"object"==typeof e&&"[object Symbol]"==(null==(t=e)?void 0===t?"[object Undefined]":"[object Null]":oK&&oK in Object(t)?oY(t):oZ.call(t))},o$=0/0,o0=/^[-+]0x[0-9a-f]+$/i,o1=/^0b[01]+$/i,o2=/^0o[0-7]+$/i,o3=parseInt,o4=/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */function(e){if("number"==typeof e)return e;if(oJ(e))return o$;if(oU(e)){var t,n="function"==typeof e.valueOf?e.valueOf():e;e=oU(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=(t=e)?t.slice(0,oG(t)+1).replace(oH,""):t;var r=o1.test(e);return r||o2.test(e)?o3(e.slice(2),r?2:8):o0.test(e)?o$:+e},o5=Math.max,o6=Math.min,o8=/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */function(e,t,n){var r,i,a,o,s,A,l=0,u=!1,c=!1,h=!0;if("function"!=typeof e)throw TypeError("Expected a function");function d(t){var n=r,a=i;return r=i=void 0,l=t,o=e.apply(a,n)}function f(e){var n=e-A,r=e-l;// Either this is the first call, activity has stopped and we're at the
// trailing edge, the system time has gone backwards and we're treating
// it as the trailing edge, or we've hit the `maxWait` limit.
return void 0===A||n>=t||n<0||c&&r>=a}function p(){var e,n,r,i=oF();if(f(i))return m(i);// Restart the timer.
s=setTimeout(p,(e=i-A,n=i-l,r=t-e,c?o6(r,a-n):r))}function m(e){return(// Only invoke if we have `lastArgs` which means `func` has been
// debounced at least once.
(s=void 0,h&&r)?d(e):(r=i=void 0,o))}function g(){var e,n=oF(),a=f(n);if(r=arguments,i=this,A=n,a){if(void 0===s)return(// Reset any `maxWait` timer.
l=e=A,// Start the timer for the trailing edge.
s=setTimeout(p,t),u?d(e):o);if(c)return(// Handle invocations in a tight loop.
clearTimeout(s),s=setTimeout(p,t),d(A))}return void 0===s&&(s=setTimeout(p,t)),o}return t=o4(t)||0,oU(n)&&(u=!!n.leading,a=(c="maxWait"in n)?o5(o4(n.maxWait)||0,t):a,h="trailing"in n?!!n.trailing:h),g.cancel=function(){void 0!==s&&clearTimeout(s),l=0,r=A=i=s=void 0},g.flush=function(){return void 0===s?o:m(oF())},g};function o7(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(r.key),r)}}function o9(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var se=(lO=function e(t,n){var r=n.default,i=n.triggerUpdate,a=n.onChange;(function(e,t){if(!(e instanceof t))throw TypeError("Cannot call a class as a function")})(this,e),this.name=t,this.defaultVal=void 0===r?null:r,this.triggerUpdate=void 0===i||i,this.onChange=void 0===a?function(e,t){}:a},lI&&o7(lO.prototype,lI),lq&&o7(lO,lq),Object.defineProperty(lO,"prototype",{writable:!1}),lO);function st(e){var t=e.stateInit,n=void 0===t?function(){return{}}:t,r=e.props,i=void 0===r?{}:r,a=e.methods,o=void 0===a?{}:a,s=e.aliases,A=void 0===s?{}:s,l=e.init,u=void 0===l?function(){}:l,c=e.update,h=void 0===c?function(){}:c,d=Object.keys(i).map(function(e){return new se(e,i[e])});return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},n instanceof Function?n(e):n,{initialised:!1}),r={};// Component constructor
function i(t){return a(t,e),s(),i}var a=function(e,n){u.call(i,e,t,n),t.initialised=!0},s=o8(function(){t.initialised&&(h.call(i,t,r),r={})},1);return(// Getter/setter methods
d.forEach(function(e){var n,a,o,A,l,u,c;i[e.name]=(n=e.name,o=void 0!==(a=e.triggerUpdate)&&a,l=void 0===(A=e.onChange)?function(e,t){}:A,c=void 0===(u=e.defaultVal)?null:u,function(e){var a=t[n];if(!arguments.length)return a;// Getter mode
var A=void 0===e?c:e;// pick default if value passed is undefined
return t[n]=A,l.call(i,A,t,a),// track changed props
r.hasOwnProperty(n)||(r[n]=a),o&&s(),i})}),// Other methods
Object.keys(o).forEach(function(e){i[e]=function(){for(var n,r=arguments.length,a=Array(r),s=0;s<r;s++)a[s]=arguments[s];return(n=o[e]).call.apply(n,[i,t].concat(a))}}),// Link aliases
Object.entries(A).forEach(function(e){var t=function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a,o,s=[],A=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;A=!1}else for(;!(A=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);A=!0);}catch(e){l=!0,i=e}finally{try{if(!A&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(l)throw i}}return s}}(e,2)||function(e,t){if(e){if("string"==typeof e)return o9(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o9(e,t)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return i[n]=i[r]}),// Reset all component props to their default value
i.resetProps=function(){return d.forEach(function(e){i[e.name](e.defaultVal)}),i},//
i.resetProps(),t._rerender=s,i)}}var sn=I("8PNKb"),sr={};function si(e,t,n){n=n||2;var r,i,a,o,s,A,l,u=t&&t.length,c=u?t[0]*n:e.length,h=sa(e,0,c,n,!0),d=[];if(!h||h.next===h.prev)return d;// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
if(u&&(h=// link every hole into the outer loop, producing a single-ring polygon without holes
function(e,t,n,r){var i,a,o,s,A,l=[];for(i=0,a=t.length;i<a;i++)o=t[i]*r,s=i<a-1?t[i+1]*r:e.length,(A=sa(e,o,s,r,!1))===A.next&&(A.steiner=!0),l.push(// find the leftmost node of a polygon ring
function(e){var t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e)return n}(A));// process holes from left to right
for(l.sort(ss),i=0;i<l.length;i++)n=// find a bridge between vertices that connects hole with an outer ring and and link it
function(e,t){var n=// David Eberly's algorithm for finding a bridge between hole and outer polygon
function(e,t){var n,r,i,a=t,o=e.x,s=e.y,A=-1/0;// find a segment intersected by a ray from the hole's leftmost point to the left;
// segment's endpoint with lesser x will be potential connection point
do{if(s<=a.y&&s>=a.next.y&&a.next.y!==a.y){var l=a.x+(s-a.y)*(a.next.x-a.x)/(a.next.y-a.y);if(l<=o&&l>A&&(A=l,i=a.x<a.next.x?a:a.next,l===o))return i;// hole touches outer segment; pick leftmost endpoint
}a=a.next}while(a!==t)if(!i)return null;// look for points inside the triangle of hole point, segment intersection and endpoint;
// if there are no points found, we have a valid connection;
// otherwise choose the point of the minimum angle with the ray as connection point
var u,c=i,h=i.x,d=i.y,f=1/0;a=i;do o>=a.x&&a.x>=h&&o!==a.x&&sl(s<d?o:A,s,h,d,s<d?A:o,s,a.x,a.y)&&(u=Math.abs(s-a.y)/(o-a.x),sp(a,e)&&(u<f||u===f&&(a.x>i.x||a.x===i.x&&(n=i,r=a,0>su(n.prev,n,r.prev)&&0>su(r.next,n,n.next))))&&(i=a,f=u)),a=a.next;while(a!==c)return i}(e,t);if(!n)return t;var r=sm(n,e);return(// filter collinear points around the cuts
so(r,r.next),so(n,n.next))}(l[i],n);return n}(e,t,h,n)),e.length>80*n){r=a=e[0],i=o=e[1];for(var f=n;f<c;f+=n)s=e[f],A=e[f+1],s<r&&(r=s),A<i&&(i=A),s>a&&(a=s),A>o&&(o=A);l=0!==// minX, minY and invSize are later used to transform coords into integers for z-order calculation
(l=Math.max(a-r,o-i))?32767/l:0}return(// main ear slicing loop which triangulates a polygon (given as a linked list)
function e(t,n,r,i,a,o,s){if(t){// interlink polygon nodes in z-order
!s&&o&&// interlink polygon nodes in z-order
function(e,t,n,r){var i=e;do 0===i.z&&(i.z=sA(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==e)i.prevZ.nextZ=null,i.prevZ=null,// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function(e){var t,n,r,i,a,o,s,A,l=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,r=n,s=0,t=0;t<l&&(s++,r=r.nextZ);t++);for(A=l;s>0||A>0&&r;)0!==s&&(0===A||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,A--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,l*=2}while(o>1)}(i)}(t,i,a,o);// iterate through ears, slicing them one by one
for(var A,l,u=t;t.prev!==t.next;){if(A=t.prev,l=t.next,o?function(e,t,n,r){var i=e.prev,a=e.next;if(su(i,e,a)>=0)return!1;// reflex, can't be an ear
// look for points inside the triangle in both directions
for(var o=i.x,s=e.x,A=a.x,l=i.y,u=e.y,c=a.y,h=o<s?o<A?o:A:s<A?s:A,d=l<u?l<c?l:c:u<c?u:c,f=o>s?o>A?o:A:s>A?s:A,p=l>u?l>c?l:c:u>c?u:c,m=sA(h,d,t,n,r),g=sA(f,p,t,n,r),v=e.prevZ,_=e.nextZ;v&&v.z>=m&&_&&_.z<=g;){if(v.x>=h&&v.x<=f&&v.y>=d&&v.y<=p&&v!==i&&v!==a&&sl(o,l,s,u,A,c,v.x,v.y)&&su(v.prev,v,v.next)>=0||(v=v.prevZ,_.x>=h&&_.x<=f&&_.y>=d&&_.y<=p&&_!==i&&_!==a&&sl(o,l,s,u,A,c,_.x,_.y)&&su(_.prev,_,_.next)>=0))return!1;_=_.nextZ}// look for remaining points in decreasing z-order
for(;v&&v.z>=m;){if(v.x>=h&&v.x<=f&&v.y>=d&&v.y<=p&&v!==i&&v!==a&&sl(o,l,s,u,A,c,v.x,v.y)&&su(v.prev,v,v.next)>=0)return!1;v=v.prevZ}// look for remaining points in increasing z-order
for(;_&&_.z<=g;){if(_.x>=h&&_.x<=f&&_.y>=d&&_.y<=p&&_!==i&&_!==a&&sl(o,l,s,u,A,c,_.x,_.y)&&su(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}(t,i,a,o):// check whether a polygon node forms a valid ear with adjacent nodes
function(e){var t=e.prev,n=e.next;if(su(t,e,n)>=0)return!1;// reflex, can't be an ear
for(// now make sure we don't have other points inside the potential ear
var r=t.x,i=e.x,a=n.x,o=t.y,s=e.y,A=n.y,l=r<i?r<a?r:a:i<a?i:a,u=o<s?o<A?o:A:s<A?s:A,c=r>i?r>a?r:a:i>a?i:a,h=o>s?o>A?o:A:s>A?s:A,d=n.next;d!==t;){if(d.x>=l&&d.x<=c&&d.y>=u&&d.y<=h&&sl(r,o,i,s,a,A,d.x,d.y)&&su(d.prev,d,d.next)>=0)return!1;d=d.next}return!0}(t)){// cut off the triangle
n.push(A.i/r|0),n.push(t.i/r|0),n.push(l.i/r|0),sv(t),// skipping the next vertex leads to less sliver triangles
t=l.next,u=l.next;continue}// if we looped through the whole remaining polygon and can't find any more ears
if((t=l)===u){// try filtering points and slicing again
s?1===s?e(t=// go through all polygon nodes and cure small local self-intersections
function(e,t,n){var r=e;do{var i=r.prev,a=r.next.next;!sc(i,a)&&sh(i,r,r.next,a)&&sp(i,a)&&sp(a,i)&&(t.push(i.i/n|0),t.push(r.i/n|0),t.push(a.i/n|0),// remove two nodes involved
sv(r),sv(r.next),r=e=a),r=r.next}while(r!==e)return so(r)}(so(t),n,r),n,r,i,a,o,2):2===s&&// try splitting polygon into two and triangulate them independently
function(t,n,r,i,a,o){// look for a valid diagonal that divides the polygon into two
var s=t;do{for(var A,l,u=s.next.next;u!==s.prev;){if(s.i!==u.i&&(A=s,l=u,A.next.i!==l.i&&A.prev.i!==l.i&&!// check if a polygon diagonal intersects any polygon segments
function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&sh(n,n.next,e,t))return!0;n=n.next}while(n!==e)return!1}(A,l)&&// dones't intersect other edges
(sp(A,l)&&sp(l,A)&&// check if the middle point of a polygon diagonal is inside the polygon
function(e,t){var n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next;while(n!==e)return r}(A,l)&&// locally visible
(su(A.prev,A,l.prev)||su(A,l.prev,l))||// does not create opposite-facing sectors
sc(A,l)&&su(A.prev,A,A.next)>0&&su(l.prev,l,l.next)>0))){// split the polygon in two by the diagonal
var c=sm(s,u);// filter colinear points around the cuts
s=so(s,s.next),c=so(c,c.next),// run earcut on each half
e(s,n,r,i,a,o,0),e(c,n,r,i,a,o,0);return}u=u.next}s=s.next}while(s!==t)}(t,n,r,i,a,o):e(so(t),n,r,i,a,o,1);break}}}}(h,d,n,r,i,l,0),d)}// create a circular doubly linked list from polygon points in the specified winding order
function sa(e,t,n,r,i){var a,o;if(i===sy(e,t,n,r)>0)for(a=t;a<n;a+=r)o=sg(a,e[a],e[a+1],o);else for(a=n-r;a>=t;a-=r)o=sg(a,e[a],e[a+1],o);return o&&sc(o,o.next)&&(sv(o),o=o.next),o}// eliminate colinear or duplicate points
function so(e,t){if(!e)return e;t||(t=e);var n,r=e;do if(n=!1,!r.steiner&&(sc(r,r.next)||0===su(r.prev,r,r.next))){if(sv(r),(r=t=r.prev)===r.next)break;n=!0}else r=r.next;while(n||r!==t)return t}function ss(e,t){return e.x-t.x}// z-order of a point given coords and inverse of the longer side of data bbox
function sA(e,t,n,r,i){return(e=((e=((e=((e=(// coords are transformed into non-negative 15-bit integer range
(e=(e-n)*i|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=(t-r)*i|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}// check if a point lies within a convex triangle
function sl(e,t,n,r,i,a,o,s){return(i-o)*(t-s)>=(e-o)*(a-s)&&(e-o)*(r-s)>=(n-o)*(t-s)&&(n-o)*(a-s)>=(i-o)*(r-s)}// signed area of a triangle
function su(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}// check if two points are equal
function sc(e,t){return e.x===t.x&&e.y===t.y}// check if two segments intersect
function sh(e,t,n,r){var i=sf(su(e,t,n)),a=sf(su(e,t,r)),o=sf(su(n,r,e)),s=sf(su(n,r,t));return!!(i!==a&&o!==s||0===i&&sd(e,n,t)||0===a&&sd(e,r,t)||0===o&&sd(n,e,r)||0===s&&sd(n,t,r))}// for collinear points p, q, r, check if point q lies on segment pr
function sd(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function sf(e){return e>0?1:e<0?-1:0}// check if a polygon diagonal is locally inside the polygon
function sp(e,t){return 0>su(e.prev,e,e.next)?su(e,t,e.next)>=0&&su(e,e.prev,t)>=0:0>su(e,t,e.prev)||0>su(e,e.next,t)}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
function sm(e,t){var n=new s_(e.i,e.x,e.y),r=new s_(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}// create a node and optionally link it with previous one (in a circular doubly linked list)
function sg(e,t,n,r){var i=new s_(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function sv(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function s_(e,t,n){// vertex index in coordinates array
this.i=e,// vertex coordinates
this.x=t,this.y=n,// previous and next vertex nodes in a polygon ring
this.prev=null,this.next=null,// z-order curve value
this.z=0,// previous and next nodes in z-order
this.prevZ=null,this.nextZ=null,// indicates whether this is a steiner point
this.steiner=!1}function sy(e,t,n,r){for(var i=0,a=t,o=n-r;a<n;a+=r)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}(sr=si).default=si,// return a percentage difference between the polygon area and its triangulation area;
// used to verify correctness of triangulation
si.deviation=function(e,t,n,r){var i=t&&t.length,a=i?t[0]*n:e.length,o=Math.abs(sy(e,0,a,n));if(i)for(var s=0,A=t.length;s<A;s++){var l=t[s]*n,u=s<A-1?t[s+1]*n:e.length;o-=Math.abs(sy(e,l,u,n))}var c=0;for(s=0;s<r.length;s+=3){var h=r[s]*n,d=r[s+1]*n,f=r[s+2]*n;c+=Math.abs((e[h]-e[f])*(e[d+1]-e[h+1])-(e[h]-e[d])*(e[f+1]-e[h+1]))}return 0===o&&0===c?0:Math.abs((c-o)/o)},// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts
si.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,i=0;i<e.length;i++){for(var a=0;a<e[i].length;a++)for(var o=0;o<t;o++)n.vertices.push(e[i][a][o]);i>0&&(r+=e[i-1].length,n.holes.push(r))}return n};// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class sx{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){let t=this._partials,n=0;for(let r=0;r<this._n&&r<32;r++){let i=t[r],a=e+i,o=Math.abs(e)<Math.abs(i)?e-(a-i):i-(a-e);o&&(t[n++]=o),e=a}return t[n]=e,this._n=n+1,this}valueOf(){let e=this._partials,t=this._n,n,r,i,a=0;if(t>0){for(a=e[--t];t>0&&(a=(n=a)+(r=e[--t]),!(i=r-(a-n))););t>0&&(i<0&&e[t-1]<0||i>0&&e[t-1]>0)&&(n=a+(r=2*i),r==n-a&&(a=n))}return a}}var sb=Math.PI,sM=sb/2,sw=sb/4,sE=2*sb,sS=180/sb,sT=sb/180,sC=Math.abs,sR=Math.atan,sP=Math.atan2,sL=Math.cos,sD=Math.ceil,sO=Math.hypot,sI=Math.sin,sq=Math.sign||function(e){return e>0?1:e<0?-1:0},sU=Math.sqrt;function sN(e){return e>1?sM:e<-1?-sM:Math.asin(e)}function sB(){}function sk(e,t){e&&sz.hasOwnProperty(e.type)&&sz[e.type](e,t)}var sF={Feature:function(e,t){sk(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,i=n.length;++r<i;)sk(n[r].geometry,t)}},sz={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,i=n.length;++r<i;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){sG(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,i=n.length;++r<i;)sG(n[r],t,0)},Polygon:function(e,t){sH(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,i=n.length;++r<i;)sH(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,i=n.length;++r<i;)sk(n[r],t)}};function sG(e,t,n){var r,i=-1,a=e.length-n;for(t.lineStart();++i<a;)r=e[i],t.point(r[0],r[1],r[2]);t.lineEnd()}function sH(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)sG(e[n],t,1);t.polygonEnd()}function sV(e,t){e&&sF.hasOwnProperty(e.type)?sF[e.type](e,t):sk(e,t)}var sj={sphere:sB,point:sB,lineStart:function(){sj.point=sX,sj.lineEnd=sW},lineEnd:sB,polygonStart:sB,polygonEnd:sB};function sW(){sj.point=sj.lineEnd=sB}function sX(e,t){e*=sT,t*=sT,lN=e,lB=sI(t),lk=sL(t),sj.point=sQ}function sQ(e,t){e*=sT;var n=sI(t*=sT),r=sL(t),i=sC(e-lN),a=sL(i),o=r*sI(i),s=lk*n-lB*r*a,A=lB*n+lk*r*a;lU.add(sP(sU(o*o+s*s),A)),lN=e,lB=n,lk=r}var sY=[null,null],sZ={type:"LineString",coordinates:sY};function sK(e,t){return sY[0]=e,sY[1]=t,lU=new sx,sV(sZ,sj),+lU}function sJ(e,t){var n,r,i=e[0]*sT,a=e[1]*sT,o=t[0]*sT,s=t[1]*sT,A=sL(a),l=sI(a),u=sL(s),c=sI(s),h=A*sL(i),d=A*sI(i),f=u*sL(o),p=u*sI(o),m=2*sN(sU((n=sI((n=s-a)/2))*n+A*u*((r=sI((r=o-i)/2))*r))),g=sI(m),v=m?function(e){var t=sI(e*=m)/g,n=sI(m-e)/g,r=n*h+t*f,i=n*d+t*p;return[sP(i,r)*sS,sP(n*l+t*c,sU(r*r+i*i))*sS]}:function(){return[i*sS,a*sS]};return v.distance=m,v}function s$(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(r.key),r)}}function s0(e){return(s0=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s1(e,t){return(s1=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function s2(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a,o,s=[],A=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;A=!1}else for(;!(A=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);A=!0);}catch(e){l=!0,i=e}finally{try{if(!A&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(l)throw i}}return s}}(e,t)||s3(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s3(e,t){if(e){if("string"==typeof e)return s4(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s4(e,t)}}function s4(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var s5=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=[],r=null;return e.forEach(function(e){if(r){var i=180*sK(e,r)/Math.PI;if(i>t)for(var a=sJ(r,e),o=1/Math.ceil(i/t),s=o;s<1;)n.push(a(s)),s+=o}n.push(r=e)}),n},s6="undefined"!=typeof window&&window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BufferGeometry:t3,Float32BufferAttribute:tY},s8=new s6.BufferGeometry().setAttribute?"setAttribute":"addAttribute",s7=/*#__PURE__*/function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s1(e,t)}(o,e);var t,r,i,a=(t=function(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}(),function(){var e,n=s0(o);if(t){var r=s0(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return function(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function o(e){var t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5;!function(e,t){if(!(e instanceof t))throw TypeError("Cannot call a class as a function")}(this,o),(t=a.call(this)).type="GeoJsonGeometry",t.parameters={geoJson:e,radius:r,resolution:i};// process various geometry types
var s=(({Point:c,MultiPoint:function(e,t){var n={vertices:[],indices:[]};return e.map(function(e){return c(e,t)}).forEach(function(e){s9(n,s2(e,1)[0])}),[n]},LineString:h,MultiLineString:function(e,t){var n={vertices:[],indices:[]};return e.map(function(e){return h(e,t)}).forEach(function(e){s9(n,s2(e,1)[0])}),[n]},Polygon:d,MultiPolygon:function(e,t){var n={vertices:[],indices:[]},r={vertices:[],indices:[]};e.map(function(e){return d(e,t)}).forEach(function(e){var t=s2(e,2),i=t[0],a=t[1];s9(n,i),a&&s9(r,a)});var i=[n];return r.vertices.length&&i.push(r),i}})[e.type]||function(){return[]})(e.coordinates,r),A=[],l=[],u=0;//
function c(e,t){return[{vertices:At(e[1],e[0],t),indices:[]}]}function h(e,t){for(var r=s5(e,i).map(function(e){var n=s2(e,2),r=n[0];return At(n[1],r,t)}),a=/*@__PURE__*/n(sr).flatten([r]).vertices,o=Math.round(a.length/3),s=[],A=1;A<o;A++)s.push(A-1,A);return[{vertices:a,indices:s}]}function d(e,t){for(var r=e.map(function(e){return s5(e,i).map(function(e){var n=s2(e,2),r=n[0];return At(n[1],r,t)})}),a=/*@__PURE__*/n(sr).flatten(r),o=a.vertices,s=a.holes,A=s[0]||1/0,l=o.slice(0,3*A),u=o.slice(3*A),c=new Set(s),h=Math.round(o.length/3),d=[],f=[],p=1;p<h;p++)c.has(p)||(p<A?d.push(p-1,p):f.push(p-1-A,p-A));var m=[{indices:d,vertices:l}];return s.length&&m.push({indices:f,vertices:u}),m}return s.forEach(function(e){var n=A.length;s9({indices:A,vertices:l},e),t.addGroup(n,A.length-n,u++)}),// build geometry
A.length&&t.setIndex(A),l.length&&t[s8]("position",new s6.Float32BufferAttribute(l,3)),t}return r&&s$(o.prototype,r),i&&s$(o,i),Object.defineProperty(o,"prototype",{writable:!1}),o}(s6.BufferGeometry);function s9(e,t){var n=Math.round(e.vertices.length/3);Ae(e.vertices,t.vertices),Ae(e.indices,t.indices.map(function(e){return e+n}))}function Ae(e,t){var n,r=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=s3(e))){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return o=e.done,e},e:function(e){s=!0,a=e},f:function(){try{o||null==n.return||n.return()}finally{if(s)throw a}}}}(t);try{for(r.s();!(n=r.n()).done;){var i=n.value;e.push(i)}}catch(e){r.e(e)}finally{r.f()}}function At(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=(90-e)*Math.PI/180,i=(90-t)*Math.PI/180;return[n*Math.sin(r)*Math.cos(i),// x
n*Math.cos(r),// y
n*Math.sin(r)*Math.sin(i)// z
]}function An(e,t,n){e=+e,t=+t,n=(i=arguments.length)<2?(t=e,e=0,1):i<3?1:+n;for(var r=-1,i=0|Math.max(0,Math.ceil((t-e)/n)),a=Array(i);++r<i;)a[r]=e+r*n;return a}function Ar(e,t,n){var r=An(e,t-1e-6,n).concat(t);return function(e){return r.map(function(t){return[e,t]})}}function Ai(e,t,n){var r=An(e,t-1e-6,n).concat(t);return function(e){return r.map(function(t){return[t,e]})}}var Aa={};function Ao(e,t,n=!0){if(!t||!t.isReady)throw Error("BufferGeometryUtils: Initialized MikkTSpace library required.");if(!e.hasAttribute("position")||!e.hasAttribute("normal")||!e.hasAttribute("uv"))throw Error('BufferGeometryUtils: Tangents require "position", "normal", and "uv" attributes.');function r(e){if(e.normalized||e.isInterleavedBufferAttribute){let t=new Float32Array(e.count*e.itemSize);for(let n=0,r=0;n<e.count;n++)t[r++]=e.getX(n),t[r++]=e.getY(n),e.itemSize>2&&(t[r++]=e.getZ(n));return t}return e.array instanceof Float32Array?e.array:new Float32Array(e.array)}// MikkTSpace algorithm requires non-indexed input.
let i=e.index?e.toNonIndexed():e,a=t.generateTangents(r(i.attributes.position),r(i.attributes.normal),r(i.attributes.uv));// Texture coordinate convention of glTF differs from the apparent
// default of the MikkTSpace library; .w component must be flipped.
if(n)for(let e=3;e<a.length;e+=4)a[e]*=-1;return(//
i.setAttribute("tangent",new tW(a,4)),e!==i&&e.copy(i),e)}/**
 * @param  {Array<BufferGeometry>} geometries
 * @param  {Boolean} useGroups
 * @return {BufferGeometry}
 */function As(e,t=!1){let n=null!==e[0].index,r=new Set(Object.keys(e[0].attributes)),i=new Set(Object.keys(e[0].morphAttributes)),a={},o={},s=e[0].morphTargetsRelative,A=new t3,l=0;for(let u=0;u<e.length;++u){let c=e[u],h=0;// ensure that all geometries are indexed, or none
if(n!==(null!==c.index))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;// gather attributes, exit early if they're different
for(let e in c.attributes){if(!r.has(e))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+e+'" attribute exists among all geometries, or in none of them.'),null;void 0===a[e]&&(a[e]=[]),a[e].push(c.attributes[e]),h++}// ensure geometries have the same number of attributes
if(h!==r.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;// gather morph attributes, exit early if they're different
if(s!==c.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(let e in c.morphAttributes){if(!i.has(e))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;void 0===o[e]&&(o[e]=[]),o[e].push(c.morphAttributes[e])}if(t){let e;if(n)e=c.index.count;else{if(void 0===c.attributes.position)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;e=c.attributes.position.count}A.addGroup(l,e,u),l+=e}}// merge indices
if(n){let t=0,n=[];for(let r=0;r<e.length;++r){let i=e[r].index;for(let e=0;e<i.count;++e)n.push(i.getX(e)+t);t+=e[r].attributes.position.count}A.setIndex(n)}// merge attributes
for(let e in a){let t=AA(a[e]);if(!t)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+e+" attribute."),null;A.setAttribute(e,t)}// merge morph attributes
for(let e in o){let t=o[e][0].length;if(0===t)break;A.morphAttributes=A.morphAttributes||{},A.morphAttributes[e]=[];for(let n=0;n<t;++n){let t=[];for(let r=0;r<o[e].length;++r)t.push(o[e][r][n]);let r=AA(t);if(!r)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+e+" morphAttribute."),null;A.morphAttributes[e].push(r)}}return A}/**
 * @param {Array<BufferAttribute>} attributes
 * @return {BufferAttribute}
 */function AA(e){let t,n,r;let i=-1,a=0;for(let o=0;o<e.length;++o){let s=e[o];if(s.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(void 0===t&&(t=s.array.constructor),t!==s.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(void 0===n&&(n=s.itemSize),n!==s.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(void 0===r&&(r=s.normalized),r!==s.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(-1===i&&(i=s.gpuType),i!==s.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;a+=s.array.length}let o=new t(a),s=0;for(let t=0;t<e.length;++t)o.set(e[t].array,s),s+=e[t].array.length;let A=new tW(o,n,r);return void 0!==i&&(A.gpuType=i),A}function Al(e){return e.isInstancedInterleavedBufferAttribute||e.isInterleavedBufferAttribute?Ac(e):e.isInstancedBufferAttribute?new iQ().copy(e):new tW().copy(e)}/**
 * @param {Array<BufferAttribute>} attributes
 * @return {Array<InterleavedBufferAttribute>}
 */function Au(e){let t;let n=0,r=0;// calculate the length and type of the interleavedBuffer
for(let i=0,a=e.length;i<a;++i){let a=e[i];if(void 0===t&&(t=a.array.constructor),t!==a.array.constructor)return console.error("AttributeBuffers of different types cannot be interleaved"),null;n+=a.array.length,r+=a.itemSize}// Create the set of buffer attributes
let i=new ij(new t(n),r),a=0,o=[],s=["getX","getY","getZ","getW"],A=["setX","setY","setZ","setW"];for(let t=0,n=e.length;t<n;t++){let n=e[t],r=n.itemSize,l=n.count,u=new iX(i,r,a,n.normalized);o.push(u),a+=r;// Move the data for each attribute into the new interleavedBuffer
// at the appropriate offset
for(let e=0;e<l;e++)for(let t=0;t<r;t++)u[A[t]](e,n[s[t]](e))}return o}function Ac(e){let t;let n=e.data.array.constructor,r=e.count,i=e.itemSize,a=e.normalized,o=new n(r*i);t=e.isInstancedInterleavedBufferAttribute?new iQ(o,i,a,e.meshPerAttribute):new tW(o,i,a);for(let n=0;n<r;n++)t.setX(n,e.getX(n)),i>=2&&t.setY(n,e.getY(n)),i>=3&&t.setZ(n,e.getZ(n)),i>=4&&t.setW(n,e.getW(n));return t}function Ah(e){let t=e.attributes,n=e.morphTargets,r=new Map;for(let e in t){let n=t[e];n.isInterleavedBufferAttribute&&(r.has(n)||r.set(n,Ac(n)),t[e]=r.get(n))}for(let e in n){let t=n[e];t.isInterleavedBufferAttribute&&(r.has(t)||r.set(t,Ac(t)),n[e]=r.get(t))}}/**
 * @param {BufferGeometry} geometry
 * @return {number}
 */function Ad(e){// Return the estimated memory used by this geometry in bytes
// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account
// for InterleavedBufferAttributes.
let t=0;for(let n in e.attributes){let r=e.getAttribute(n);t+=r.count*r.itemSize*r.array.BYTES_PER_ELEMENT}let n=e.getIndex();return t+(n?n.count*n.itemSize*n.array.BYTES_PER_ELEMENT:0)}/**
 * @param {BufferGeometry} geometry
 * @param {number} tolerance
 * @return {BufferGeometry}
 */function Af(e,t=1e-4){t=Math.max(t,Number.EPSILON);// Generate an index buffer if the geometry doesn't have one, or optimize it
// if it's already available.
let n={},r=e.getIndex(),i=e.getAttribute("position"),a=r?r.count:i.count,o=0,s=Object.keys(e.attributes),A={},l={},u=[],c=["getX","getY","getZ","getW"],h=["setX","setY","setZ","setW"];// Initialize the arrays, allocating space conservatively. Extra
// space will be trimmed in the last step.
for(let t=0,n=s.length;t<n;t++){let n=s[t],r=e.attributes[n];A[n]=new tW(new r.array.constructor(r.count*r.itemSize),r.itemSize,r.normalized);let i=e.morphAttributes[n];i&&(l[n]=new tW(new i.array.constructor(i.count*i.itemSize),i.itemSize,i.normalized))}// convert the error tolerance to an amount of decimal places to truncate to
let d=.5*t,f=Math.log10(1/t),p=Math.pow(10,f),m=d*p;for(let t=0;t<a;t++){let i=r?r.getX(t):t,a="";for(let t=0,n=s.length;t<n;t++){let n=s[t],r=e.getAttribute(n),o=r.itemSize;for(let e=0;e<o;e++)a+=`${~~(r[c[e]](i)*p+m)},`}// Add another reference to the vertex if it's already
// used by another index
if(a in n)u.push(n[a]);else{// copy data to the new index in the temporary attributes
for(let t=0,n=s.length;t<n;t++){let n=s[t],r=e.getAttribute(n),a=e.morphAttributes[n],u=r.itemSize,d=A[n],f=l[n];for(let e=0;e<u;e++){let t=c[e],n=h[e];if(d[n](o,r[t](i)),a)for(let e=0,r=a.length;e<r;e++)f[e][n](o,a[e][t](i))}}n[a]=o,u.push(o),o++}}// generate result BufferGeometry
let g=e.clone();for(let t in e.attributes){let e=A[t];if(g.setAttribute(t,new tW(e.array.slice(0,o*e.itemSize),e.itemSize,e.normalized)),t in l)for(let e=0;e<l[t].length;e++){let n=l[t][e];g.morphAttributes[t][e]=new tW(n.array.slice(0,o*n.itemSize),n.itemSize,n.normalized)}}return(// indices
g.setIndex(u),g)}/**
 * @param {BufferGeometry} geometry
 * @param {number} drawMode
 * @return {BufferGeometry}
 */function Ap(e,t){if(0===t)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),e;if(2!==t&&1!==t)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",t),e;{let n=e.getIndex();// generate index if not present
if(null===n){let t=[],r=e.getAttribute("position");if(void 0===r)return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),e;for(let e=0;e<r.count;e++)t.push(e);e.setIndex(t),n=e.getIndex()}//
let r=n.count-2,i=[];if(2===t)for(let e=1;e<=r;e++)i.push(n.getX(0)),i.push(n.getX(e)),i.push(n.getX(e+1));else // gl.TRIANGLE_STRIP
for(let e=0;e<r;e++)e%2==0?(i.push(n.getX(e)),i.push(n.getX(e+1)),i.push(n.getX(e+2))):(i.push(n.getX(e+2)),i.push(n.getX(e+1)),i.push(n.getX(e)));i.length/3!==r&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");// build final geometry
let a=e.clone();return a.setIndex(i),a.clearGroups(),a}}/**
 * Calculates the morphed attributes of a morphed/skinned BufferGeometry.
 * Helpful for Raytracing or Decals.
 * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.
 * @return {Object} An Object with original position/normal attributes and morphed ones.
 */function Am(e){let t,n,r,i,a,o,s,A,l,u;let c=new eL,h=new eL,d=new eL,f=new eL,p=new eL,m=new eL,g=new eL,v=new eL,_=new eL;function y(e,t,n,r,i,a,o,s){c.fromBufferAttribute(t,i),h.fromBufferAttribute(t,a),d.fromBufferAttribute(t,o);let A=e.morphTargetInfluences;if(n&&A){g.set(0,0,0),v.set(0,0,0),_.set(0,0,0);for(let e=0,t=n.length;e<t;e++){let t=A[e],s=n[e];0!==t&&(f.fromBufferAttribute(s,i),p.fromBufferAttribute(s,a),m.fromBufferAttribute(s,o),r?(g.addScaledVector(f,t),v.addScaledVector(p,t),_.addScaledVector(m,t)):(g.addScaledVector(f.sub(c),t),v.addScaledVector(p.sub(h),t),_.addScaledVector(m.sub(d),t)))}c.add(g),h.add(v),d.add(_)}e.isSkinnedMesh&&(e.applyBoneTransform(i,c),e.applyBoneTransform(a,h),e.applyBoneTransform(o,d)),s[3*i+0]=c.x,s[3*i+1]=c.y,s[3*i+2]=c.z,s[3*a+0]=h.x,s[3*a+1]=h.y,s[3*a+2]=h.z,s[3*o+0]=d.x,s[3*o+1]=d.y,s[3*o+2]=d.z}let x=e.geometry,b=e.material,M=x.index,w=x.attributes.position,E=x.morphAttributes.position,S=x.morphTargetsRelative,T=x.attributes.normal,C=x.morphAttributes.position,R=x.groups,P=x.drawRange,L=new Float32Array(w.count*w.itemSize),D=new Float32Array(T.count*T.itemSize);if(null!==M){// indexed buffer geometry
if(Array.isArray(b))for(i=0,o=R.length;i<o;i++)for(l=Math.max((A=R[i]).start,P.start),u=Math.min(A.start+A.count,P.start+P.count),a=l,s=u;a<s;a+=3)y(e,w,E,S,t=M.getX(a),n=M.getX(a+1),r=M.getX(a+2),L),y(e,T,C,S,t,n,r,D);else for(l=Math.max(0,P.start),u=Math.min(M.count,P.start+P.count),i=l,o=u;i<o;i+=3)y(e,w,E,S,t=M.getX(i),n=M.getX(i+1),r=M.getX(i+2),L),y(e,T,C,S,t,n,r,D)}else // non-indexed buffer geometry
if(Array.isArray(b))for(i=0,o=R.length;i<o;i++)for(l=Math.max((A=R[i]).start,P.start),u=Math.min(A.start+A.count,P.start+P.count),a=l,s=u;a<s;a+=3)y(e,w,E,S,t=a,n=a+1,r=a+2,L),y(e,T,C,S,t,n,r,D);else for(l=Math.max(0,P.start),u=Math.min(w.count,P.start+P.count),i=l,o=u;i<o;i+=3)y(e,w,E,S,t=i,n=i+1,r=i+2,L),y(e,T,C,S,t,n,r,D);let O=new tY(L,3),I=new tY(D,3);return{positionAttribute:w,normalAttribute:T,morphedPositionAttribute:O,morphedNormalAttribute:I}}function Ag(e){if(0===e.groups.length)return console.warn("THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge."),e;let t=e.groups;// create index for non-indexed geometries
if(// sort groups by material index
t=t.sort((e,t)=>e.materialIndex!==t.materialIndex?e.materialIndex-t.materialIndex:e.start-t.start),null===e.getIndex()){let t=e.getAttribute("position"),n=[];for(let e=0;e<t.count;e+=3)n.push(e,e+1,e+2);e.setIndex(n)}// sort index
let n=e.getIndex(),r=[];for(let e=0;e<t.length;e++){let i=t[e],a=i.start,o=a+i.count;for(let e=a;e<o;e++)r.push(n.getX(e))}e.dispose(),e.setIndex(r);// update groups indices
let i=0;for(let e=0;e<t.length;e++){let n=t[e];n.start=i,i+=n.count}// merge groups
let a=t[0];e.groups=[a];for(let n=1;n<t.length;n++){let r=t[n];a.materialIndex===r.materialIndex?a.count+=r.count:(a=r,e.groups.push(a))}return e}/**
 * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,
 * non-indexed geometry. Returns the geometry with smooth normals everywhere except
 * faces that meet at an angle greater than the crease angle.
 *
 * @param {BufferGeometry} geometry
 * @param {number} [creaseAngle]
 * @return {BufferGeometry}
 */function Av(e,t=Math.PI/3/* 60 degrees */){let n=Math.cos(t),r=(1+1e-10)*100,i=[new eL,new eL,new eL],a=new eL,o=new eL,s=new eL,A=new eL;// hashes a vector
function l(e){let t=~~(e.x*r),n=~~(e.y*r),i=~~(e.z*r);return`${t},${n},${i}`}// BufferGeometry.toNonIndexed() warns if the geometry is non-indexed
// and returns the original geometry
let u=e.index?e.toNonIndexed():e,c=u.attributes.position,h={};// find all the normals shared by commonly located vertices
for(let e=0,t=c.count/3;e<t;e++){let t=3*e,n=i[0].fromBufferAttribute(c,t+0),r=i[1].fromBufferAttribute(c,t+1),s=i[2].fromBufferAttribute(c,t+2);a.subVectors(s,r),o.subVectors(n,r);// add the normal to the map for all vertices
let A=new eL().crossVectors(a,o).normalize();for(let e=0;e<3;e++){let t=i[e],n=l(t);n in h||(h[n]=[]),h[n].push(A)}}// average normals from all vertices that share a common location if they are within the
// provided crease threshold
let d=new Float32Array(3*c.count),f=new tW(d,3,!1);for(let e=0,t=c.count/3;e<t;e++){// get the face normal for this vertex
let t=3*e,r=i[0].fromBufferAttribute(c,t+0),u=i[1].fromBufferAttribute(c,t+1),d=i[2].fromBufferAttribute(c,t+2);a.subVectors(d,u),o.subVectors(r,u),s.crossVectors(a,o).normalize();// average all normals that meet the threshold and set the normal value
for(let e=0;e<3;e++){let r=i[e],a=l(r),o=h[a];A.set(0,0,0);for(let e=0,t=o.length;e<t;e++){let t=o[e];s.dot(t)>n&&A.add(t)}A.normalize(),f.setXYZ(t+e,A.x,A.y,A.z)}}return u.setAttribute("normal",f),u}function A_(e,t=!1){return console.warn("THREE.BufferGeometryUtils: mergeBufferGeometries() has been renamed to mergeGeometries()."),As(e,t)}function Ay(e){return console.warn("THREE.BufferGeometryUtils: mergeBufferAttributes() has been renamed to mergeAttributes()."),AA(e)}t(Aa,"computeMikkTSpaceTangents",()=>Ao),t(Aa,"mergeGeometries",()=>As),t(Aa,"mergeAttributes",()=>AA),t(Aa,"deepCloneAttribute",()=>Al),t(Aa,"deinterleaveAttribute",()=>Ac),t(Aa,"interleaveAttributes",()=>Au),t(Aa,"deinterleaveGeometry",()=>Ah),t(Aa,"estimateBytesUsed",()=>Ad),t(Aa,"mergeVertices",()=>Af),t(Aa,"toTrianglesDrawMode",()=>Ap),t(Aa,"computeMorphedAttributes",()=>Am),t(Aa,"mergeGroups",()=>Ag),t(Aa,"toCreasedNormals",()=>Av),t(Aa,"mergeBufferGeometries",()=>A_),t(Aa,"mergeBufferAttributes",()=>Ay);var Ax=function(e){return"function"==typeof e?e// fn
:"string"==typeof e?function(t){return t[e]}// property name
:function(t){return e}},Ab=I("bYoiY"),AM={};// constant
function Aw(e,t){if(e){if("string"==typeof e)return AE(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return AE(e,t)}}function AE(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function AS(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}AM=function(){function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}// https://github.com/bgrins/TinyColor
// Brian Grinstead, MIT License
var t,n,r,i=/^\s+/,a=/\s+$/;function o(t,n){// If input is already a tinycolor, return itself
if(n=n||{},(t=t||"")instanceof o)return t;// If we are called as a function, call using new instead
if(!(this instanceof o))return new o(t,n);var r,s,A,l,u,c,h,d,f,p,m,g,v,_,y,x,b,w,T,R,L=(s={r:0,g:0,b:0},A=1,l=null,u=null,c=null,h=!1,d=!1,"string"==typeof(r=t)&&(r=// `stringInputToObject`
// Permissive string parsing.  Take in a number of formats, and output an object
// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`
function(e){e=e.replace(i,"").replace(a,"").toLowerCase();var t,n=!1;if(M[e])e=M[e],n=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};return(t=D.rgb.exec(e))?{r:t[1],g:t[2],b:t[3]}:(t=D.rgba.exec(e))?{r:t[1],g:t[2],b:t[3],a:t[4]}:(t=D.hsl.exec(e))?{h:t[1],s:t[2],l:t[3]}:(t=D.hsla.exec(e))?{h:t[1],s:t[2],l:t[3],a:t[4]}:(t=D.hsv.exec(e))?{h:t[1],s:t[2],v:t[3]}:(t=D.hsva.exec(e))?{h:t[1],s:t[2],v:t[3],a:t[4]}:(t=D.hex8.exec(e))?{r:C(t[1]),g:C(t[2]),b:C(t[3]),a:C(t[4])/255,format:n?"name":"hex8"}:(t=D.hex6.exec(e))?{r:C(t[1]),g:C(t[2]),b:C(t[3]),format:n?"name":"hex"}:(t=D.hex4.exec(e))?{r:C(t[1]+""+t[1]),g:C(t[2]+""+t[2]),b:C(t[3]+""+t[3]),a:C(t[4]+""+t[4])/255,format:n?"name":"hex8"}:!!(t=D.hex3.exec(e))&&{r:C(t[1]+""+t[1]),g:C(t[2]+""+t[2]),b:C(t[3]+""+t[3]),format:n?"name":"hex"}}(r)),"object"==e(r)&&(O(r.r)&&O(r.g)&&O(r.b)?(f=r.r,p=r.g,m=r.b,s={r:255*S(f,255),g:255*S(p,255),b:255*S(m,255)},h=!0,d="%"===String(r.r).substr(-1)?"prgb":"rgb"):O(r.h)&&O(r.s)&&O(r.v)?(l=P(r.s),u=P(r.v),g=r.h,v=l,_=u,g=6*S(g,360),v=S(v,100),_=S(_,100),y=Math.floor(g),x=g-y,b=_*(1-v),w=_*(1-x*v),T=_*(1-(1-x)*v),s={r:255*[_,w,b,b,T,_][R=y%6],g:255*[T,_,_,w,b,b][R],b:255*[b,b,T,_,_,w][R]},h=!0,d="hsv"):O(r.h)&&O(r.s)&&O(r.l)&&(l=P(r.s),c=P(r.l),s=// `hslToRgb`
// Converts an HSL color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
function(e,t,n){var r,i,a;function o(e,t,n){return(n<0&&(n+=1),n>1&&(n-=1),n<1/6)?e+(t-e)*6*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}if(e=S(e,360),t=S(t,100),n=S(n,100),0===t)r=i=a=n;// achromatic
else{var s=n<.5?n*(1+t):n+t-n*t,A=2*n-s;r=o(A,s,e+1/3),i=o(A,s,e),a=o(A,s,e-1/3)}return{r:255*r,g:255*i,b:255*a}}(r.h,l,c),h=!0,d="hsl"),r.hasOwnProperty("a")&&(A=r.a)),A=E(A),{ok:h,format:r.format||d,r:Math.min(255,Math.max(s.r,0)),g:Math.min(255,Math.max(s.g,0)),b:Math.min(255,Math.max(s.b,0)),a:A});this._originalInput=t,this._r=L.r,this._g=L.g,this._b=L.b,this._a=L.a,this._roundA=Math.round(100*this._a)/100,this._format=n.format||L.format,this._gradientType=n.gradientType,this._r<1&&(this._r=Math.round(this._r)),this._g<1&&(this._g=Math.round(this._g)),this._b<1&&(this._b=Math.round(this._b)),this._ok=L.ok}// `rgbToHsl`
// Converts an RGB color value to HSL.
// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]
// *Returns:* { h, s, l } in [0,1]
function s(e,t,n){var r,i,a=Math.max(e=S(e,255),t=S(t,255),n=S(n,255)),o=Math.min(e,t,n),s=(a+o)/2;if(a==o)r=i=0;// achromatic
else{var A=a-o;switch(i=s>.5?A/(2-a-o):A/(a+o),a){case e:r=(t-n)/A+(t<n?6:0);break;case t:r=(n-e)/A+2;break;case n:r=(e-t)/A+4}r/=6}return{h:r,s:i,l:s}}// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
function A(e,t,n){var r,i=Math.max(e=S(e,255),t=S(t,255),n=S(n,255)),a=Math.min(e,t,n),o=i-a;if(i==a)r=0;// achromatic
else{switch(i){case e:r=(t-n)/o+(t<n?6:0);break;case t:r=(n-e)/o+2;break;case n:r=(e-t)/o+4}r/=6}return{h:r,s:0===i?0:o/i,v:i}}// `rgbToHex`
// Converts an RGB color to hex
// Assumes r, g, and b are contained in the set [0, 255]
// Returns a 3 or 6 character hex
function l(e,t,n,r){var i=[R(Math.round(e).toString(16)),R(Math.round(t).toString(16)),R(Math.round(n).toString(16))];return(// Return a 3 character hex if possible
r&&i[0].charAt(0)==i[0].charAt(1)&&i[1].charAt(0)==i[1].charAt(1)&&i[2].charAt(0)==i[2].charAt(1)?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join(""))}// `rgbaToArgbHex`
// Converts an RGBA color to an ARGB Hex8 string
// Rarely used, but required for "toFilter()"
function u(e,t,n,r){return[R(L(r)),R(Math.round(e).toString(16)),R(Math.round(t).toString(16)),R(Math.round(n).toString(16))].join("")}// Modification Functions
// ----------------------
// Thanks to less.js for some of the basics here
// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>
function c(e,t){t=0===t?0:t||10;var n=o(e).toHsl();return n.s-=t/100,n.s=T(n.s),o(n)}function h(e,t){t=0===t?0:t||10;var n=o(e).toHsl();return n.s+=t/100,n.s=T(n.s),o(n)}function d(e){return o(e).desaturate(100)}function f(e,t){t=0===t?0:t||10;var n=o(e).toHsl();return n.l+=t/100,n.l=T(n.l),o(n)}function p(e,t){t=0===t?0:t||10;var n=o(e).toRgb();return n.r=Math.max(0,Math.min(255,n.r-Math.round(-(255*(t/100))))),n.g=Math.max(0,Math.min(255,n.g-Math.round(-(255*(t/100))))),n.b=Math.max(0,Math.min(255,n.b-Math.round(-(255*(t/100))))),o(n)}function m(e,t){t=0===t?0:t||10;var n=o(e).toHsl();return n.l-=t/100,n.l=T(n.l),o(n)}// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.
// Values outside of this range will be wrapped into this range.
function g(e,t){var n=o(e).toHsl(),r=(n.h+t)%360;return n.h=r<0?360+r:r,o(n)}// Combination Functions
// ---------------------
// Thanks to jQuery xColor for some of the ideas behind these
// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>
function v(e){var t=o(e).toHsl();return t.h=(t.h+180)%360,o(t)}function _(e,t){if(isNaN(t)||t<=0)throw Error("Argument to polyad must be a positive number");for(var n=o(e).toHsl(),r=[o(e)],i=360/t,a=1;a<t;a++)r.push(o({h:(n.h+a*i)%360,s:n.s,l:n.l}));return r}function y(e){var t=o(e).toHsl(),n=t.h;return[o(e),o({h:(n+72)%360,s:t.s,l:t.l}),o({h:(n+216)%360,s:t.s,l:t.l})]}function x(e,t,n){t=t||6,n=n||30;var r=o(e).toHsl(),i=360/n,a=[o(e)];for(r.h=(r.h-(i*t>>1)+720)%360;--t;)r.h=(r.h+i)%360,a.push(o(r));return a}function b(e,t){t=t||6;for(var n=o(e).toHsv(),r=n.h,i=n.s,a=n.v,s=[],A=1/t;t--;)s.push(o({h:r,s:i,v:a})),a=(a+A)%1;return s}o.prototype={isDark:function(){return 128>this.getBrightness()},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){//http://www.w3.org/TR/AERT#color-contrast
var e=this.toRgb();return(299*e.r+587*e.g+114*e.b)/1e3},getLuminance:function(){//http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
var e,t,n,r=this.toRgb();return e=r.r/255,.2126*(e<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4))+.7152*((t=r.g/255)<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4))+.0722*((n=r.b/255)<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4))},setAlpha:function(e){return this._a=E(e),this._roundA=Math.round(100*this._a)/100,this},toHsv:function(){var e=A(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=A(this._r,this._g,this._b),t=Math.round(360*e.h),n=Math.round(100*e.s),r=Math.round(100*e.v);return 1==this._a?"hsv("+t+", "+n+"%, "+r+"%)":"hsva("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHsl:function(){var e=s(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=s(this._r,this._g,this._b),t=Math.round(360*e.h),n=Math.round(100*e.s),r=Math.round(100*e.l);return 1==this._a?"hsl("+t+", "+n+"%, "+r+"%)":"hsla("+t+", "+n+"%, "+r+"%, "+this._roundA+")"},toHex:function(e){return l(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(e){var t,n,r,i,a;return t=this._r,n=this._g,r=this._b,i=this._a,a=[R(Math.round(t).toString(16)),R(Math.round(n).toString(16)),R(Math.round(r).toString(16)),R(L(i))],// Return a 4 character hex if possible
e&&a[0].charAt(0)==a[0].charAt(1)&&a[1].charAt(0)==a[1].charAt(1)&&a[2].charAt(0)==a[2].charAt(1)&&a[3].charAt(0)==a[3].charAt(1)?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0)+a[3].charAt(0):a.join("")},toHex8String:function(e){return"#"+this.toHex8(e)},toRgb:function(){return{r:Math.round(this._r),g:Math.round(this._g),b:Math.round(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+")":"rgba("+Math.round(this._r)+", "+Math.round(this._g)+", "+Math.round(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:Math.round(100*S(this._r,255))+"%",g:Math.round(100*S(this._g,255))+"%",b:Math.round(100*S(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+Math.round(100*S(this._r,255))+"%, "+Math.round(100*S(this._g,255))+"%, "+Math.round(100*S(this._b,255))+"%)":"rgba("+Math.round(100*S(this._r,255))+"%, "+Math.round(100*S(this._g,255))+"%, "+Math.round(100*S(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":!(this._a<1)&&(w[l(this._r,this._g,this._b,!0)]||!1)},toFilter:function(e){var t="#"+u(this._r,this._g,this._b,this._a),n=t,r=this._gradientType?"GradientType = 1, ":"";if(e){var i=o(e);n="#"+u(i._r,i._g,i._b,i._a)}return"progid:DXImageTransform.Microsoft.gradient("+r+"startColorstr="+t+",endColorstr="+n+")"},toString:function(e){var t=!!e;e=e||this._format;var n=!1,r=this._a<1&&this._a>=0;return!t&&r&&("hex"===e||"hex6"===e||"hex3"===e||"hex4"===e||"hex8"===e||"name"===e)?// Special case for "transparent", all other non-alpha formats
// will return rgba when there is transparency.
"name"===e&&0===this._a?this.toName():this.toRgbString():("rgb"===e&&(n=this.toRgbString()),"prgb"===e&&(n=this.toPercentageRgbString()),("hex"===e||"hex6"===e)&&(n=this.toHexString()),"hex3"===e&&(n=this.toHexString(!0)),"hex4"===e&&(n=this.toHex8String(!0)),"hex8"===e&&(n=this.toHex8String()),"name"===e&&(n=this.toName()),"hsl"===e&&(n=this.toHslString()),"hsv"===e&&(n=this.toHsvString()),n||this.toHexString())},clone:function(){return o(this.toString())},_applyModification:function(e,t){var n=e.apply(null,[this].concat([].slice.call(t)));return this._r=n._r,this._g=n._g,this._b=n._b,this.setAlpha(n._a),this},lighten:function(){return this._applyModification(f,arguments)},brighten:function(){return this._applyModification(p,arguments)},darken:function(){return this._applyModification(m,arguments)},desaturate:function(){return this._applyModification(c,arguments)},saturate:function(){return this._applyModification(h,arguments)},greyscale:function(){return this._applyModification(d,arguments)},spin:function(){return this._applyModification(g,arguments)},_applyCombination:function(e,t){return e.apply(null,[this].concat([].slice.call(t)))},analogous:function(){return this._applyCombination(x,arguments)},complement:function(){return this._applyCombination(v,arguments)},monochromatic:function(){return this._applyCombination(b,arguments)},splitcomplement:function(){return this._applyCombination(y,arguments)},// Disabled until https://github.com/bgrins/TinyColor/issues/254
// polyad: function (number) {
//   return this._applyCombination(polyad, [number]);
// },
triad:function(){return this._applyCombination(_,[3])},tetrad:function(){return this._applyCombination(_,[4])}},// If input is an object, force 1 into "1.0" to handle ratios properly
// String input requires "1.0" as input, so 1 will be treated as 1
o.fromRatio=function(t,n){if("object"==e(t)){var r={};for(var i in t)t.hasOwnProperty(i)&&("a"===i?r[i]=t[i]:r[i]=P(t[i]));t=r}return o(t,n)},// `equals`
// Can be called with any tinycolor input
o.equals=function(e,t){return!!e&&!!t&&o(e).toRgbString()==o(t).toRgbString()},o.random=function(){return o.fromRatio({r:Math.random(),g:Math.random(),b:Math.random()})},// Utility Functions
// ---------------------
o.mix=function(e,t,n){n=0===n?0:n||50;var r=o(e).toRgb(),i=o(t).toRgb(),a=n/100;return o({r:(i.r-r.r)*a+r.r,g:(i.g-r.g)*a+r.g,b:(i.b-r.b)*a+r.b,a:(i.a-r.a)*a+r.a})},// Readability Functions
// ---------------------
// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)
// `contrast`
// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)
o.readability=function(e,t){var n=o(e),r=o(t);return(Math.max(n.getLuminance(),r.getLuminance())+.05)/(Math.min(n.getLuminance(),r.getLuminance())+.05)},// `isReadable`
// Ensure that foreground and background color combinations meet WCAG2 guidelines.
// The third argument is an optional Object.
//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';
//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.
// If the entire object is absent, isReadable defaults to {level:"AA",size:"small"}.
// *Example*
//    tinycolor.isReadable("#000", "#111") => false
//    tinycolor.isReadable("#000", "#111",{level:"AA",size:"large"}) => false
o.isReadable=function(e,t,n){var r,i,a,s,A,l=o.readability(e,t);switch(A=!1,(i=((r=(r=n)||{level:"AA",size:"small"}).level||"AA").toUpperCase(),a=(r.size||"small").toLowerCase(),"AA"!==i&&"AAA"!==i&&(i="AA"),"small"!==a&&"large"!==a&&(a="small"),s={level:i,size:a}).level+s.size){case"AAsmall":case"AAAlarge":A=l>=4.5;break;case"AAlarge":A=l>=3;break;case"AAAsmall":A=l>=7}return A},// `mostReadable`
// Given a base color and a list of possible foreground or background
// colors for that base, returns the most readable color.
// Optionally returns Black or White if the most readable color is unreadable.
// *Example*
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:false}).toHexString(); // "#112255"
//    tinycolor.mostReadable(tinycolor.mostReadable("#123", ["#124", "#125"],{includeFallbackColors:true}).toHexString();  // "#ffffff"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"large"}).toHexString(); // "#faf3f3"
//    tinycolor.mostReadable("#a8015a", ["#faf3f3"],{includeFallbackColors:true,level:"AAA",size:"small"}).toHexString(); // "#ffffff"
o.mostReadable=function(e,t,n){var r,i,a,s,A=null,l=0;i=(n=n||{}).includeFallbackColors,a=n.level,s=n.size;for(var u=0;u<t.length;u++)(r=o.readability(e,t[u]))>l&&(l=r,A=o(t[u]));return o.isReadable(e,A,{level:a,size:s})||!i?A:(n.includeFallbackColors=!1,o.mostReadable(e,["#fff","#000"],n))};// Big List of Colors
// ------------------
// <https://www.w3.org/TR/css-color-4/#named-colors>
var M=o.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},w=o.hexNames=// Utilities
// ---------
// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`
function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[e[n]]=n);return t}(M);// Return a valid alpha value [0,1] with all invalid values being set to 1
function E(e){return(isNaN(e=parseFloat(e))||e<0||e>1)&&(e=1),e}// Take input from [0, n] and return it as [0, 1]
function S(e,t){"string"==typeof(n=e)&&-1!=n.indexOf(".")&&1===parseFloat(n)&&(e="100%");var n,r,i="string"==typeof(r=e)&&-1!=r.indexOf("%");return(// Handle floating point rounding errors
(e=Math.min(t,Math.max(0,parseFloat(e))),i&&(e=parseInt(e*t,10)/100),1e-6>Math.abs(e-t))?1:e%t/parseFloat(t))}// Force a number between 0 and 1
function T(e){return Math.min(1,Math.max(0,e))}// Parse a base-16 hex value into a base-10 integer
function C(e){return parseInt(e,16)}// Force a hex value to have 2 characters
function R(e){return 1==e.length?"0"+e:""+e}// Replace a decimal with it's percentage value
function P(e){return e<=1&&(e=100*e+"%"),e}// Converts a decimal to a hex value
function L(e){return Math.round(255*parseFloat(e)).toString(16)}var D=(n="[\\s|\\(]+("+(t="(?:[-\\+]?\\d*\\.\\d+%?)|(?:[-\\+]?\\d+%?)")+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?",r="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?",{CSS_UNIT:new RegExp(t),rgb:RegExp("rgb"+n),rgba:RegExp("rgba"+r),hsl:RegExp("hsl"+n),hsla:RegExp("hsla"+r),hsv:RegExp("hsv"+n),hsva:RegExp("hsva"+r),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/});// `isValidCSSUnit`
// Take in a single string / number and check to see if it looks like a CSS unit
// (see `matchers` above for definition).
function O(e){return!!D.CSS_UNIT.exec(e)}return o}();var AT=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=!(arguments.length>2)||void 0===arguments[2]||arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=(t instanceof Array?t.length?t:[void 0]:[t]).map(function(e){return{keyAccessor:e,isProp:!(e instanceof Function)}}),a=e.reduce(function(e,t){var r=e,a=t;return i.forEach(function(e,t){var o,s=e.keyAccessor;if(e.isProp){var A=a,l=A[s],u=function(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}(A,[s].map(AS));o=l,a=u}else o=s(a,t);t+1<i.length?(r.hasOwnProperty(o)||(r[o]={}),r=r[o]):n?(r.hasOwnProperty(o)||(r[o]=[]),r[o].push(a)):r[o]=a}),e},{});n instanceof Function&&function e(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;r===i.length?Object.keys(t).forEach(function(e){return t[e]=n(t[e])}):Object.values(t).forEach(function(t){return e(t,r+1)})}(a);var o=a;return r&&(// flatten into array
o=[],function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];n.length===i.length?o.push({keys:n,vals:t}):Object.entries(t).forEach(function(t){var r=function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a,o,s=[],A=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;A=!1}else for(;!(A=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);A=!0);}catch(e){l=!0,i=e}finally{try{if(!A&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(l)throw i}}return s}}(t,2)||Aw(t,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),i=r[0];return e(r[1],[].concat(function(e){if(Array.isArray(e))return AE(e)}(n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(n)||Aw(n)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[i]))})}(a),t instanceof Array&&0===t.length&&1===o.length&&(o[0].keys=[])),o};function AC(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function AR(e,t,n){var r;return(t="symbol"==typeof(r=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"))?r:String(r))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function AP(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a,o,s=[],A=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;A=!1}else for(;!(A=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);A=!0);}catch(e){l=!0,i=e}finally{try{if(!A&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(l)throw i}}return s}}(e,t)||AD(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function AL(e){return function(e){if(Array.isArray(e))return AO(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||AD(e)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function AD(e,t){if(e){if("string"==typeof e)return AO(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return AO(e,t)}}function AO(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var AI=["createObj","updateObj","exitObj","objBindAttr","dataBindAttr"],Aq={};Aq=function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){var r=n(1),i=function(){function e(e,t,n){void 0===e&&(e=NaN),void 0===t&&(t=NaN),void 0===n&&(n=!1),this._minFPS=t,this._maxFPS=e,this._timeScale=1,this._currentTick=0,this._currentTime=0,this._tickDeltaTime=0,this._isRunning=!1,this._maxInterval=isNaN(this._minFPS)?NaN:1e3/this._minFPS,this._minInterval=isNaN(this._maxFPS)?NaN:1e3/this._maxFPS,this._onResume=new r.default,this._onPause=new r.default,this._onTick=new r.default,this._onTickOncePerFrame=new r.default,n||this.resume()}return e.prototype.updateOnce=function(e){e(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick)},e.prototype.resume=function(){this._isRunning||(this._isRunning=!0,this._lastTimeUpdated=this.getTimer(),this._onResume.dispatch(),this.animateOnce())},e.prototype.pause=function(){this._isRunning&&(this._isRunning=!1,this._onPause.dispatch(),window.cancelAnimationFrame(this._animationFrameHandle))},e.prototype.dispose=function(){this.pause(),this._onResume.removeAll(),this._onPause.removeAll(),this._onTick.removeAll()},Object.defineProperty(e.prototype,"currentTick",{get:function(){return this._currentTick},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentTimeSeconds",{get:function(){return this._currentTime/1e3},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"tickDeltaTimeSeconds",{get:function(){return this._tickDeltaTime/1e3},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"timeScale",{get:function(){return this._timeScale},set:function(e){this._timeScale!==e&&(this._timeScale=e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onResume",{get:function(){return this._onResume},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onPause",{get:function(){return this._onPause},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onTick",{get:function(){return this._onTick},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"onTickOncePerFrame",{get:function(){return this._onTickOncePerFrame},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isRunning",{get:function(){return this._isRunning},enumerable:!0,configurable:!0}),e.prototype.animateOnce=function(){var e=this;this._animationFrameHandle=window.requestAnimationFrame(function(){return e.onFrame()})},e.prototype.onFrame=function(){if(this._now=this.getTimer(),this._frameDeltaTime=this._now-this._lastTimeUpdated,isNaN(this._minInterval)||this._frameDeltaTime>=this._minInterval){if(isNaN(this._maxInterval))this.update(this._frameDeltaTime*this._timeScale,!0),this._lastTimeUpdated=this._now;else for(this._interval=Math.min(this._frameDeltaTime,this._maxInterval);this._now>=this._lastTimeUpdated+this._interval;)this.update(this._interval*this._timeScale,this._now<=this._lastTimeUpdated+2*this._maxInterval),this._lastTimeUpdated+=this._interval}this._isRunning&&this.animateOnce()},e.prototype.update=function(e,t){void 0===t&&(t=!0),this._currentTick++,this._currentTime+=e,this._tickDeltaTime=e,this._onTick.dispatch(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick),t&&this._onTickOncePerFrame.dispatch(this.currentTimeSeconds,this.tickDeltaTimeSeconds,this.currentTick)},e.prototype.getTimer=function(){return Date.now()},e}();Object.defineProperty(t,"__esModule",{value:!0}),t.default=i},function(e,t,n){e.exports=function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){var n=function(){function e(){this.functions=[]}return e.prototype.add=function(e){return -1===this.functions.indexOf(e)&&(this.functions.push(e),!0)},e.prototype.remove=function(e){var t=this.functions.indexOf(e);return t>-1&&(this.functions.splice(t,1),!0)},e.prototype.removeAll=function(){return this.functions.length>0&&(this.functions.length=0,!0)},e.prototype.dispatch=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.functions.concat().forEach(function(t){t.apply(void 0,e)})},Object.defineProperty(e.prototype,"numItems",{get:function(){return this.functions.length},enumerable:!0,configurable:!0}),e}();Object.defineProperty(t,"__esModule",{value:!0}),t.default=n}])}]);const AU=Math.sqrt(50),AN=Math.sqrt(10),AB=Math.sqrt(2);function Ak(e,t,n){let r,i,a;let o=(t-e)/Math.max(0,n),s=Math.floor(Math.log10(o)),A=o/Math.pow(10,s),l=A>=AU?10:A>=AN?5:A>=AB?2:1;return(s<0?(r=Math.round(e*(a=Math.pow(10,-s)/l)),i=Math.round(t*a),r/a<e&&++r,i/a>t&&--i,a=-a):(r=Math.round(e/(a=Math.pow(10,s)*l)),i=Math.round(t/a),r*a<e&&++r,i*a>t&&--i),i<r&&.5<=n&&n<2)?Ak(e,t,2*n):[r,i,a]}function AF(e,t,n){return Ak(e=+e,t=+t,n=+n)[2]}function Az(e,t){return null==e||null==t?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function AG(e,t){return null==e||null==t?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function AH(e){let t,n,r;function i(e,r,i=0,a=e.length){if(i<a){if(0!==t(r,r))return a;do{let t=i+a>>>1;0>n(e[t],r)?i=t+1:a=t}while(i<a)}return i}return 2!==e.length?(t=Az,n=(t,n)=>Az(e(t),n),r=(t,n)=>e(t)-n):(t=e===Az||e===AG?e:AV,n=e,r=e),{left:i,center:function(e,t,n=0,a=e.length){let o=i(e,t,n,a-1);return o>n&&r(e[o-1],t)>-r(e[o],t)?o-1:o},right:function(e,r,i=0,a=e.length){if(i<a){if(0!==t(r,r))return a;do{let t=i+a>>>1;0>=n(e[t],r)?i=t+1:a=t}while(i<a)}return i}}}function AV(){return 0}const Aj=AH(Az),AW=Aj.right;Aj.left,AH(function(e){return null===e?NaN:+e}).center;var Ab=(I("bYoiY"),I("bYoiY"));function AX(e,t,n,r,i){var a=e*e,o=a*e;return((1-3*e+3*a-o)*t+(4-6*a+3*o)*n+(1+3*e+3*a-3*o)*r+o*i)/6}var AQ=e=>()=>e;function AY(e,t){var n=t-e;return n?function(t){return e+t*n}:AQ(isNaN(e)?t:e)}var AZ=function e(t){var n,r=1==(n=+(n=t))?AY:function(e,t){var r,i,a;return t-e?(r=e,i=t,r=Math.pow(r,a=n),i=Math.pow(i,a)-r,a=1/a,function(e){return Math.pow(r+e*i,a)}):AQ(isNaN(e)?t:e)};function i(e,t){var n=r((e=(0,Ab.rgb)(e)).r,(t=(0,Ab.rgb)(t)).r),i=r(e.g,t.g),a=r(e.b,t.b),o=AY(e.opacity,t.opacity);return function(t){return e.r=n(t),e.g=i(t),e.b=a(t),e.opacity=o(t),e+""}}return i.gamma=e,i}(1);function AK(e){return function(t){var n,r,i=t.length,a=Array(i),o=Array(i),s=Array(i);for(n=0;n<i;++n)r=(0,Ab.rgb)(t[n]),a[n]=r.r||0,o[n]=r.g||0,s[n]=r.b||0;return a=e(a),o=e(o),s=e(s),r.opacity=1,function(e){return r.r=a(e),r.g=o(e),r.b=s(e),r+""}}}function AJ(e,t){t||(t=[]);var n,r=e?Math.min(t.length,e.length):0,i=t.slice();return function(a){for(n=0;n<r;++n)i[n]=e[n]*(1-a)+t[n]*a;return i}}function A$(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function A0(e,t){return(A$(t)?AJ:A1)(e,t)}function A1(e,t){var n,r=t?t.length:0,i=e?Math.min(r,e.length):0,a=Array(i),o=Array(r);for(n=0;n<i;++n)a[n]=A5(e[n],t[n]);for(;n<r;++n)o[n]=t[n];return function(e){for(n=0;n<i;++n)o[n]=a[n](e);return o}}function A2(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}AK(function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),i=e[r],a=e[r+1],o=r>0?e[r-1]:2*i-a,s=r<t-1?e[r+2]:2*a-i;return AX((n-r/t)*t,o,i,a,s)}}),AK(function(e){var t=e.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*t),i=e[(r+t-1)%t],a=e[r%t],o=e[(r+1)%t],s=e[(r+2)%t];return AX((n-r/t)*t,i,a,o,s)}});var A3=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,A4=RegExp(A3.source,"g");function A5(e,t){var n,r=typeof t;return null==t||"boolean"===r?AQ(t):("number"===r?A2:"string"===r?(n=(0,Ab.default)(t))?(t=n,AZ):function(e,t){var n,r,i,a,o,s=A3.lastIndex=A4.lastIndex=0,A=-1,l=[],u=[];// number interpolators
// Interpolate pairs of numbers in a & b.
for(// Coerce inputs to strings.
e+="",t+="";(i=A3.exec(e))&&(a=A4.exec(t));)(o=a.index)>s&&(o=t.slice(s,o),l[A]?l[A]+=o:l[++A]=o),(i=i[0])===(a=a[0])?l[A]?l[A]+=a:l[++A]=a:(l[++A]=null,u.push({i:A,x:A2(i,a)})),s=A4.lastIndex;// Special optimization for only a single match.
// Otherwise, interpolate each of the numbers and rejoin the string.
return s<t.length&&(o=t.slice(s),l[A]?l[A]+=o:l[++A]=o),l.length<2?u[0]?(n=u[0].x,function(e){return n(e)+""}):(r=t,function(){return r}):(t=u.length,function(e){for(var n,r=0;r<t;++r)l[(n=u[r]).i]=n.x(e);return l.join("")})}:t instanceof(0,Ab.default)?AZ:t instanceof Date?function(e,t){var n=new Date;return e=+e,t=+t,function(r){return n.setTime(e*(1-r)+t*r),n}}:A$(t)?AJ:Array.isArray(t)?A1:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?function(e,t){var n,r={},i={};for(n in(null===e||"object"!=typeof e)&&(e={}),(null===t||"object"!=typeof t)&&(t={}),t)n in e?r[n]=A5(e[n],t[n]):i[n]=t[n];return function(e){for(n in r)i[n]=r[n](e);return i}}:A2)(e,t)}function A6(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}function A8(e){return+e}var A7=[0,1];function A9(e){return e}function le(e,t){var n;return(t-=e=+e)?function(n){return(n-e)/t}:(n=isNaN(t)?NaN:.5,function(){return n})}// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function lt(e,t,n){var r=e[0],i=e[1],a=t[0],o=t[1];return i<r?(r=le(i,r),a=n(o,a)):(r=le(r,i),a=n(a,o)),function(e){return a(r(e))}}function ln(e,t,n){var r=Math.min(e.length,t.length)-1,i=Array(r),a=Array(r),o=-1;for(e[r]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++o<r;)i[o]=le(e[o],e[o+1]),a[o]=n(t[o],t[o+1]);return function(t){var n=AW(e,t,1,r)-1;return a[n](i[n](t))}}function lr(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}function li(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;// NaN, ±Infinity
var n,r=e.slice(0,n);// The string returned by toExponential either has the form \d\.\d+e[-+]\d+
// (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]}function la(e){return(e=li(Math.abs(e)))?e[1]:NaN}// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var lo=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function ls(e){var t;if(!(t=lo.exec(e)))throw Error("invalid format: "+e);return new lA({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}function lA(e){this.fill=void 0===e.fill?" ":e.fill+"",this.align=void 0===e.align?">":e.align+"",this.sign=void 0===e.sign?"-":e.sign+"",this.symbol=void 0===e.symbol?"":e.symbol+"",this.zero=!!e.zero,this.width=void 0===e.width?void 0:+e.width,this.comma=!!e.comma,this.precision=void 0===e.precision?void 0:+e.precision,this.trim=!!e.trim,this.type=void 0===e.type?"":e.type+""}function ll(e,t){var n=li(e,t);if(!n)return e+"";var r=n[0],i=n[1];return i<0?"0."+Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+Array(i-r.length+2).join("0")}ls.prototype=lA.prototype,lA.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var lu={"%":(e,t)=>(100*e).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+"",d:function(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)},e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>ll(100*e,t),r:ll,s:function(e,t){var n=li(e,t);if(!n)return e+"";var r=n[0],i=n[1],a=i-(lF=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return a===o?r:a>o?r+Array(a-o+1).join("0"):a>0?r.slice(0,a)+"."+r.slice(a):"0."+Array(1-a).join("0")+li(e,Math.max(0,t+a-1))[0];// less than 1y!
},X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function lc(e){return e}var lh=Array.prototype.map,ld=["y","z","a","f","p","n","\xb5","m","","k","M","G","T","P","E","Z","Y"];function lf(){var e,t=(function(){var e,t,n,r,i,a,o=A7,s=A7,A=A5,l=A9;function u(){var e,t,n,A=Math.min(o.length,s.length);return l!==A9&&(e=o[0],t=o[A-1],e>t&&(n=e,e=t,t=n),l=function(n){return Math.max(e,Math.min(t,n))}),r=A>2?ln:lt,i=a=null,c}function c(t){return null==t||isNaN(t=+t)?n:(i||(i=r(o.map(e),s,A)))(e(l(t)))}return c.invert=function(n){return l(t((a||(a=r(s,o.map(e),A2)))(n)))},c.domain=function(e){return arguments.length?(o=Array.from(e,A8),u()):o.slice()},c.range=function(e){return arguments.length?(s=Array.from(e),u()):s.slice()},c.rangeRound=function(e){return s=Array.from(e),A=A6,u()},c.clamp=function(e){return arguments.length?(l=!!e||A9,u()):l!==A9},c.interpolate=function(e){return arguments.length?(A=e,u()):A},c.unknown=function(e){return arguments.length?(n=e,c):n},function(n,r){return e=n,t=r,u()}})()(A9,A9);return t.copy=function(){return lf().domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())},lr.apply(t,arguments),e=t.domain,t.ticks=function(t){var n=e();return function(e,t,n){if(t=+t,e=+e,!((n=+n)>0))return[];if(e===t)return[e];let r=t<e,[i,a,o]=r?Ak(t,e,n):Ak(e,t,n);if(!(a>=i))return[];let s=a-i+1,A=Array(s);if(r){if(o<0)for(let e=0;e<s;++e)A[e]=-((a-e)/o);else for(let e=0;e<s;++e)A[e]=(a-e)*o}else if(o<0)for(let e=0;e<s;++e)A[e]=-((i+e)/o);else for(let e=0;e<s;++e)A[e]=(i+e)*o;return A}(n[0],n[n.length-1],null==t?10:t)},t.tickFormat=function(t,n){var r=e();return function(e,t,n,r){var i,a,o=function(e,t,n){t=+t,e=+e,n=+n;let r=t<e,i=r?AF(t,e,n):AF(e,t,n);return(r?-1:1)*(i<0?-(1/i):i)}(e,t,n);switch((r=ls(null==r?",f":r)).type){case"s":var s=Math.max(Math.abs(e),Math.abs(t));return null!=r.precision||isNaN(a=Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(la(s)/3)))-la(Math.abs(o))))||(r.precision=a),lH(r,s);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(a=Math.max(0,la(Math.abs(Math.max(Math.abs(e),Math.abs(t)))-(i=Math.abs(i=o)))-la(i))+1)||(r.precision=a-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(a=Math.max(0,-la(Math.abs(o))))||(r.precision=a-("%"===r.type)*2)}return lG(r)}(r[0],r[r.length-1],null==t?10:t,n)},t.nice=function(n){null==n&&(n=10);var r,i,a=e(),o=0,s=a.length-1,A=a[o],l=a[s],u=10;for(l<A&&(i=A,A=l,l=i,i=o,o=s,s=i);u-- >0;){if((i=AF(A,l,n))===r)return a[o]=A,a[s]=l,e(a);if(i>0)A=Math.floor(A/i)*i,l=Math.ceil(l/i)*i;else if(i<0)A=Math.ceil(A*i)/i,l=Math.floor(l*i)/i;else break;r=i}return t},t}function lp(e,t){let n,r;if(void 0===t)for(let t of e)null!=t&&(void 0===n?t>=t&&(n=r=t):(n>t&&(n=t),r<t&&(r=t)));else{let i=-1;for(let a of e)null!=(a=t(a,++i,e))&&(void 0===n?a>=a&&(n=r=a):(n>a&&(n=a),r<a&&(r=a)))}return[n,r]}function lm(e){return Array.from(function*(e){for(let t of e)yield*t}(e))}function lg(e,t,n,r,i){let a,o,s,A;let l=t[0],u=r[0],c=0,h=0;u>l==u>-l?(a=l,l=t[++c]):(a=u,u=r[++h]);let d=0;if(c<e&&h<n)for(u>l==u>-l?(o=l+a,s=a-(o-l),l=t[++c]):(o=u+a,s=a-(o-u),u=r[++h]),a=o,0!==s&&(i[d++]=s);c<e&&h<n;)u>l==u>-l?(A=(o=a+l)-a,s=a-(o-A)+(l-A),l=t[++c]):(A=(o=a+u)-a,s=a-(o-A)+(u-A),u=r[++h]),a=o,0!==s&&(i[d++]=s);for(;c<e;)A=(o=a+l)-a,s=a-(o-A)+(l-A),l=t[++c],a=o,0!==s&&(i[d++]=s);for(;h<n;)A=(o=a+u)-a,s=a-(o-A)+(u-A),u=r[++h],a=o,0!==s&&(i[d++]=s);return(0!==a||0===d)&&(i[d++]=a),d}function lv(e){return new Float64Array(e)}lG=(lz=function(e){var t,n,r,i=void 0===e.grouping||void 0===e.thousands?lc:(t=lh.call(e.grouping,Number),n=e.thousands+"",function(e,r){for(var i=e.length,a=[],o=0,s=t[0],A=0;i>0&&s>0&&(A+s+1>r&&(s=Math.max(1,r-A)),a.push(e.substring(i-=s,i+s)),!((A+=s+1)>r));)s=t[o=(o+1)%t.length];return a.reverse().join(n)}),a=void 0===e.currency?"":e.currency[0]+"",o=void 0===e.currency?"":e.currency[1]+"",s=void 0===e.decimal?".":e.decimal+"",A=void 0===e.numerals?lc:(r=lh.call(e.numerals,String),function(e){return e.replace(/[0-9]/g,function(e){return r[+e]})}),l=void 0===e.percent?"%":e.percent+"",u=void 0===e.minus?"−":e.minus+"",c=void 0===e.nan?"NaN":e.nan+"";function h(e){var t=(e=ls(e)).fill,n=e.align,r=e.sign,h=e.symbol,d=e.zero,f=e.width,p=e.comma,m=e.precision,g=e.trim,v=e.type;"n"===v?(p=!0,v="g"):lu[v]||(void 0===m&&(m=12),g=!0,v="g"),(d||"0"===t&&"="===n)&&(d=!0,t="0",n="=");// Compute the prefix and suffix.
// For SI-prefix, the suffix is lazily computed.
var _="$"===h?a:"#"===h&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",y="$"===h?o:/[%p]/.test(v)?l:"",x=lu[v],b=/[defgprs%]/.test(v);function M(e){var a,o,l,h=_,M=y;if("c"===v)M=x(e)+M,e="";else{// Determine the sign. -0 is not less than 0, but 1 / -0 is!
var w=(e=+e)<0||1/e<0;// Break the formatted value into the integer “value” part that can be
// grouped, and fractional or exponential “suffix” part that is not.
if(// Perform the initial formatting.
e=isNaN(e)?c:x(Math.abs(e),m),g&&(e=// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function(e){i:for(var t,n=e.length,r=1,i=-1;r<n;++r)switch(e[r]){case".":i=t=r;break;case"0":0===i&&(i=r),t=r;break;default:if(!+e[r])break i;i>0&&(i=0)}return i>0?e.slice(0,i)+e.slice(t+1):e}(e)),w&&0==+e&&"+"!==r&&(w=!1),// Compute the prefix and suffix.
h=(w?"("===r?r:u:"-"===r||"("===r?"":r)+h,M=("s"===v?ld[8+lF/3]:"")+M+(w&&"("===r?")":""),b){for(a=-1,o=e.length;++a<o;)if(48>(l=e.charCodeAt(a))||l>57){M=(46===l?s+e.slice(a+1):e.slice(a))+M,e=e.slice(0,a);break}}}p&&!d&&(e=i(e,1/0));// Compute the padding.
var E=h.length+e.length+M.length,S=E<f?Array(f-E+1).join(t):"";// Reconstruct the final output based on the desired alignment.
switch(p&&d&&(e=i(S+e,S.length?f-M.length:1/0),S=""),n){case"<":e=h+e+M+S;break;case"=":e=h+S+e+M;break;case"^":e=S.slice(0,E=S.length>>1)+h+e+M+S.slice(E);break;default:e=S+h+e+M}return A(e)}return(// Set the default precision if not specified,
// or clamp the specified precision to the supported range.
// For significant precision, it must be in [1, 21].
// For fixed precision, it must be in [0, 20].
m=void 0===m?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m)),M.toString=function(){return e+""},M)}return{format:h,formatPrefix:function(e,t){var n=h(((e=ls(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(la(t)/3))),i=Math.pow(10,-r),a=ld[8+r/3];return function(e){return n(i*e)+a}}}}({thousands:",",grouping:[3],currency:["$",""]})).format,lH=lz.formatPrefix;const l_=lv(4),ly=lv(8),lx=lv(12),lb=lv(16),lM=lv(4);function lw(e,t,n,r,i,a){let o=(t-a)*(n-i),s=(e-i)*(r-a),A=o-s,l=Math.abs(o+s);return Math.abs(A)>=33306690738754716e-32*l?A:-function(e,t,n,r,i,a,o){let s,A,l,u,c,h,d,f,p,m,g,v,_,y,x,b,M,w;let E=e-i,S=n-i,T=t-a,C=r-a;y=E*C,d=(h=134217729*E)-(h-E),f=E-d,p=(h=134217729*C)-(h-C),x=f*(m=C-p)-(y-d*p-f*p-d*m),b=T*S,d=(h=134217729*T)-(h-T),f=T-d,p=(h=134217729*S)-(h-S),g=x-(M=f*(m=S-p)-(b-d*p-f*p-d*m)),c=x-g,l_[0]=x-(g+c)+(c-M),c=(v=y+g)-y,g=(_=y-(v-c)+(g-c))-b,c=_-g,l_[1]=_-(g+c)+(c-b),c=(w=v+g)-v,l_[2]=v-(w-c)+(g-c),l_[3]=w;let R=function(e,t){let n=t[0];for(let e=1;e<4;e++)n+=t[e];return n}(0,l_),P=22204460492503146e-32*o;if(R>=P||-R>=P||(c=e-E,s=e-(E+c)+(c-i),c=n-S,l=n-(S+c)+(c-i),c=t-T,A=t-(T+c)+(c-a),c=r-C,u=r-(C+c)+(c-a),0===s&&0===A&&0===l&&0===u)||(P=11093356479670487e-47*o+33306690738754706e-32*Math.abs(R),(R+=E*u+C*s-(T*l+S*A))>=P||-R>=P))return R;y=s*C,d=(h=134217729*s)-(h-s),f=s-d,p=(h=134217729*C)-(h-C),x=f*(m=C-p)-(y-d*p-f*p-d*m),b=A*S,d=(h=134217729*A)-(h-A),f=A-d,p=(h=134217729*S)-(h-S),g=x-(M=f*(m=S-p)-(b-d*p-f*p-d*m)),c=x-g,lM[0]=x-(g+c)+(c-M),c=(v=y+g)-y,g=(_=y-(v-c)+(g-c))-b,c=_-g,lM[1]=_-(g+c)+(c-b),c=(w=v+g)-v,lM[2]=v-(w-c)+(g-c),lM[3]=w;let L=lg(4,l_,4,lM,ly);y=E*u,d=(h=134217729*E)-(h-E),f=E-d,p=(h=134217729*u)-(h-u),x=f*(m=u-p)-(y-d*p-f*p-d*m),b=T*l,d=(h=134217729*T)-(h-T),f=T-d,p=(h=134217729*l)-(h-l),g=x-(M=f*(m=l-p)-(b-d*p-f*p-d*m)),c=x-g,lM[0]=x-(g+c)+(c-M),c=(v=y+g)-y,g=(_=y-(v-c)+(g-c))-b,c=_-g,lM[1]=_-(g+c)+(c-b),c=(w=v+g)-v,lM[2]=v-(w-c)+(g-c),lM[3]=w;let D=lg(L,ly,4,lM,lx);y=s*u,d=(h=134217729*s)-(h-s),f=s-d,p=(h=134217729*u)-(h-u),x=f*(m=u-p)-(y-d*p-f*p-d*m),b=A*l,d=(h=134217729*A)-(h-A),f=A-d,p=(h=134217729*l)-(h-l),g=x-(M=f*(m=l-p)-(b-d*p-f*p-d*m)),c=x-g,lM[0]=x-(g+c)+(c-M),c=(v=y+g)-y,g=(_=y-(v-c)+(g-c))-b,c=_-g,lM[1]=_-(g+c)+(c-b),c=(w=v+g)-v,lM[2]=v-(w-c)+(g-c),lM[3]=w;let O=lg(D,lx,4,lM,lb);return lb[O-1]}(e,t,n,r,i,a,l)}lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(8),lv(8),lv(8),lv(4),lv(8),lv(8),lv(8),lv(12),lv(192),lv(192),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(8),lv(8),lv(8),lv(8),lv(8),lv(8),lv(8),lv(8),lv(8),lv(4),lv(4),lv(4),lv(8),lv(16),lv(16),lv(16),lv(32),lv(32),lv(48),lv(64),lv(1152),lv(1152),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(4),lv(24),lv(24),lv(24),lv(24),lv(24),lv(24),lv(24),lv(24),lv(24),lv(24),lv(1152),lv(1152),lv(1152),lv(1152),lv(1152),lv(2304),lv(2304),lv(3456),lv(5760),lv(8),lv(8),lv(8),lv(16),lv(24),lv(48),lv(48),lv(96),lv(192),lv(384),lv(384),lv(384),lv(768),lv(96),lv(96),lv(96),lv(1152);const lE=new Uint32Array(512);class lS{static from(e,t=lP,n=lL){let r=e.length,i=new Float64Array(2*r);for(let a=0;a<r;a++){let r=e[a];i[2*a]=t(r),i[2*a+1]=n(r)}return new lS(i)}constructor(e){let t=e.length>>1;if(t>0&&"number"!=typeof e[0])throw Error("Expected coords to contain numbers.");this.coords=e;// arrays that will store the triangulation graph
let n=Math.max(2*t-5,0);this._triangles=new Uint32Array(3*n),this._halfedges=new Int32Array(3*n),// temporary arrays for tracking the edges of the advancing convex hull
this._hashSize=Math.ceil(Math.sqrt(t)),this._hullPrev=new Uint32Array(t),this._hullNext=new Uint32Array(t),this._hullTri=new Uint32Array(t),this._hullHash=new Int32Array(this._hashSize).fill(-1),// temporary arrays for sorting points
this._ids=new Uint32Array(t),this._dists=new Float64Array(t),this.update()}update(){let e,t,n;let{coords:r,_hullPrev:i,_hullNext:a,_hullTri:o,_hullHash:s}=this,A=r.length>>1,l=1/0,u=1/0,c=-1/0,h=-1/0;for(let e=0;e<A;e++){let t=r[2*e],n=r[2*e+1];t<l&&(l=t),n<u&&(u=n),t>c&&(c=t),n>h&&(h=n),this._ids[e]=e}let d=(l+c)/2,f=(u+h)/2,p=1/0;// pick a seed point close to the center
for(let t=0;t<A;t++){let n=lT(d,f,r[2*t],r[2*t+1]);n<p&&(e=t,p=n)}let m=r[2*e],g=r[2*e+1];p=1/0;// find the point closest to the seed
for(let n=0;n<A;n++){if(n===e)continue;let i=lT(m,g,r[2*n],r[2*n+1]);i<p&&i>0&&(t=n,p=i)}let v=r[2*t],_=r[2*t+1],y=1/0;// find the third point which forms the smallest circumcircle with the first two
for(let i=0;i<A;i++){if(i===e||i===t)continue;let a=function(e,t,n,r,i,a){let o=n-e,s=r-t,A=i-e,l=a-t,u=o*o+s*s,c=A*A+l*l,h=.5/(o*l-s*A),d=(l*u-s*c)*h,f=(o*c-A*u)*h;return d*d+f*f}(m,g,v,_,r[2*i],r[2*i+1]);a<y&&(n=i,y=a)}let x=r[2*n],b=r[2*n+1];if(y===1/0){// order collinear points by dx (or dy if all x are identical)
// and return the list as a hull
for(let e=0;e<A;e++)this._dists[e]=r[2*e]-r[0]||r[2*e+1]-r[1];lC(this._ids,this._dists,0,A-1);let e=new Uint32Array(A),t=0;for(let n=0,r=-1/0;n<A;n++){let i=this._ids[n];this._dists[i]>r&&(e[t++]=i,r=this._dists[i])}this.hull=e.subarray(0,t),this.triangles=new Uint32Array(0),this.halfedges=new Uint32Array(0);return}// swap the order of the seed points for counter-clockwise orientation
if(0>lw(m,g,v,_,x,b)){let e=t,r=v,i=_;t=n,v=x,_=b,n=e,x=r,b=i}let M=function(e,t,n,r,i,a){let o=n-e,s=r-t,A=i-e,l=a-t,u=o*o+s*s,c=A*A+l*l,h=.5/(o*l-s*A);return{x:e+(l*u-s*c)*h,y:t+(o*c-A*u)*h}}(m,g,v,_,x,b);this._cx=M.x,this._cy=M.y;for(let e=0;e<A;e++)this._dists[e]=lT(r[2*e],r[2*e+1],M.x,M.y);// sort the points by distance from the seed triangle circumcenter
lC(this._ids,this._dists,0,A-1),// set up the seed triangle as the starting hull
this._hullStart=e;let w=3;a[e]=i[n]=t,a[t]=i[e]=n,a[n]=i[t]=e,o[e]=0,o[t]=1,o[n]=2,s.fill(-1),s[this._hashKey(m,g)]=e,s[this._hashKey(v,_)]=t,s[this._hashKey(x,b)]=n,this.trianglesLen=0,this._addTriangle(e,t,n,-1,-1,-1);for(let A=0,l,u;A<this._ids.length;A++){let c=this._ids[A],h=r[2*c],d=r[2*c+1];// skip near-duplicate points
if(A>0&&2220446049250313e-31>=Math.abs(h-l)&&2220446049250313e-31>=Math.abs(d-u)||(l=h,u=d,c===e||c===t||c===n))continue;// find a visible edge on the convex hull using edge hash
let f=0;for(let e=0,t=this._hashKey(h,d);e<this._hashSize&&(-1===(f=s[(t+e)%this._hashSize])||f===a[f]);e++);let p=f=i[f],m;for(;m=a[p],lw(h,d,r[2*p],r[2*p+1],r[2*m],r[2*m+1])>=0;)if((p=m)===f){p=-1;break}if(-1===p)continue;// likely a near-duplicate point; skip it
// add the first triangle from the point
let g=this._addTriangle(p,c,a[p],-1,-1,o[p]);// recursively flip triangles from the point until they satisfy the Delaunay condition
o[c]=this._legalize(g+2),o[p]=g,w++;// walk forward through the hull, adding more triangles and flipping recursively
let v=a[p];for(;m=a[v],0>lw(h,d,r[2*v],r[2*v+1],r[2*m],r[2*m+1]);)g=this._addTriangle(v,c,m,o[c],-1,o[v]),o[c]=this._legalize(g+2),a[v]=v,w--,v=m;// walk backward from the other side, adding more triangles and flipping
if(p===f)for(;0>lw(h,d,r[2*(m=i[p])],r[2*m+1],r[2*p],r[2*p+1]);)g=this._addTriangle(m,c,p,-1,o[p],o[m]),this._legalize(g+2),o[m]=g,a[p]=p,w--,p=m;// update the hull indices
this._hullStart=i[c]=p,a[p]=i[v]=c,a[c]=v,// save the two new edges in the hash table
s[this._hashKey(h,d)]=c,s[this._hashKey(r[2*p],r[2*p+1])]=p}this.hull=new Uint32Array(w);for(let e=0,t=this._hullStart;e<w;e++)this.hull[e]=t,t=a[t];// trim typed triangle mesh arrays
this.triangles=this._triangles.subarray(0,this.trianglesLen),this.halfedges=this._halfedges.subarray(0,this.trianglesLen)}_hashKey(e,t){return Math.floor(// monotonically increases with real angle, but doesn't need expensive trigonometry
function(e,t){let n=e/(Math.abs(e)+Math.abs(t));return(t>0?3-n:1+n)/4;// [0..1]
}(e-this._cx,t-this._cy)*this._hashSize)%this._hashSize}_legalize(e){let{_triangles:t,_halfedges:n,coords:r}=this,i=0,a=0;// recursion eliminated with a fixed-size stack
for(;;){let o=n[e],s=e-e%3;if(a=s+(e+2)%3,-1===o){if(0===i)break;e=lE[--i];continue}let A=o-o%3,l=s+(e+1)%3,u=A+(o+2)%3,c=t[a],h=t[e],d=t[l],f=t[u],p=function(e,t,n,r,i,a,o,s){let A=e-o,l=t-s,u=n-o,c=r-s,h=i-o,d=a-s,f=u*u+c*c,p=h*h+d*d;return A*(c*p-f*d)-l*(u*p-f*h)+(A*A+l*l)*(u*d-c*h)<0}(r[2*c],r[2*c+1],r[2*h],r[2*h+1],r[2*d],r[2*d+1],r[2*f],r[2*f+1]);if(p){t[e]=f,t[o]=c;let r=n[u];// edge swapped on the other side of the hull (rare); fix the halfedge reference
if(-1===r){let t=this._hullStart;do{if(this._hullTri[t]===u){this._hullTri[t]=e;break}t=this._hullPrev[t]}while(t!==this._hullStart)}this._link(e,r),this._link(o,n[a]),this._link(a,u);let s=A+(o+1)%3;i<lE.length&&(lE[i++]=s)}else{if(0===i)break;e=lE[--i]}}return a}_link(e,t){this._halfedges[e]=t,-1!==t&&(this._halfedges[t]=e)}// add a new triangle given vertex indices and adjacent half-edge ids
_addTriangle(e,t,n,r,i,a){let o=this.trianglesLen;return this._triangles[o]=e,this._triangles[o+1]=t,this._triangles[o+2]=n,this._link(o,r),this._link(o+1,i),this._link(o+2,a),this.trianglesLen+=3,o}}function lT(e,t,n,r){let i=e-n,a=t-r;return i*i+a*a}function lC(e,t,n,r){if(r-n<=20)for(let i=n+1;i<=r;i++){let r=e[i],a=t[r],o=i-1;for(;o>=n&&t[e[o]]>a;)e[o+1]=e[o--];e[o+1]=r}else{let i=n+r>>1,a=n+1,o=r;lR(e,i,a),t[e[n]]>t[e[r]]&&lR(e,n,r),t[e[a]]>t[e[r]]&&lR(e,a,r),t[e[n]]>t[e[a]]&&lR(e,n,a);let s=e[a],A=t[s];for(;;){do a++;while(t[e[a]]<A)do o--;while(t[e[o]]>A)if(o<a)break;lR(e,a,o)}e[n+1]=e[o],e[o]=s,r-a+1>=o-n?(lC(e,t,a,r),lC(e,t,n,o-1)):(lC(e,t,n,o-1),lC(e,t,a,r))}}function lR(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function lP(e){return e[0]}function lL(e){return e[1]}/**
 * inRing
 *
 * @private
 * @param {Array<number>} pt [x,y]
 * @param {Array<Array<number>>} ring [[x,y], [x,y],..]
 * @param {boolean} ignoreBoundary ignoreBoundary
 * @returns {boolean} inRing
 */function lD(e,t,n){var r=!1;t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]&&(t=t.slice(0,t.length-1));for(var i=0,a=t.length-1;i<t.length;a=i++){var o=t[i][0],s=t[i][1],A=t[a][0],l=t[a][1];if(e[1]*(o-A)+s*(A-e[0])+l*(e[0]-o)==0&&(o-e[0])*(A-e[0])<=0&&(s-e[1])*(l-e[1])<=0)return!n;s>e[1]!=l>e[1]&&e[0]<(A-o)*(e[1]-s)/(l-s)+o&&(r=!r)}return r}var lO,lI,lq,lU,lN,lB,lk,lF,lz,lG,lH,lV,lj,lW,lX,lQ,lY=new sx,lZ=new sx,lK={point:sB,lineStart:sB,lineEnd:sB,polygonStart:function(){lY=new sx,lK.lineStart=lJ,lK.lineEnd=l$},polygonEnd:function(){var e=+lY;lZ.add(e<0?sE+e:e),this.lineStart=this.lineEnd=this.point=sB},sphere:function(){lZ.add(sE)}};function lJ(){lK.point=l0}function l$(){l1(lV,lj)}function l0(e,t){lK.point=l1,lV=e,lj=t,e*=sT,t*=sT,lW=e,lX=sL(t=t/2+sw),lQ=sI(t)}function l1(e,t){e*=sT,t*=sT;// Spherical excess E for a spherical triangle with vertices: south pole,
// previous point, current point.  Uses a formula derived from Cagnoli’s
// theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
var n=e-lW,r=n>=0?1:-1,i=r*n,a=sL(t=t/2+sw),o=sI(t),s=lQ*o,A=lX*a+s*sL(i),l=s*r*sI(i);lY.add(sP(l,A)),// Advance the previous points.
lW=e,lX=a,lQ=o}function l2(e){return[sP(e[1],e[0]),sN(e[2])]}function l3(e){var t=e[0],n=e[1],r=sL(n);return[r*sL(t),r*sI(t),sI(n)]}function l4(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function l5(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function l6(e,t){e[0]+=t[0],e[1]+=t[1],e[2]+=t[2]}function l8(e,t){return[e[0]*t,e[1]*t,e[2]*t]}function l7(e){var t=sU(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]/=t,e[1]/=t,e[2]/=t}var l9={point:ue,lineStart:un,lineEnd:ur,polygonStart:function(){l9.point=ui,l9.lineStart=ua,l9.lineEnd=uo,h=new sx,lK.polygonStart()},polygonEnd:function(){lK.polygonEnd(),l9.point=ue,l9.lineStart=un,l9.lineEnd=ur,lY<0?(i=-(o=180),a=-(s=90)):h>1e-6?s=90:h<-.000001&&(a=-90),f[0]=i,f[1]=o},sphere:function(){i=-(o=180),a=-(s=90)}};function ue(e,t){d.push(f=[i=e,o=e]),t<a&&(a=t),t>s&&(s=t)}function ut(e,t){var n=l3([e*sT,t*sT]);if(c){var r=l5(c,n),l=l5([r[1],-r[0],0],r);l7(l),l=l2(l);var u,h=e-A,p=h>0?1:-1,m=l[0]*sS*p,g=sC(h)>180;g^(p*A<m&&m<p*e)?(u=l[1]*sS)>s&&(s=u):g^(p*A<(m=(m+360)%360-180)&&m<p*e)?(u=-l[1]*sS)<a&&(a=u):(t<a&&(a=t),t>s&&(s=t)),g?e<A?us(i,e)>us(i,o)&&(o=e):us(e,o)>us(i,o)&&(i=e):o>=i?(e<i&&(i=e),e>o&&(o=e)):e>A?us(i,e)>us(i,o)&&(o=e):us(e,o)>us(i,o)&&(i=e)}else d.push(f=[i=e,o=e]);t<a&&(a=t),t>s&&(s=t),c=n,A=e}function un(){l9.point=ut}function ur(){f[0]=i,f[1]=o,l9.point=ue,c=null}function ui(e,t){if(c){var n=e-A;h.add(sC(n)>180?n+(n>0?360:-360):n)}else l=e,u=t;lK.point(e,t),ut(e,t)}function ua(){lK.lineStart()}function uo(){ui(l,u),lK.lineEnd(),sC(h)>1e-6&&(i=-(o=180)),f[0]=i,f[1]=o,c=null}// Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.
function us(e,t){return(t-=e)<0?t+360:t}function uA(e,t){return e[0]-t[0]}function ul(e,t){return e[0]<=e[1]?e[0]<=t&&t<=e[1]:t<e[0]||e[1]<t}function uu(e){var t,n,r,A,l,u,c;// First, sort ranges by their minimum longitudes.
if(s=o=-(i=a=1/0),d=[],sV(e,l9),n=d.length){// Then, merge any ranges that overlap.
for(d.sort(uA),t=1,l=[r=d[0]];t<n;++t)ul(r,(A=d[t])[0])||ul(r,A[1])?(us(r[0],A[1])>us(r[0],r[1])&&(r[1]=A[1]),us(A[0],r[1])>us(r[0],r[1])&&(r[0]=A[0])):l.push(r=A);// Finally, find the largest gap between the merged ranges.
// The final bounding box will be the inverse of this gap.
for(u=-1/0,n=l.length-1,t=0,r=l[n];t<=n;r=A,++t)A=l[t],(c=us(r[1],A[0]))>u&&(u=c,i=A[0],o=r[1])}return d=f=null,i===1/0||a===1/0?[[NaN,NaN],[NaN,NaN]]:[[i,a],[o,s]]}function uc(e){return sC(e[0])<=sb?e[0]:sq(e[0])*((sC(e[0])+sb)%sE-sb)}function uh(e,t){var n=uc(t),r=t[1],i=sI(r),a=[sI(n),-sL(n),0],o=0,s=0,A=new sx;1===i?r=sM+1e-6:-1===i&&(r=-sM-1e-6);for(var l=0,u=e.length;l<u;++l)if(h=(c=e[l]).length)for(var c,h,d=c[h-1],f=uc(d),p=d[1]/2+sw,m=sI(p),g=sL(p),v=0;v<h;++v,f=y,m=b,g=M,d=_){var _=c[v],y=uc(_),x=_[1]/2+sw,b=sI(x),M=sL(x),w=y-f,E=w>=0?1:-1,S=E*w,T=S>sb,C=m*b;// Are the longitudes either side of the point’s meridian (lambda),
// and are the latitudes smaller than the parallel (phi)?
if(A.add(sP(C*E*sI(S),g*M+C*sL(S))),o+=T?w+E*sE:w,T^f>=n^y>=n){var R=l5(l3(d),l3(_));l7(R);var P=l5(a,R);l7(P);var L=(T^w>=0?-1:1)*sN(P[2]);(r>L||r===L&&(R[0]||R[1]))&&(s+=T^w>=0?1:-1)}}// First, determine whether the South pole is inside or outside:
//
// It is inside if:
// * the polygon winds around it in a clockwise direction.
// * the polygon does not (cumulatively) wind around it, but has a negative
//   (counter-clockwise) area.
//
// Second, count the (signed) number of times a segment crosses a lambda
// from the point to the South pole.  If it is zero, then the point is the
// same side as the South pole.
return(o<-.000001||o<1e-6&&A<-.000000000001)^1&s}var ud={Feature:function(e,t){return up(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,i=n.length;++r<i;)if(up(n[r].geometry,t))return!0;return!1}},uf={Sphere:function(){return!0},Point:function(e,t){return 0===sK(e.coordinates,t)},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,i=n.length;++r<i;)if(0===sK(n[r],t))return!0;return!1},LineString:function(e,t){return um(e.coordinates,t)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,i=n.length;++r<i;)if(um(n[r],t))return!0;return!1},Polygon:function(e,t){return ug(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,i=n.length;++r<i;)if(ug(n[r],t))return!0;return!1},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,i=n.length;++r<i;)if(up(n[r],t))return!0;return!1}};function up(e,t){return!!(e&&uf.hasOwnProperty(e.type))&&uf[e.type](e,t)}function um(e,t){for(var n,r,i,a=0,o=e.length;a<o;a++){if(0===(r=sK(e[a],t))||a>0&&(i=sK(e[a],e[a-1]))>0&&n<=i&&r<=i&&(n+r-i)*(1-Math.pow((n-r)/i,2))<1e-12*i)return!0;n=r}return!1}function ug(e,t){return!!uh(e.map(uv),u_(t))}function uv(e){return(e=e.map(u_)).pop(),e}function u_(e){return[e[0]*sT,e[1]*sT]}var uy={sphere:sB,point:ux,lineStart:uM,lineEnd:uS,polygonStart:function(){uy.lineStart=uT,uy.lineEnd=uC},polygonEnd:function(){uy.lineStart=uM,uy.lineEnd=uS}};// Arithmetic mean of Cartesian vectors.
function ux(e,t){e*=sT;var n=sL(t*=sT);ub(n*sL(e),n*sI(e),sI(t))}function ub(e,t,n){++p,g+=(e-g)/p,v+=(t-v)/p,_+=(n-_)/p}function uM(){uy.point=uw}function uw(e,t){e*=sT;var n=sL(t*=sT);C=n*sL(e),R=n*sI(e),P=sI(t),uy.point=uE,ub(C,R,P)}function uE(e,t){e*=sT;var n=sL(t*=sT),r=n*sL(e),i=n*sI(e),a=sI(t),o=sP(sU((o=R*a-P*i)*o+(o=P*r-C*a)*o+(o=C*i-R*r)*o),C*r+R*i+P*a);m+=o,y+=o*(C+(C=r)),x+=o*(R+(R=i)),b+=o*(P+(P=a)),ub(C,R,P)}function uS(){uy.point=ux}// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).
function uT(){uy.point=uR}function uC(){uP(S,T),uy.point=ux}function uR(e,t){S=e,T=t,e*=sT,t*=sT,uy.point=uP;var n=sL(t);C=n*sL(e),R=n*sI(e),P=sI(t),ub(C,R,P)}function uP(e,t){e*=sT;var n=sL(t*=sT),r=n*sL(e),i=n*sI(e),a=sI(t),o=R*a-P*i,s=P*r-C*a,A=C*i-R*r,l=sO(o,s,A),u=sN(l),c=l&&-u/l;// area weight multiplier
M.add(c*o),w.add(c*s),E.add(c*A),m+=u,y+=u*(C+(C=r)),x+=u*(R+(R=i)),b+=u*(P+(P=a)),ub(C,R,P)}function uL(e){p=m=g=v=_=y=x=b=0,M=new sx,w=new sx,E=new sx,sV(e,uy);var t=+M,n=+w,r=+E,i=sO(t,n,r);return(// If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
i<1e-12&&(t=y,n=x,r=b,m<1e-6&&(t=g,n=v,r=_),(i=sO(t,n,r))<1e-12)?[NaN,NaN]:[sP(n,t)*sS,sN(r/i)*sS])}class uD{constructor(){this._x0=this._y0=this._x1=this._y1=null,this._=""}moveTo(e,t){this._+=`M${this._x0=this._x1=+e},${this._y0=this._y1=+t}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")}lineTo(e,t){this._+=`L${this._x1=+e},${this._y1=+t}`}arc(e,t,n){e=+e,t=+t,n=+n;let r=e+n,i=t;if(n<0)throw Error("negative radius");null===this._x1?this._+=`M${r},${i}`:(Math.abs(this._x1-r)>1e-6||Math.abs(this._y1-i)>1e-6)&&(this._+="L"+r+","+i),n&&(this._+=`A${n},${n},0,1,1,${e-n},${t}A${n},${n},0,1,1,${this._x1=r},${this._y1=i}`)}rect(e,t,n,r){this._+=`M${this._x0=this._x1=+e},${this._y0=this._y1=+t}h${+n}v${+r}h${-n}Z`}value(){return this._||null}}class uO{constructor(){this._=[]}moveTo(e,t){this._.push([e,t])}closePath(){this._.push(this._[0].slice())}lineTo(e,t){this._.push([e,t])}value(){return this._.length?this._:null}}class uI{constructor(e,[t,n,r,i]=[0,0,960,500]){if(!((r=+r)>=(t=+t))||!((i=+i)>=(n=+n)))throw Error("invalid bounds");this.delaunay=e,this._circumcenters=new Float64Array(2*e.points.length),this.vectors=new Float64Array(2*e.points.length),this.xmax=r,this.xmin=t,this.ymax=i,this.ymin=n,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){let e,t;let{delaunay:{points:n,hull:r,triangles:i},vectors:a}=this,o=this.circumcenters=this._circumcenters.subarray(0,i.length/3*2);for(let a=0,s=0,A=i.length,l,u;a<A;a+=3,s+=2){let A=2*i[a],c=2*i[a+1],h=2*i[a+2],d=n[A],f=n[A+1],p=n[c],m=n[c+1],g=n[h],v=n[h+1],_=p-d,y=m-f,x=g-d,b=v-f,M=(_*b-y*x)*2;if(1e-9>Math.abs(M)){// For a degenerate triangle, the circumcenter is at the infinity, in a
// direction orthogonal to the halfedge and away from the “center” of
// the diagram <bx, by>, defined as the hull’s barycenter.
if(void 0===e){for(let i of(e=t=0,r))e+=n[2*i],t+=n[2*i+1];e/=r.length,t/=r.length}let i=1e9*Math.sign((e-d)*b-(t-f)*x);l=(d+g)/2-i*b,u=(f+v)/2+i*x}else{let e=1/M,t=_*_+y*y,n=x*x+b*b;l=d+(b*t-y*n)*e,u=f+(_*n-x*t)*e}o[s]=l,o[s+1]=u}// Compute exterior cell rays.
let s=r[r.length-1],A,l=4*s,u,c=n[2*s],h,d=n[2*s+1];a.fill(0);for(let e=0;e<r.length;++e)s=r[e],A=l,u=c,h=d,l=4*s,c=n[2*s],d=n[2*s+1],a[A+2]=a[l]=h-d,a[A+3]=a[l+1]=c-u}render(e){let t=null==e?e=new uD:void 0,{delaunay:{halfedges:n,inedges:r,hull:i},circumcenters:a,vectors:o}=this;if(i.length<=1)return null;for(let t=0,r=n.length;t<r;++t){let r=n[t];if(r<t)continue;let i=2*Math.floor(t/3),o=2*Math.floor(r/3),s=a[i],A=a[i+1],l=a[o],u=a[o+1];this._renderSegment(s,A,l,u,e)}let s,A=i[i.length-1];for(let t=0;t<i.length;++t){s=A,A=i[t];let n=2*Math.floor(r[A]/3),l=a[n],u=a[n+1],c=4*s,h=this._project(l,u,o[c+2],o[c+3]);h&&this._renderSegment(l,u,h[0],h[1],e)}return t&&t.value()}renderBounds(e){let t=null==e?e=new uD:void 0;return e.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),t&&t.value()}renderCell(e,t){let n=null==t?t=new uD:void 0,r=this._clip(e);if(null===r||!r.length)return;t.moveTo(r[0],r[1]);let i=r.length;for(;r[0]===r[i-2]&&r[1]===r[i-1]&&i>1;)i-=2;for(let e=2;e<i;e+=2)(r[e]!==r[e-2]||r[e+1]!==r[e-1])&&t.lineTo(r[e],r[e+1]);return t.closePath(),n&&n.value()}*cellPolygons(){let{delaunay:{points:e}}=this;for(let t=0,n=e.length/2;t<n;++t){let e=this.cellPolygon(t);e&&(e.index=t,yield e)}}cellPolygon(e){let t=new uO;return this.renderCell(e,t),t.value()}_renderSegment(e,t,n,r,i){let a;let o=this._regioncode(e,t),s=this._regioncode(n,r);0===o&&0===s?(i.moveTo(e,t),i.lineTo(n,r)):(a=this._clipSegment(e,t,n,r,o,s))&&(i.moveTo(a[0],a[1]),i.lineTo(a[2],a[3]))}contains(e,t,n){return(t=+t)==t&&(n=+n)==n&&this.delaunay._step(e,t,n)===e}*neighbors(e){let t=this._clip(e);if(t)for(let n of this.delaunay.neighbors(e)){let e=this._clip(n);// find the common edge
if(e){a:for(let r=0,i=t.length;r<i;r+=2)for(let a=0,o=e.length;a<o;a+=2)if(t[r]===e[a]&&t[r+1]===e[a+1]&&t[(r+2)%i]===e[(a+o-2)%o]&&t[(r+3)%i]===e[(a+o-1)%o]){yield n;break a}}}}_cell(e){let{circumcenters:t,delaunay:{inedges:n,halfedges:r,triangles:i}}=this,a=n[e];if(-1===a)return null;// coincident point
let o=[],s=a;do{let n=Math.floor(s/3);if(o.push(t[2*n],t[2*n+1]),i[s=s%3==2?s-2:s+1]!==e)break;// bad triangulation
s=r[s]}while(s!==a&&-1!==s)return o}_clip(e){// degenerate case (1 valid point: return the box)
if(0===e&&1===this.delaunay.hull.length)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];let t=this._cell(e);if(null===t)return null;let{vectors:n}=this,r=4*e;return this._simplify(n[r]||n[r+1]?this._clipInfinite(e,t,n[r],n[r+1],n[r+2],n[r+3]):this._clipFinite(e,t))}_clipFinite(e,t){let n=t.length,r=null,i,a,o=t[n-2],s=t[n-1],A,l=this._regioncode(o,s),u,c=0;for(let h=0;h<n;h+=2)if(i=o,a=s,o=t[h],s=t[h+1],A=l,l=this._regioncode(o,s),0===A&&0===l)u=c,c=0,r?r.push(o,s):r=[o,s];else{let t,n,h,d,f;if(0===A){if(null===(t=this._clipSegment(i,a,o,s,A,l)))continue;[n,h,d,f]=t}else{if(null===(t=this._clipSegment(o,s,i,a,l,A)))continue;[d,f,n,h]=t,u=c,c=this._edgecode(n,h),u&&c&&this._edge(e,u,c,r,r.length),r?r.push(n,h):r=[n,h]}u=c,c=this._edgecode(d,f),u&&c&&this._edge(e,u,c,r,r.length),r?r.push(d,f):r=[d,f]}if(r)u=c,c=this._edgecode(r[0],r[1]),u&&c&&this._edge(e,u,c,r,r.length);else if(this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return r}_clipSegment(e,t,n,r,i,a){// for more robustness, always consider the segment in the same order
let o=i<a;for(o&&([e,t,n,r,i,a]=[n,r,e,t,a,i]);;){if(0===i&&0===a)return o?[n,r,e,t]:[e,t,n,r];if(i&a)return null;let s,A,l=i||a;8&l?(s=e+(n-e)*(this.ymax-t)/(r-t),A=this.ymax):4&l?(s=e+(n-e)*(this.ymin-t)/(r-t),A=this.ymin):2&l?(A=t+(r-t)*(this.xmax-e)/(n-e),s=this.xmax):(A=t+(r-t)*(this.xmin-e)/(n-e),s=this.xmin),i?(e=s,t=A,i=this._regioncode(e,t)):(n=s,r=A,a=this._regioncode(n,r))}}_clipInfinite(e,t,n,r,i,a){let o=Array.from(t),s;if((s=this._project(o[0],o[1],n,r))&&o.unshift(s[0],s[1]),(s=this._project(o[o.length-2],o[o.length-1],i,a))&&o.push(s[0],s[1]),o=this._clipFinite(e,o))for(let t=0,n=o.length,r,i=this._edgecode(o[n-2],o[n-1]);t<n;t+=2)r=i,i=this._edgecode(o[t],o[t+1]),r&&i&&(t=this._edge(e,r,i,o,t),n=o.length);else this.contains(e,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(o=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return o}_edge(e,t,n,r,i){for(;t!==n;){let n,a;switch(t){case 5:t=4;continue;// top-left
case 4:t=6,n=this.xmax,a=this.ymin;break;// top
case 6:t=2;continue;// top-right
case 2:t=10,n=this.xmax,a=this.ymax;break;// right
case 10:t=8;continue;// bottom-right
case 8:t=9,n=this.xmin,a=this.ymax;break;// bottom
case 9:t=1;continue;// bottom-left
case 1:t=5,n=this.xmin,a=this.ymin}// Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are
// undefined, the conditional statement will be executed.
(r[i]!==n||r[i+1]!==a)&&this.contains(e,n,a)&&(r.splice(i,0,n,a),i+=2)}return i}_project(e,t,n,r){let i=1/0,a,o,s;if(r<0){if(t<=this.ymin)return null;(a=(this.ymin-t)/r)<i&&(s=this.ymin,o=e+(i=a)*n)}else if(r>0){if(t>=this.ymax)return null;(a=(this.ymax-t)/r)<i&&(s=this.ymax,o=e+(i=a)*n)}if(n>0){if(e>=this.xmax)return null;(a=(this.xmax-e)/n)<i&&(o=this.xmax,s=t+(i=a)*r)}else if(n<0){if(e<=this.xmin)return null;(a=(this.xmin-e)/n)<i&&(o=this.xmin,s=t+(i=a)*r)}return[o,s]}_edgecode(e,t){return(e===this.xmin?1:e===this.xmax?2:0)|(t===this.ymin?4:t===this.ymax?8:0)}_regioncode(e,t){return(e<this.xmin?1:e>this.xmax?2:0)|(t<this.ymin?4:t>this.ymax?8:0)}_simplify(e){if(e&&e.length>4){for(let t=0;t<e.length;t+=2){let n=(t+2)%e.length,r=(t+4)%e.length;(e[t]===e[n]&&e[n]===e[r]||e[t+1]===e[n+1]&&e[n+1]===e[r+1])&&(e.splice(n,2),t-=2)}e.length||(e=null)}return e}}const uq=2*Math.PI,uU=Math.pow;function uN(e){return e[0]}function uB(e){return e[1]}class uk{static from(e,t=uN,n=uB,r){return new uk("length"in e?function(e,t,n,r){let i=e.length,a=new Float64Array(2*i);for(let o=0;o<i;++o){let i=e[o];a[2*o]=t.call(r,i,o,e),a[2*o+1]=n.call(r,i,o,e)}return a}(e,t,n,r):Float64Array.from(function*(e,t,n,r){let i=0;for(let a of e)yield t.call(r,a,i,e),yield n.call(r,a,i,e),++i}(e,t,n,r)))}constructor(e){this._delaunator=new lS(e),this.inedges=new Int32Array(e.length/2),this._hullIndex=new Int32Array(e.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){let e=this._delaunator,t=this.points;// check for collinear
if(e.hull&&e.hull.length>2&&// A triangulation is collinear if all its triangles have a non-null area
function(e){let{triangles:t,coords:n}=e;for(let e=0;e<t.length;e+=3){let r=2*t[e],i=2*t[e+1],a=2*t[e+2],o=(n[a]-n[r])*(n[i+1]-n[r+1])-(n[i]-n[r])*(n[a+1]-n[r+1]);if(o>1e-10)return!1}return!0}(e)){this.collinear=Int32Array.from({length:t.length/2},(e,t)=>t).sort((e,n)=>t[2*e]-t[2*n]||t[2*e+1]-t[2*n+1]);// for exact neighbors
let e=this.collinear[0],i=this.collinear[this.collinear.length-1],a=[t[2*e],t[2*e+1],t[2*i],t[2*i+1]],o=1e-8*Math.hypot(a[3]-a[1],a[2]-a[0]);for(let e=0,i=t.length/2;e<i;++e){var n,r;let i=[(n=t[2*e])+Math.sin(n+(r=t[2*e+1]))*o,r+Math.cos(n-r)*o];t[2*e]=i[0],t[2*e+1]=i[1]}this._delaunator=new lS(t)}else delete this.collinear;let i=this.halfedges=this._delaunator.halfedges,a=this.hull=this._delaunator.hull,o=this.triangles=this._delaunator.triangles,s=this.inedges.fill(-1),A=this._hullIndex.fill(-1);// Compute an index from each point to an (arbitrary) incoming halfedge
// Used to give the first neighbor of each point; for this reason,
// on the hull we give priority to exterior halfedges
for(let e=0,t=i.length;e<t;++e){let t=o[e%3==2?e-2:e+1];(-1===i[e]||-1===s[t])&&(s[t]=e)}for(let e=0,t=a.length;e<t;++e)A[a[e]]=e;// degenerate case: 1 or 2 (distinct) points
a.length<=2&&a.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=a[0],s[a[0]]=1,2===a.length&&(s[a[1]]=0,this.triangles[1]=a[1],this.triangles[2]=a[1]))}voronoi(e){return new uI(this,e)}*neighbors(e){let{inedges:t,hull:n,_hullIndex:r,halfedges:i,triangles:a,collinear:o}=this;// degenerate case with several collinear points
if(o){let t=o.indexOf(e);t>0&&(yield o[t-1]),t<o.length-1&&(yield o[t+1]);return}let s=t[e];if(-1===s)return;// coincident point
let A=s,l=-1;do{if(yield l=a[A],a[A=A%3==2?A-2:A+1]!==e)return;// bad triangulation
if(-1===(A=i[A])){let t=n[(r[e]+1)%n.length];t!==l&&(yield t);return}}while(A!==s)}find(e,t,n=0){let r;if((e=+e)!=e||(t=+t)!=t)return -1;let i=n;for(;(r=this._step(n,e,t))>=0&&r!==n&&r!==i;)n=r;return r}_step(e,t,n){let{inedges:r,hull:i,_hullIndex:a,halfedges:o,triangles:s,points:A}=this;if(-1===r[e]||!A.length)return(e+1)%(A.length>>1);let l=e,u=uU(t-A[2*e],2)+uU(n-A[2*e+1],2),c=r[e],h=c;do{let r=s[h],c=uU(t-A[2*r],2)+uU(n-A[2*r+1],2);if(c<u&&(u=c,l=r),s[h=h%3==2?h-2:h+1]!==e)break;// bad triangulation
if(-1===(h=o[h])){if((h=i[(a[e]+1)%i.length])!==r&&uU(t-A[2*h],2)+uU(n-A[2*h+1],2)<u)return h;break}}while(h!==c)return l}render(e){let t=null==e?e=new uD:void 0,{points:n,halfedges:r,triangles:i}=this;for(let t=0,a=r.length;t<a;++t){let a=r[t];if(a<t)continue;let o=2*i[t],s=2*i[a];e.moveTo(n[o],n[o+1]),e.lineTo(n[s],n[s+1])}return this.renderHull(e),t&&t.value()}renderPoints(e,t){void 0!==t||e&&"function"==typeof e.moveTo||(t=e,e=null),t=void 0==t?2:+t;let n=null==e?e=new uD:void 0,{points:r}=this;for(let n=0,i=r.length;n<i;n+=2){let i=r[n],a=r[n+1];e.moveTo(i+t,a),e.arc(i,a,t,0,uq)}return n&&n.value()}renderHull(e){let t=null==e?e=new uD:void 0,{hull:n,points:r}=this,i=2*n[0],a=n.length;e.moveTo(r[i],r[i+1]);for(let t=1;t<a;++t){let i=2*n[t];e.lineTo(r[i],r[i+1])}return e.closePath(),t&&t.value()}hullPolygon(){let e=new uO;return this.renderHull(e),e.value()}renderTriangle(e,t){let n=null==t?t=new uD:void 0,{points:r,triangles:i}=this,a=2*i[e*=3],o=2*i[e+1],s=2*i[e+2];return t.moveTo(r[a],r[a+1]),t.lineTo(r[o],r[o+1]),t.lineTo(r[s],r[s+1]),t.closePath(),n&&n.value()}*trianglePolygons(){let{triangles:e}=this;for(let t=0,n=e.length/3;t<n;++t)yield this.trianglePolygon(t)}trianglePolygon(e){let t=new uO;return this.renderTriangle(e,t),t.value()}}function uF(e,t){function n(n,r){return t((n=e(n,r))[0],n[1])}return e.invert&&t.invert&&(n.invert=function(n,r){return(n=t.invert(n,r))&&e.invert(n[0],n[1])}),n}function uz(e,t){return sC(e)>sb&&(e-=Math.round(e/sE)*sE),[e,t]}function uG(e,t,n){return(e%=sE)?t||n?uF(uV(e),uj(t,n)):uV(e):t||n?uj(t,n):uz}function uH(e){return function(t,n){return sC(t+=e)>sb&&(t-=Math.round(t/sE)*sE),[t,n]}}function uV(e){var t=uH(e);return t.invert=uH(-e),t}function uj(e,t){var n=sL(e),r=sI(e),i=sL(t),a=sI(t);function o(e,t){var o=sL(t),s=sL(e)*o,A=sI(e)*o,l=sI(t),u=l*n+s*r;return[sP(A*i-u*a,s*n-l*r),sN(u*i+A*a)]}return o.invert=function(e,t){var o=sL(t),s=sL(e)*o,A=sI(e)*o,l=sI(t),u=l*i-A*a;return[sP(A*i+l*a,s*n+u*r),sN(u*n-s*r)]},o}function uW(){var e,t=[];return{point:function(t,n,r){e.push([t,n,r])},lineStart:function(){t.push(e=[])},lineEnd:sB,rejoin:function(){t.length>1&&t.push(t.pop().concat(t.shift()))},result:function(){var n=t;return t=[],e=null,n}}}function uX(e,t){return 1e-6>sC(e[0]-t[0])&&1e-6>sC(e[1]-t[1])}function uQ(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function uY(e,t,n,r,i){var a,o,s=[],A=[];if(e.forEach(function(e){if(!((t=e.length-1)<=0)){var t,n,r=e[0],o=e[t];if(uX(r,o)){if(!r[2]&&!o[2]){for(i.lineStart(),a=0;a<t;++a)i.point((r=e[a])[0],r[1]);i.lineEnd();return}// handle degenerate cases by moving the point
o[0]+=2e-6}s.push(n=new uQ(r,e,null,!0)),A.push(n.o=new uQ(r,null,n,!1)),s.push(n=new uQ(o,e,null,!1)),A.push(n.o=new uQ(o,null,n,!0))}}),s.length){for(A.sort(t),uZ(s),uZ(A),a=0,o=A.length;a<o;++a)A[a].e=n=!n;for(var l,u,c=s[0];;){for(// Find first unvisited intersection.
var h=c,d=!0;h.v;)if((h=h.n)===c)return;l=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(a=0,o=l.length;a<o;++a)i.point((u=l[a])[0],u[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(a=(l=h.p.z).length-1;a>=0;--a)i.point((u=l[a])[0],u[1]);else r(h.x,h.p.x,-1,i);h=h.p}l=(h=h.o).z,d=!d}while(!h.v)i.lineEnd()}}}function uZ(e){if(t=e.length){for(var t,n,r=0,i=e[0];++r<t;)i.n=n=e[r],n.p=i,i=n;i.n=n=e[0],n.p=i}}function uK(e,t,n,r){return function(i){var a,o,s,A=t(i),l=uW(),u=t(l),c=!1,h={point:d,lineStart:p,lineEnd:m,polygonStart:function(){h.point=g,h.lineStart=v,h.lineEnd=_,o=[],a=[]},polygonEnd:function(){h.point=d,h.lineStart=p,h.lineEnd=m,o=lm(o);var e=uh(a,r);o.length?(c||(i.polygonStart(),c=!0),uY(o,u$,e,n,i)):e&&(c||(i.polygonStart(),c=!0),i.lineStart(),n(null,null,1,i),i.lineEnd()),c&&(i.polygonEnd(),c=!1),o=a=null},sphere:function(){i.polygonStart(),i.lineStart(),n(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(t,n){e(t,n)&&i.point(t,n)}function f(e,t){A.point(e,t)}function p(){h.point=f,A.lineStart()}function m(){h.point=d,A.lineEnd()}function g(e,t){s.push([e,t]),u.point(e,t)}function v(){u.lineStart(),s=[]}function _(){g(s[0][0],s[0][1]),u.lineEnd();var e,t,n,r,A=u.clean(),h=l.result(),d=h.length;if(s.pop(),a.push(s),s=null,d){// No intersections.
if(1&A){if((t=(n=h[0]).length-1)>0){for(c||(i.polygonStart(),c=!0),i.lineStart(),e=0;e<t;++e)i.point((r=n[e])[0],r[1]);i.lineEnd()}return}d>1&&2&A&&h.push(h.pop().concat(h.shift())),o.push(h.filter(uJ))}}return h}}function uJ(e){return e.length>1}// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function u$(e,t){return((e=e.x)[0]<0?e[1]-sM-1e-6:sM-e[1])-((t=t.x)[0]<0?t[1]-sM-1e-6:sM-t[1])}uz.invert=uz;var u0=uK(function(){return!0},// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function(e){var t,n=NaN,r=NaN,i=NaN;// no intersections
return{lineStart:function(){e.lineStart(),t=1},point:function(a,o){var s,A,l,u,c,h,d=a>0?sb:-sb,f=sC(a-n);1e-6>sC(f-sb)?(e.point(n,r=(r+o)/2>0?sM:-sM),e.point(i,r),e.lineEnd(),e.lineStart(),e.point(d,r),e.point(a,r),t=0):i!==d&&f>=sb&&(1e-6>sC(n-i)&&(n-=1e-6*i),1e-6>sC(a-d)&&(a-=1e-6*d),s=n,A=r,r=sC(h=sI(s-(l=a)))>1e-6?sR((sI(A)*(c=sL(o))*sI(l)-sI(o)*(u=sL(A))*sI(s))/(u*c*h)):(A+o)/2,e.point(i,r),e.lineEnd(),e.lineStart(),e.point(d,r),t=0),e.point(n=a,r=o),i=d},lineEnd:function(){e.lineEnd(),n=r=NaN},clean:function(){return 2-t;// if intersections, rejoin first and last segments
}}},function(e,t,n,r){var i;if(null==e)i=n*sM,r.point(-sb,i),r.point(0,i),r.point(sb,i),r.point(sb,0),r.point(sb,-i),r.point(0,-i),r.point(-sb,-i),r.point(-sb,0),r.point(-sb,i);else if(sC(e[0]-t[0])>1e-6){var a=e[0]<t[0]?sb:-sb;i=n*a/2,r.point(-a,i),r.point(0,i),r.point(a,i)}else r.point(t[0],t[1])},[-sb,-sM]);// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function u1(e,t){t=l3(t),t[0]-=e,l7(t);var n,r=(n=-t[1])>1?0:n<-1?sb:Math.acos(n);return((0>-t[2]?-r:r)+sE-1e-6)%sE}var u2=e=>e;function u3(e){return function(t){var n=new u4;for(var r in e)n[r]=e[r];return n.stream=t,n}}function u4(){}u4.prototype={constructor:u4,point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var u5=1/0,u6=1/0,u8=-1/0,u7=u8,u9={point:function(e,t){e<u5&&(u5=e),e>u8&&(u8=e),t<u6&&(u6=t),t>u7&&(u7=t)},lineStart:sB,lineEnd:sB,polygonStart:sB,polygonEnd:sB,result:function(){var e=[[u5,u6],[u8,u7]];return u8=u7=-(u6=u5=1/0),e}};function ce(e,t,n){var r=e.clipExtent&&e.clipExtent();return e.scale(150).translate([0,0]),null!=r&&e.clipExtent(null),sV(n,e.stream(u9)),t(u9.result()),null!=r&&e.clipExtent(r),e}function ct(e,t,n){return ce(e,function(n){var r=t[1][0]-t[0][0],i=t[1][1]-t[0][1],a=Math.min(r/(n[1][0]-n[0][0]),i/(n[1][1]-n[0][1])),o=+t[0][0]+(r-a*(n[1][0]+n[0][0]))/2,s=+t[0][1]+(i-a*(n[1][1]+n[0][1]))/2;e.scale(150*a).translate([o,s])},n)}var cn=sL(30*sT);// cos(minimum angular distance)
function cr(e,t){return+t?function(e,t){function n(r,i,a,o,s,A,l,u,c,h,d,f,p,m){var g=l-r,v=u-i,_=g*g+v*v;if(_>4*t&&p--){var y=o+h,x=s+d,b=A+f,M=sU(y*y+x*x+b*b),w=sN(b/=M),E=1e-6>sC(sC(b)-1)||1e-6>sC(a-c)?(a+c)/2:sP(x,y),S=e(E,w),T=S[0],C=S[1],R=T-r,P=C-i,L=v*R-g*P;(L*L/_>t// perpendicular projected distance
||sC((g*R+v*P)/_-.5)>.3// midpoint close to an end
||o*h+s*d+A*f<cn)&&(n(r,i,a,o,s,A,T,C,E,y/=M,x/=M,b,p,m),m.point(T,C),n(T,C,E,y,x,b,l,u,c,h,d,f,p,m))}}return function(t){var r,i,a,o,s,A,l,u,c,h,d,f,p={point:m,lineStart:g,lineEnd:_,polygonStart:function(){t.polygonStart(),p.lineStart=y},polygonEnd:function(){t.polygonEnd(),p.lineStart=g}};function m(n,r){n=e(n,r),t.point(n[0],n[1])}function g(){u=NaN,p.point=v,t.lineStart()}function v(r,i){var a=l3([r,i]),o=e(r,i);n(u,c,l,h,d,f,u=o[0],c=o[1],l=r,h=a[0],d=a[1],f=a[2],16,t),t.point(u,c)}function _(){p.point=m,t.lineEnd()}function y(){g(),p.point=x,p.lineEnd=b}function x(e,t){v(r=e,t),i=u,a=c,o=h,s=d,A=f,p.point=v}function b(){n(u,c,l,h,d,f,i,a,r,o,s,A,16,t),p.lineEnd=_,_()}return p}}(e,t):u3({point:function(t,n){t=e(t,n),this.stream.point(t[0],t[1])}})}var ci=u3({point:function(e,t){this.stream.point(e*sT,t*sT)}});function ca(e,t,n,r,i,a){if(!a)return function(e,t,n,r,i){function a(a,o){return[t+e*(a*=r),n-e*(o*=i)]}return a.invert=function(a,o){return[(a-t)/e*r,(n-o)/e*i]},a}(e,t,n,r,i);var o=sL(a),s=sI(a),A=o*e,l=s*e,u=o/e,c=s/e,h=(s*n-o*t)/e,d=(s*t+o*n)/e;function f(e,a){return[A*(e*=r)-l*(a*=i)+t,n-l*e-A*a]}return f.invert=function(e,t){return[r*(u*e-c*t+h),i*(d-c*e-u*t)]},f}function co(e,t){var n=sL(t),r=1+sL(e)*n;return[n*sI(e)/r,sI(t)/r]}co.invert=function(e,t){var n=sU(e*e+t*t),r=2*sR(n),i=sI(r);return[sP(e*i,n*sL(r)),sN(n&&t*i/n)]};const cs=Math.PI,cA=cs/2,cl=180/cs,cu=cs/180,cc=Math.atan2,ch=Math.cos,cd=Math.max,cf=Math.min,cp=Math.sin,cm=Math.sign||function(e){return e>0?1:e<0?-1:0},cg=Math.sqrt;function cv(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function c_(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]}function cy(e,t){return[e[0]+t[0],e[1]+t[1],e[2]+t[2]]}function cx(e){var t=cg(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]}// Converts 3D Cartesian to spherical coordinates (degrees).
function cb(e){var t;return[cc(e[1],e[0])*cl,((t=cd(-1,cf(1,e[2])))>1?cA:t<-1?-cA:Math.asin(t))*cl]}// Converts spherical coordinates (degrees) to 3D Cartesian.
function cM(e){let t=e[0]*cu,n=e[1]*cu,r=ch(n);return[r*ch(t),r*cp(t),cp(n)]}function cw(e){return cv((e=e.map(e=>cM(e)))[0],c_(e[2],e[1]))}function cE(e,t,n){e=cM(e),t=cM(t),n=cM(n);let r=cm(cv(c_(t,e),n));return cb(cx(cy(e,t)).map(e=>r*e))}function cS(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(r.key),r)}}function cT(e){return(cT=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function cC(e,t){return(cC=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function cR(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a,o,s=[],A=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;A=!1}else for(;!(A=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);A=!0);}catch(e){l=!0,i=e}finally{try{if(!A&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(l)throw i}}return s}}(e,t)||cL(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function cP(e){return function(e){if(Array.isArray(e))return cD(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||cL(e)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function cL(e,t){if(e){if("string"==typeof e)return cD(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return cD(e,t)}}function cD(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function cO(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];// turf method is more performing but malfunctions if polygon includes a pole (lat = 90 | -90) or crosses the antimeridian (lng = 180 | -180)
return n?(t&&ud.hasOwnProperty(t.type)?ud[t.type]:up)(t,e):function(e,t,n){// validation
if(void 0===n&&(n={}),!e)throw Error("point is required");if(!t)throw Error("polygon is required");var r=function(e){if(!e)throw Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw Error("coord must be GeoJSON Point or an Array of numbers")}(e),i="Feature"===t.type?t.geometry:t,a=i.type,o=t.bbox,s=i.coordinates;// Quick elimination if point is not inside bbox
if(o&&!1==(o[0]<=r[0]&&o[1]<=r[1]&&o[2]>=r[0]&&o[3]>=r[1]))return!1;"Polygon"===a&&(s=[s]);for(var A=!1,l=0;l<s.length&&!A;l++)if(lD(r,s[l][0],n.ignoreBoundary)){// check for the point in any of the holes
for(var u=!1,c=1;c<s[l].length&&!u;)lD(r,s[l][c],!n.ignoreBoundary)&&(u=!0),c++;u||(A=!0)}return A}(e,t)}var cI=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BufferGeometry:t3,Float32BufferAttribute:tY},cq=new cI.BufferGeometry().setAttribute?"setAttribute":"addAttribute",cU=/*#__PURE__*/function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&cC(e,t)}(o,e);var t,r,i,a=(t=function(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}(),function(){var e,n=cT(o);if(t){var r=cT(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return function(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function o(e,t,r,i,s,A,l){!function(e,t){if(!(e instanceof t))throw TypeError("Cannot call a class as a function")}(this,o),(u=a.call(this)).type="ConicPolygonBufferGeometry",u.parameters={polygonGeoJson:e,startHeight:t,endHeight:r,closedBottom:i,closedTop:s,includeSides:A,curvatureResolution:l},// defaults
t=t||0,r=r||1,i=void 0===i||i,s=void 0===s||s,A=void 0===A||A;// pre-calculate contour, triangulation and UV maps
var u,c=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.resolution,i=void 0===r?1/0:r,a=e.map(function(e){var t,n=[];return e.forEach(function(e){if(t){var r=180*sK(e,t)/Math.PI;if(r>i)for(var a=sJ(t,e),o=1/Math.ceil(r/i),s=o;s<1;)n.push(a(s)),s+=o}n.push(t=e)}),n}),o=lm(a),s=function(e,t){var n={type:"Polygon",coordinates:e},r=cR(uu(n),2),i=cR(r[0],2),a=i[0],o=i[1],s=cR(r[1],2),A=s[0],l=s[1];// polygon smaller than maxDistance -> no inner points
if(Math.min(Math.abs(A-a),Math.abs(l-o))<t)return[];var u=a>A||l>=89||o<=-89;return(function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.minLng,r=t.maxLng,i=t.minLat,a=t.maxLat,o=Math.round(Math.pow(360/e,2)/Math.PI),s=(1+Math.sqrt(5))/2,A=function(e){return o*(Math.cos((e+90)*Math.PI/180)+1)/2},l=[void 0!==a?Math.ceil(A(a)):0,void 0!==i?Math.floor(A(i)):o-1],u=void 0===n&&void 0===r?function(){return!0}:void 0===n?function(e){return e<=r}:void 0===r?function(e){return e>=n}:r>=n?function(e){return e>=n&&e<=r}:function(e){return e>=n||e<=r},c=[],h=l[0];h<=l[1];h++){var d=h/s*360%360-180;u(d)&&c.push([d,Math.acos(2*h/o-1)/Math.PI*180-90])}return c})(t,{minLng:a,maxLng:A,minLat:o,maxLat:l}).filter(function(e){return cO(e,n,u)})}(e,i),A=[].concat(cP(o),cP(s)),l={type:"Polygon",coordinates:e},u=cR(uu(l),2),c=cR(u[0],2),h=c[0],d=c[1],f=cR(u[1],2),p=f[0],m=f[1],g=h>p// crosses antimeridian
||m>=89// crosses north pole
||d<=-89,v=[];if(g){// Use d3-geo-voronoi. Slowest, but most accurate for polygons that cross poles or anti-meridian
var _=(function(e){let t=function(e){if(t.delaunay=null,t._data=e,"object"==typeof t._data&&"FeatureCollection"===t._data.type&&(t._data=t._data.features),"object"==typeof t._data){let e=t._data.map(e=>[t._vx(e),t._vy(e),e]).filter(e=>isFinite(e[0]+e[1]));t.points=e.map(e=>[e[0],e[1]]),t.valid=e.map(e=>e[2]),t.delaunay=function(e){let t=function(e){if(e.length<2)return{};// find a valid point to send to infinity
let t=0;for(;isNaN(e[t][0]+e[t][1])&&t++<e.length;);let n=function(e){function t(t){return t=e(t[0]*sT,t[1]*sT),t[0]*=sS,t[1]*=sS,t}return e=uG(e[0]*sT,e[1]*sT,e.length>2?e[2]*sT:0),t.invert=function(t){return t=e.invert(t[0]*sT,t[1]*sT),t[0]*=sS,t[1]*=sS,t},t}(e[t]),r=(function(e){var t,n,r,i,a,o,s,A,l,u,c=150,h=480,d=250,f=0,p=0,m=0,g=0,v=0,_=0,y=1,x=1,b=null,M=u0,w=null,E=u2,S=.5;function T(e){return A(e[0]*sT,e[1]*sT)}function C(e){return(e=A.invert(e[0],e[1]))&&[e[0]*sS,e[1]*sS]}function R(){var e=ca(c,0,0,y,x,_).apply(null,t(f,p)),r=ca(c,h-e[0],d-e[1],y,x,_);return n=uG(m,g,v),s=uF(t,r),A=uF(n,s),o=cr(s,S),P()}function P(){return l=u=null,T}return T.stream=function(e){var t;return l&&u===e?l:l=ci((t=n,u3({point:function(e,n){var r=t(e,n);return this.stream.point(r[0],r[1])}}))(M(o(E(u=e)))))},T.preclip=function(e){return arguments.length?(M=e,b=void 0,P()):M},T.postclip=function(e){return arguments.length?(E=e,w=r=i=a=null,P()):E},T.clipAngle=function(e){return arguments.length?(M=+e?function(e){var t=sL(e),n=6*sT,r=t>0,i=sC(t)>1e-6;// TODO optimise for this common case
function a(e,n){return sL(e)*sL(n)>t}// Intersects the great circle between a and b with the clip circle.
function o(e,n,r){var i=l3(e),a=l3(n),o=[1,0,0],s=l5(i,a),A=l4(s,s),l=s[0],u=A-l*l;// Two polar points.
if(!u)return!r&&e;var c=l5(o,s),h=l8(o,t*A/u);l6(h,l8(s,-t*l/u));// Solve |p(t)|^2 = 1.
var d=l4(h,c),f=l4(c,c),p=d*d-f*(l4(h,h)-1);if(!(p<0)){var m=sU(p),g=l8(c,(-d-m)/f);if(l6(g,h),g=l2(g),!r)return g;// Two intersection points.
var v,_=e[0],y=n[0],x=e[1],b=n[1];y<_&&(v=_,_=y,y=v);var M=y-_,w=1e-6>sC(M-sb);// Check that the first point is between a and b.
if(!w&&b<x&&(v=x,x=b,b=v),w||M<1e-6?w?x+b>0^g[1]<(1e-6>sC(g[0]-_)?x:b):x<=g[1]&&g[1]<=b:M>sb^(_<=g[0]&&g[0]<=y)){var E=l8(c,(-d+m)/f);return l6(E,h),[g,l2(E)]}}}// Generates a 4-bit vector representing the location of a point relative to
// the small circle's bounding box.
function s(t,n){var i=r?e:sb-e,a=0;return t<-i?a|=1:t>i&&(a|=2),n<-i?a|=4:n>i&&(a|=8),a}return uK(a,// Takes a line and cuts into visible segments. Return values used for polygon
// clipping: 0 - there were intersections or the line was empty; 1 - no
// intersections 2 - there were intersections, and the first and last segments
// should be rejoined.
function(e){var t,n,A,l,u;// no intersections
return{lineStart:function(){l=A=!1,u=1},point:function(c,h){var d,f,p=[c,h],m=a(c,h),g=r?m?0:s(c,h):m?s(c+(c<0?sb:-sb),h):0;!t&&(l=A=m)&&e.lineStart(),m!==A&&(!(f=o(t,p))||uX(t,f)||uX(p,f))&&(p[2]=1),m!==A?(u=0,m?(// outside going in
e.lineStart(),f=o(p,t),e.point(f[0],f[1])):(// inside going out
f=o(t,p),e.point(f[0],f[1],2),e.lineEnd()),t=f):i&&t&&r^m&&!(g&n)&&(d=o(p,t,!0))&&(u=0,r?(e.lineStart(),e.point(d[0][0],d[0][1]),e.point(d[1][0],d[1][1]),e.lineEnd()):(e.point(d[1][0],d[1][1]),e.lineEnd(),e.lineStart(),e.point(d[0][0],d[0][1],3))),!m||t&&uX(t,p)||e.point(p[0],p[1]),t=p,A=m,n=g},lineEnd:function(){A&&e.lineEnd(),t=null},// Rejoin first and last segments if there were intersections and the first
// and last points were visible.
clean:function(){return u|(l&&A)<<1}}},function(t,r,i,a){!function(e,t,n,r,i,a){if(n){var o=sL(t),s=sI(t),A=r*n;null==i?(i=t+r*sE,a=t-A/2):(i=u1(o,i),a=u1(o,a),(r>0?i<a:i>a)&&(i+=r*sE));for(var l,u=i;r>0?u>a:u<a;u-=A)l=l2([o,-s*sL(u),-s*sI(u)]),e.point(l[0],l[1])}}(a,e,n,i,t,r)},r?[0,-e]:[-sb,e-sb])}(b=e*sT):(b=null,u0),P()):b*sS},T.clipExtent=function(e){return arguments.length?(E=null==e?(w=r=i=a=null,u2):function(e,t,n,r){function i(i,a){return e<=i&&i<=n&&t<=a&&a<=r}function a(i,a,s,l){var u=0,c=0;if(null==i||(u=o(i,s))!==(c=o(a,s))||0>A(i,a)^s>0)do l.point(0===u||3===u?e:n,u>1?r:t);while((u=(u+s+4)%4)!==c)else l.point(a[0],a[1])}function o(r,i){return 1e-6>sC(r[0]-e)?i>0?0:3:1e-6>sC(r[0]-n)?i>0?2:1:1e-6>sC(r[1]-t)?i>0?1:0:i>0?3:2;// abs(p[1] - y1) < epsilon
}function s(e,t){return A(e.x,t.x)}function A(e,t){var n=o(e,1),r=o(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}return function(o){var A,l,u,c,h,d,f,p,m,g,v,_=o,y=uW(),x={point:b,lineStart:function(){x.point=M,l&&l.push(u=[]),g=!0,m=!1,f=p=NaN},lineEnd:// TODO rather than special-case polygons, simply handle them separately.
// Ideally, coincident intersection points should be jittered to avoid
// clipping issues.
function(){A&&(M(c,h),d&&m&&y.rejoin(),A.push(y.result())),x.point=b,m&&_.lineEnd()},polygonStart:// Buffer geometry within a polygon and then clip it en masse.
function(){_=y,A=[],l=[],v=!0},polygonEnd:function(){var t=function(){for(var t=0,n=0,i=l.length;n<i;++n)for(var a,o,s=l[n],A=1,u=s.length,c=s[0],h=c[0],d=c[1];A<u;++A)a=h,o=d,h=(c=s[A])[0],d=c[1],o<=r?d>r&&(h-a)*(r-o)>(d-o)*(e-a)&&++t:d<=r&&(h-a)*(r-o)<(d-o)*(e-a)&&--t;return t}(),n=v&&t,i=(A=lm(A)).length;(n||i)&&(o.polygonStart(),n&&(o.lineStart(),a(null,null,1,o),o.lineEnd()),i&&uY(A,s,t,a,o),o.polygonEnd()),_=o,A=l=u=null}};function b(e,t){i(e,t)&&_.point(e,t)}function M(a,o){var s=i(a,o);if(l&&u.push([a,o]),g)c=a,h=o,d=s,g=!1,s&&(_.lineStart(),_.point(a,o));else if(s&&m)_.point(a,o);else{var A=[f=Math.max(-1e9,Math.min(1e9,f)),p=Math.max(-1e9,Math.min(1e9,p))],y=[a=Math.max(-1e9,Math.min(1e9,a)),o=Math.max(-1e9,Math.min(1e9,o))];(function(e,t,n,r,i,a){var o,s=e[0],A=e[1],l=t[0],u=t[1],c=0,h=1,d=l-s,f=u-A;if(o=n-s,d||!(o>0)){if(o/=d,d<0){if(o<c)return;o<h&&(h=o)}else if(d>0){if(o>h)return;o>c&&(c=o)}if(o=i-s,d||!(o<0)){if(o/=d,d<0){if(o>h)return;o>c&&(c=o)}else if(d>0){if(o<c)return;o<h&&(h=o)}if(o=r-A,f||!(o>0)){if(o/=f,f<0){if(o<c)return;o<h&&(h=o)}else if(f>0){if(o>h)return;o>c&&(c=o)}if(o=a-A,f||!(o<0)){if(o/=f,f<0){if(o>h)return;o>c&&(c=o)}else if(f>0){if(o<c)return;o<h&&(h=o)}return c>0&&(e[0]=s+c*d,e[1]=A+c*f),h<1&&(t[0]=s+h*d,t[1]=A+h*f),!0}}}}})(A,y,e,t,n,r)?(m||(_.lineStart(),_.point(A[0],A[1])),_.point(y[0],y[1]),s||_.lineEnd(),v=!1):s&&(_.lineStart(),_.point(a,o),v=!1)}f=a,p=o,m=s}return x}}(w=+e[0][0],r=+e[0][1],i=+e[1][0],a=+e[1][1]),P()):null==w?null:[[w,r],[i,a]]},T.scale=function(e){return arguments.length?(c=+e,R()):c},T.translate=function(e){return arguments.length?(h=+e[0],d=+e[1],R()):[h,d]},T.center=function(e){return arguments.length?(f=e[0]%360*sT,p=e[1]%360*sT,R()):[f*sS,p*sS]},T.rotate=function(e){return arguments.length?(m=e[0]%360*sT,g=e[1]%360*sT,v=e.length>2?e[2]%360*sT:0,R()):[m*sS,g*sS,v*sS]},T.angle=function(e){return arguments.length?(_=e%360*sT,R()):_*sS},T.reflectX=function(e){return arguments.length?(y=e?-1:1,R()):y<0},T.reflectY=function(e){return arguments.length?(x=e?-1:1,R()):x<0},T.precision=function(e){return arguments.length?(o=cr(s,S=e*e),P()):sU(S)},T.fitExtent=function(e,t){return ct(T,e,t)},T.fitSize=function(e,t){return ct(T,[[0,0],e],t)},T.fitWidth=function(e,t){return ce(T,function(t){var n=+e,r=n/(t[1][0]-t[0][0]),i=(n-r*(t[1][0]+t[0][0]))/2,a=-r*t[0][1];T.scale(150*r).translate([i,a])},t)},T.fitHeight=function(e,t){return ce(T,function(t){var n=+e,r=n/(t[1][1]-t[0][1]),i=-r*t[0][0],a=(n-r*(t[1][1]+t[0][1]))/2;T.scale(150*r).translate([i,a])},t)},function(){return t=e.apply(this,arguments),T.invert=t.invert&&C,R()}})(function(){return co})().scale(250).clipAngle(142).translate([0,0]).scale(1).rotate(n.invert([180,0]));e=e.map(r);let i=[],a=1;for(let t=0,n=e.length;t<n;t++){let n=e[t][0]**2+e[t][1]**2;!isFinite(n)||n>1e32?i.push(t):n>a&&(a=n)}let o=1e6*cg(a);i.forEach(t=>e[t]=[o,0]),// Add infinite horizon points
e.push([0,o]),e.push([-o,0]),e.push([0,-o]);let s=uk.from(e);s.projection=r;// clean up the triangulation
let{triangles:A,halfedges:l,inedges:u}=s,c=[];for(let n=0,r=l.length;n<r;n++)if(l[n]<0){let e=n%3==2?n-2:n+1,r=n%3==0?n+2:n-1,i=l[e],a=l[r];l[i]=a,l[a]=i,l[e]=l[r]=-1,A[n]=A[e]=A[r]=t,u[A[i]]=i%3==0?i+2:i-1,u[A[a]]=a%3==0?a+2:a-1,c.push(Math.min(n,e,r)),n+=2-n%3}else A[n]>e.length-3-1&&(A[n]=t);// there should always be 4 degenerate triangles
// console.warn(degenerate);
return s}(e),n=function(e){let{triangles:t}=e;if(!t)return[];let n=[];for(let e=0,r=t.length/3;e<r;e++){let r=t[3*e],i=t[3*e+1],a=t[3*e+2];r!==i&&i!==a&&n.push([r,a,i])}return n}(t),r=function(e,t){let n=new Set;return 2===t.length?[[0,1]]:(e.forEach(e=>{if(e[0]!==e[1]&&!(0>cw(e.map(e=>t[e]))))for(let t=0,r;t<3;t++)r=(t+1)%3,n.add(lp([e[t],e[r]]).join("-"))}),Array.from(n,e=>e.split("-").map(Number)))}(n,e),i=function(e,t){let n=[];return e.forEach(e=>{for(let t=0;t<3;t++){let r=e[t],i=e[(t+1)%3];n[r]=n[r]||[],n[r].push(i)}}),0===e.length&&(2===t?(n[0]=[1],n[1]=[0]):1===t&&(n[0]=[])),n}(n,e.length),a=function(e,t){function n(e,t){let n=e[0]-t[0],r=e[1]-t[1],i=e[2]-t[2];return n*n+r*r+i*i}return function(r,i,a){void 0===a&&(a=0);let o,s,A=a,l=cM([r,i]);do o=a,a=null,s=n(l,cM(t[o])),e[o].forEach(e=>{let r=n(l,cM(t[e]));if(r<s){s=r,a=e,A=e;return}});while(null!==a)return A}}(i,e),o=n.map(t=>{let n=t.map(t=>e[t]).map(cM),r=cy(cy(c_(n[1],n[0]),c_(n[2],n[1])),c_(n[0],n[2]));return cb(cx(r))}),{polygons:s,centers:A}=function(e,t,n){let r=[],i=e.slice();if(0===t.length){if(n.length<2)return{polygons:r,centers:i};if(2===n.length){// two hemispheres
let e=cM(n[0]),t=cM(n[1]),a=cx(cy(e,t)),s=cx(c_(e,t)),A=c_(a,s),l=[a,c_(a,A),c_(c_(a,A),A),c_(c_(c_(a,A),A),A)].map(cb).map(o);return r.push(l),r.push(l.slice().reverse()),{polygons:r,centers:i}}}t.forEach((e,t)=>{for(let n=0;n<3;n++){let i=e[n],a=e[(n+1)%3],o=e[(n+2)%3];r[i]=r[i]||[],r[i].push([a,o,t,[i,a,o]])}});// reorder each polygon
let a=r.map(e=>{let t=[e[0][2]],r=e[0][1];// t
for(let n=1;n<e.length;n++)// look for b = k
for(let n=0;n<e.length;n++)if(e[n][0]==r){r=e[n][1],t.push(e[n][2]);break}if(t.length>2)return t;if(2==t.length){let r=cE(n[e[0][3][0]],n[e[0][3][1]],i[t[0]]),a=cE(n[e[0][3][2]],n[e[0][3][0]],i[t[0]]),s=o(r),A=o(a);return[t[0],A,t[1],s]}});function o(e){let n=-1;return i.slice(t.length,1/0).forEach((r,i)=>{r[0]===e[0]&&r[1]===e[1]&&(n=i+t.length)}),n<0&&(n=i.length,i.push(e)),n}return{polygons:a,centers:i}}(o,n,e),l=function(e){let t=[];return e.forEach(e=>{if(!e)return;let n=e[e.length-1];for(let r of e)r>n&&t.push([n,r]),n=r}),t}(s),u=function(e,t){let n;let r=new Set,i=[];e.map(e=>{if(!(cw(e.map(e=>t[e>t.length?0:e]))>1e-12))for(let t=0;t<3;t++){let n=[e[t],e[(t+1)%3]],i=`${n[0]}-${n[1]}`;r.has(i)?r.delete(i):r.add(`${n[1]}-${n[0]}`)}});let a=new Map;if(r.forEach(e=>{e=e.split("-").map(Number),a.set(e[0],e[1]),n=e[0]}),void 0===n)return i;let o=n;do{i.push(o);let e=a.get(o);a.set(o,-1),o=e}while(o>-1&&o!==n)return i}(n,e);return{delaunay:t,edges:r,triangles:n,centers:A,neighbors:i,polygons:s,mesh:l,hull:u,urquhart:function(e){let t=new Map,i=new Map;return r.forEach((n,r)=>{let a=n.join("-");t.set(a,e[r]),i.set(a,!0)}),n.forEach(e=>{let n=0,r=-1;for(let i=0;i<3;i++){let a=lp([e[i],e[(i+1)%3]]).join("-");t.get(a)>n&&(n=t.get(a),r=a)}i.set(r,!1)}),r.map(e=>i.get(e.join("-")))},find:a}}(t.points)}return t};return t._vx=function(e){return"object"==typeof e&&"type"in e?uL(e)[0]:0 in e?e[0]:void 0},t._vy=function(e){return"object"==typeof e&&"type"in e?uL(e)[1]:1 in e?e[1]:void 0},t.x=function(e){return e?(t._vx=e,t):t._vx},t.y=function(e){return e?(t._vy=e,t):t._vy},t.polygons=function(e){if(void 0!==e&&t(e),!t.delaunay)return!1;let n={type:"FeatureCollection",features:[]};return 0===t.valid.length||(t.delaunay.polygons.forEach((e,r)=>n.features.push({type:"Feature",geometry:e?{type:"Polygon",coordinates:[[...e,e[0]].map(e=>t.delaunay.centers[e])]}:null,properties:{site:t.valid[r],sitecoordinates:t.points[r],neighbours:t.delaunay.neighbors[r]// not part of the public API
    }})),1===t.valid.length&&n.features.push({type:"Feature",geometry:{type:"Sphere"},properties:{site:t.valid[0],sitecoordinates:t.points[0],neighbours:[]}})),n},t.triangles=function(e){return void 0!==e&&t(e),!!t.delaunay&&{type:"FeatureCollection",features:t.delaunay.triangles.map((e,n)=>((e=e.map(e=>t.points[e])).center=t.delaunay.centers[n],e)).filter(e=>cw(e)>0).map(e=>({type:"Feature",properties:{circumcenter:e.center},geometry:{type:"Polygon",coordinates:[[...e,e[0]]]}}))}},t.links=function(e){if(void 0!==e&&t(e),!t.delaunay)return!1;let n=t.delaunay.edges.map(e=>sK(t.points[e[0]],t.points[e[1]])),r=t.delaunay.urquhart(n);return{type:"FeatureCollection",features:t.delaunay.edges.map((e,i)=>({type:"Feature",properties:{source:t.valid[e[0]],target:t.valid[e[1]],length:n[i],urquhart:!!r[i]},geometry:{type:"LineString",coordinates:[t.points[e[0]],t.points[e[1]]]}}))}},t.mesh=function(e){return void 0!==e&&t(e),!!t.delaunay&&{type:"MultiLineString",coordinates:t.delaunay.edges.map(e=>[t.points[e[0]],t.points[e[1]]])}},t.cellMesh=function(e){if(void 0!==e&&t(e),!t.delaunay)return!1;let{centers:n,polygons:r}=t.delaunay,i=[];for(let e of r)if(e)for(let t=e.length,r=e[t-1],a=e[0],o=0;o<t;r=a,a=e[++o])a>r&&i.push([n[r],n[a]]);return{type:"MultiLineString",coordinates:i}},t._found=void 0,t.find=function(e,n,r){if(t._found=t.delaunay.find(e,n,t._found),!r||sK([e,n],t.points[t._found])<r)return t._found},t.hull=function(e){void 0!==e&&t(e);let n=t.delaunay.hull,r=t.points;return 0===n.length?null:{type:"Polygon",coordinates:[[...n.map(e=>r[e]),r[n[0]]]]}},e?t(e):t})(A).triangles(),y=new Map(A.map(function(e,t){var n=cR(e,2),r=n[0],i=n[1];return["".concat(r,"-").concat(i),t]}));// geoDelaunay generates more triangles than needed
_.features.forEach(function(e){var t,n=e.geometry.coordinates[0].slice(0,3).reverse(),r=[];// reverse wound to match earcut
if(n.forEach(function(e){var t=cR(e,2),n=t[0],i=t[1],a="".concat(n,"-").concat(i);y.has(a)&&r.push(y.get(a))}),3===r.length){// exclude edge triangles outside polygon perimeter or through holes
if(r.some(function(e){return e<o.length})&&!cO(e.properties.circumcenter,l,g))return;(t=v).push.apply(t,r)}// triangle malfunction
})}else if(s.length){for(var x=lS.from(A),b=function(e){var t,n=[2,1,0].map(function(t){return x.triangles[e+t]}),r=n.map(function(e){return A[e]});// reverse wound to have same orientation as earcut
// exclude edge triangles outside polygon perimeter or through holes
if(n.some(function(e){return e<o.length})&&!cO([0,1].map(function(e){return function(e,t){let n=0,r=0;if(void 0===t)for(let t of e)null!=t&&(t=+t)>=t&&(++n,r+=t);else{let i=-1;for(let a of e)null!=(a=t(a,++i,e))&&(a=+a)>=a&&(++n,r+=a)}if(n)return r/n}(r,function(t){return t[e]})}),l,g))return"continue";(t=v).push.apply(t,cP(n))},M=0,w=x.triangles.length;M<w;M+=3)if("continue"===b(M))continue}else{// earcut triangulation slightly more performing if it's only using the polygon perimeter
var E=/*@__PURE__*/n(sr).flatten(a),S=E.vertices,T=E.holes;v=/*@__PURE__*/n(sr)(S,void 0===T?[]:T,2)}// calc uvs
var C=lf(lp(A,function(e){return e[0]}),[0,1]),R=lf(lp(A,function(e){return e[1]}),[0,1]),P=A.map(function(e){var t=cR(e,2),n=t[0],r=t[1];return[C(n),R(r)]});return{contour:a,triangles:{points:A,indices:v,uvs:P}}}(e,{resolution:l=l||5}),h=c.contour,d=c.triangles,f=lm(d.uvs),p=[],m=[],g=[],v=0,_=function(e){var t=Math.round(p.length/3),n=g.length;p=p.concat(e.vertices),m=m.concat(e.uvs),g=g.concat(t?e.indices.map(function(e){return e+t}):e.indices),u.addGroup(n,g.length-n,v++)};//
function y(e,t){var r=e.map(function(e){return e.map(function(e){var n=cR(e,2),r=n[0];return function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=(90-e)*Math.PI/180,i=(90-t)*Math.PI/180;return[n*Math.sin(r)*Math.cos(i),// x
n*Math.cos(r),// y
n*Math.sin(r)*Math.sin(i)// z
]}(n[1],r,t)})});// returns { vertices, holes, coordinates }. Each point generates 3 vertice items (x,y,z).
return /*@__PURE__*/n(sr).flatten(r)}function x(e){var t=!(arguments.length>1)||void 0===arguments[1]||arguments[1];return{// need to reverse-wind the bottom triangles to make them face outwards
indices:t?d.indices:d.indices.slice().reverse(),vertices:y([d.points],e).vertices,uvs:f}}return A&&_(function(){for(var e=y(h,t),n=e.vertices,i=e.holes,a=y(h,r).vertices,o=lm([a,n]),s=Math.round(a.length/3),A=new Set(i),l=0,u=[],c=0;c<s;c++){var d=c+1;// next point
if(d===s)d=l;// close final loop
else if(A.has(d)){var f=d;d=l,l=f}// Each pair of coords generates two triangles (faces)
u.push(c,c+s,d+s),u.push(d+s,d,c)}for(var p=[],m=1;m>=0;m--)for(var g=0;g<s;g+=1)p.push(g/(s-1),m);return{indices:u,vertices:o,uvs:p}}()),i&&_(x(t,!1)),s&&_(x(r,!0)),// build geometry
u.setIndex(g),u[cq]("position",new cI.Float32BufferAttribute(p,3)),u[cq]("uv",new cI.Float32BufferAttribute(m,2)),// auto-calculate normals
u.computeVertexNormals(),u}return r&&cS(o.prototype,r),i&&cS(o,i),Object.defineProperty(o,"prototype",{writable:!1}),o}(cI.BufferGeometry),cN=function(e){var t,n,r,i,a,o,s,A,l,u,c,h,d=void 0!==(e=e||{})?e:{},f={};for(t in d)d.hasOwnProperty(t)&&(f[t]=d[t]);var p=[],m="";"undefined"!=typeof document&&document.currentScript&&(m=document.currentScript.src),m=0!==m.indexOf("blob:")?m.substr(0,m.lastIndexOf("/")+1):"",n=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){if(200==r.status||0==r.status&&r.response){t(r.response);return}var i=X(e);if(i){t(i.buffer);return}n()},r.onerror=n,r.send(null)};var g=d.print||console.log.bind(console),v=d.printErr||console.warn.bind(console);for(t in f)f.hasOwnProperty(t)&&(d[t]=f[t]);f=null,d.arguments&&(p=d.arguments);var _=0,y=!1;function x(e){var t=d["_"+e];return t||ea("Assertion failed: Cannot call unknown function "+e+", make sure it is exported"),t}var b="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function M(e,t){return e?function(e,t,n){for(var r=t+n,i=t;e[i]&&!(i>=r);)++i;if(i-t>16&&e.subarray&&b)return b.decode(e.subarray(t,i));for(var a="";t<i;){var o=e[t++];if(!(128&o)){a+=String.fromCharCode(o);continue}var s=63&e[t++];if((224&o)==192){a+=String.fromCharCode((31&o)<<6|s);continue}var A=63&e[t++];if((o=(240&o)==224?(15&o)<<12|s<<6|A:(7&o)<<18|s<<12|A<<6|63&e[t++])<65536)a+=String.fromCharCode(o);else{var l=o-65536;a+=String.fromCharCode(55296|l>>10,56320|1023&l)}}return a}(a,e,t):""}function w(e,t){return e%t>0&&(e+=t-e%t),e}function E(e){r=e,d.HEAP8=i=new Int8Array(e),d.HEAP16=o=new Int16Array(e),d.HEAP32=s=new Int32Array(e),d.HEAPU8=a=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=new Uint32Array(e),d.HEAPF32=A=new Float32Array(e),d.HEAPF64=l=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");var S=d.TOTAL_MEMORY||33554432;function T(e){for(;e.length>0;){var t=e.shift();if("function"==typeof t){t();continue}var n=t.func;"number"==typeof n?void 0===t.arg?d.dynCall_v(n):d.dynCall_vi(n,t.arg):n(void 0===t.arg?null:t.arg)}}S=(r=d.buffer?d.buffer:new ArrayBuffer(S)).byteLength,E(r),s[6032]=5267040;var C=[],R=[],P=[],L=[],D=Math.abs,O=Math.ceil,I=Math.floor,q=Math.min,U=0,N=null,B=null;d.preloadedImages={},d.preloadedAudios={};var k=null,F="data:application/octet-stream;base64,";function z(e){return String.prototype.startsWith?e.startsWith(F):0===e.indexOf(F)}function G(e){return e.replace(/\b__Z[\w\d_]+/g,function(e){return e==e?e:e+" ["+e+"]"})}function H(){var e=Error();if(!e.stack){try{throw Error(0)}catch(t){e=t}if(!e.stack)return"(no stack trace available)"}return e.stack.toString()}function V(){return i.length}function j(e){try{var t=new ArrayBuffer(e);if(t.byteLength!=e)return;return new Int8Array(t).set(i),Y(t),E(t),1}catch(e){}}k="data:application/octet-stream;base64,AAAAAAAAAAAAAAAAAQAAAAIAAAADAAAABAAAAAUAAAAGAAAAAQAAAAQAAAADAAAABgAAAAUAAAACAAAAAAAAAAIAAAADAAAAAQAAAAQAAAAGAAAAAAAAAAUAAAADAAAABgAAAAQAAAAFAAAAAAAAAAEAAAACAAAABAAAAAUAAAAGAAAAAAAAAAIAAAADAAAAAQAAAAUAAAACAAAAAAAAAAEAAAADAAAABgAAAAQAAAAGAAAAAAAAAAUAAAACAAAAAQAAAAQAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAIAAAADAAAAAAAAAAAAAAACAAAAAAAAAAEAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAYAAAAAAAAABQAAAAAAAAAAAAAABAAAAAUAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAAAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAAAAAAAQAAAAMAAAAEAAAABQAAAAYAAAAAAAAAAQAAAAIAAAAEAAAABQAAAAYAAAAAAAAAAQAAAAIAAAADAAAABQAAAAYAAAAAAAAAAQAAAAIAAAADAAAABAAAAAYAAAAAAAAAAQAAAAIAAAADAAAABAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAAAAAAYAAAAAAAAAAwAAAAIAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAFAAAABAAAAAAAAAABAAAAAAAAAAAAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAYAAAAAAAAABAAAAAAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAFAAAAAgAAAAQAAAADAAAACAAAAAEAAAAHAAAABgAAAAkAAAAAAAAAAwAAAAIAAAACAAAABgAAAAoAAAALAAAAAAAAAAEAAAAFAAAAAwAAAA0AAAABAAAABwAAAAQAAAAMAAAAAAAAAAQAAAB/AAAADwAAAAgAAAADAAAAAAAAAAwAAAAFAAAAAgAAABIAAAAKAAAACAAAAAAAAAAQAAAABgAAAA4AAAALAAAAEQAAAAEAAAAJAAAAAgAAAAcAAAAVAAAACQAAABMAAAADAAAADQAAAAEAAAAIAAAABQAAABYAAAAQAAAABAAAAAAAAAAPAAAACQAAABMAAAAOAAAAFAAAAAEAAAAHAAAABgAAAAoAAAALAAAAGAAAABcAAAAFAAAAAgAAABIAAAALAAAAEQAAABcAAAAZAAAAAgAAAAYAAAAKAAAADAAAABwAAAANAAAAGgAAAAQAAAAPAAAAAwAAAA0AAAAaAAAAFQAAAB0AAAADAAAADAAAAAcAAAAOAAAAfwAAABEAAAAbAAAACQAAABQAAAAGAAAADwAAABYAAAAcAAAAHwAAAAQAAAAIAAAADAAAABAAAAASAAAAIQAAAB4AAAAIAAAABQAAABYAAAARAAAACwAAAA4AAAAGAAAAIwAAABkAAAAbAAAAEgAAABgAAAAeAAAAIAAAAAUAAAAKAAAAEAAAABMAAAAiAAAAFAAAACQAAAAHAAAAFQAAAAkAAAAUAAAADgAAABMAAAAJAAAAKAAAABsAAAAkAAAAFQAAACYAAAATAAAAIgAAAA0AAAAdAAAABwAAABYAAAAQAAAAKQAAACEAAAAPAAAACAAAAB8AAAAXAAAAGAAAAAsAAAAKAAAAJwAAACUAAAAZAAAAGAAAAH8AAAAgAAAAJQAAAAoAAAAXAAAAEgAAABkAAAAXAAAAEQAAAAsAAAAtAAAAJwAAACMAAAAaAAAAKgAAAB0AAAArAAAADAAAABwAAAANAAAAGwAAACgAAAAjAAAALgAAAA4AAAAUAAAAEQAAABwAAAAfAAAAKgAAACwAAAAMAAAADwAAABoAAAAdAAAAKwAAACYAAAAvAAAADQAAABoAAAAVAAAAHgAAACAAAAAwAAAAMgAAABAAAAASAAAAIQAAAB8AAAApAAAALAAAADUAAAAPAAAAFgAAABwAAAAgAAAAHgAAABgAAAASAAAANAAAADIAAAAlAAAAIQAAAB4AAAAxAAAAMAAAABYAAAAQAAAAKQAAACIAAAATAAAAJgAAABUAAAA2AAAAJAAAADMAAAAjAAAALgAAAC0AAAA4AAAAEQAAABsAAAAZAAAAJAAAABQAAAAiAAAAEwAAADcAAAAoAAAANgAAACUAAAAnAAAANAAAADkAAAAYAAAAFwAAACAAAAAmAAAAfwAAACIAAAAzAAAAHQAAAC8AAAAVAAAAJwAAACUAAAAZAAAAFwAAADsAAAA5AAAALQAAACgAAAAbAAAAJAAAABQAAAA8AAAALgAAADcAAAApAAAAMQAAADUAAAA9AAAAFgAAACEAAAAfAAAAKgAAADoAAAArAAAAPgAAABwAAAAsAAAAGgAAACsAAAA+AAAALwAAAEAAAAAaAAAAKgAAAB0AAAAsAAAANQAAADoAAABBAAAAHAAAAB8AAAAqAAAALQAAACcAAAAjAAAAGQAAAD8AAAA7AAAAOAAAAC4AAAA8AAAAOAAAAEQAAAAbAAAAKAAAACMAAAAvAAAAJgAAACsAAAAdAAAARQAAADMAAABAAAAAMAAAADEAAAAeAAAAIQAAAEMAAABCAAAAMgAAADEAAAB/AAAAPQAAAEIAAAAhAAAAMAAAACkAAAAyAAAAMAAAACAAAAAeAAAARgAAAEMAAAA0AAAAMwAAAEUAAAA2AAAARwAAACYAAAAvAAAAIgAAADQAAAA5AAAARgAAAEoAAAAgAAAAJQAAADIAAAA1AAAAPQAAAEEAAABLAAAAHwAAACkAAAAsAAAANgAAAEcAAAA3AAAASQAAACIAAAAzAAAAJAAAADcAAAAoAAAANgAAACQAAABIAAAAPAAAAEkAAAA4AAAARAAAAD8AAABNAAAAIwAAAC4AAAAtAAAAOQAAADsAAABKAAAATgAAACUAAAAnAAAANAAAADoAAAB/AAAAPgAAAEwAAAAsAAAAQQAAACoAAAA7AAAAPwAAAE4AAABPAAAAJwAAAC0AAAA5AAAAPAAAAEgAAABEAAAAUAAAACgAAAA3AAAALgAAAD0AAAA1AAAAMQAAACkAAABRAAAASwAAAEIAAAA+AAAAKwAAADoAAAAqAAAAUgAAAEAAAABMAAAAPwAAAH8AAAA4AAAALQAAAE8AAAA7AAAATQAAAEAAAAAvAAAAPgAAACsAAABUAAAARQAAAFIAAABBAAAAOgAAADUAAAAsAAAAVgAAAEwAAABLAAAAQgAAAEMAAABRAAAAVQAAADEAAAAwAAAAPQAAAEMAAABCAAAAMgAAADAAAABXAAAAVQAAAEYAAABEAAAAOAAAADwAAAAuAAAAWgAAAE0AAABQAAAARQAAADMAAABAAAAALwAAAFkAAABHAAAAVAAAAEYAAABDAAAANAAAADIAAABTAAAAVwAAAEoAAABHAAAAWQAAAEkAAABbAAAAMwAAAEUAAAA2AAAASAAAAH8AAABJAAAANwAAAFAAAAA8AAAAWAAAAEkAAABbAAAASAAAAFgAAAA2AAAARwAAADcAAABKAAAATgAAAFMAAABcAAAANAAAADkAAABGAAAASwAAAEEAAAA9AAAANQAAAF4AAABWAAAAUQAAAEwAAABWAAAAUgAAAGAAAAA6AAAAQQAAAD4AAABNAAAAPwAAAEQAAAA4AAAAXQAAAE8AAABaAAAATgAAAEoAAAA7AAAAOQAAAF8AAABcAAAATwAAAE8AAABOAAAAPwAAADsAAABdAAAAXwAAAE0AAABQAAAARAAAAEgAAAA8AAAAYwAAAFoAAABYAAAAUQAAAFUAAABeAAAAZQAAAD0AAABCAAAASwAAAFIAAABgAAAAVAAAAGIAAAA+AAAATAAAAEAAAABTAAAAfwAAAEoAAABGAAAAZAAAAFcAAABcAAAAVAAAAEUAAABSAAAAQAAAAGEAAABZAAAAYgAAAFUAAABXAAAAZQAAAGYAAABCAAAAQwAAAFEAAABWAAAATAAAAEsAAABBAAAAaAAAAGAAAABeAAAAVwAAAFMAAABmAAAAZAAAAEMAAABGAAAAVQAAAFgAAABIAAAAWwAAAEkAAABjAAAAUAAAAGkAAABZAAAAYQAAAFsAAABnAAAARQAAAFQAAABHAAAAWgAAAE0AAABQAAAARAAAAGoAAABdAAAAYwAAAFsAAABJAAAAWQAAAEcAAABpAAAAWAAAAGcAAABcAAAAUwAAAE4AAABKAAAAbAAAAGQAAABfAAAAXQAAAE8AAABaAAAATQAAAG0AAABfAAAAagAAAF4AAABWAAAAUQAAAEsAAABrAAAAaAAAAGUAAABfAAAAXAAAAE8AAABOAAAAbQAAAGwAAABdAAAAYAAAAGgAAABiAAAAbgAAAEwAAABWAAAAUgAAAGEAAAB/AAAAYgAAAFQAAABnAAAAWQAAAG8AAABiAAAAbgAAAGEAAABvAAAAUgAAAGAAAABUAAAAYwAAAFAAAABpAAAAWAAAAGoAAABaAAAAcQAAAGQAAABmAAAAUwAAAFcAAABsAAAAcgAAAFwAAABlAAAAZgAAAGsAAABwAAAAUQAAAFUAAABeAAAAZgAAAGUAAABXAAAAVQAAAHIAAABwAAAAZAAAAGcAAABbAAAAYQAAAFkAAAB0AAAAaQAAAG8AAABoAAAAawAAAG4AAABzAAAAVgAAAF4AAABgAAAAaQAAAFgAAABnAAAAWwAAAHEAAABjAAAAdAAAAGoAAABdAAAAYwAAAFoAAAB1AAAAbQAAAHEAAABrAAAAfwAAAGUAAABeAAAAcwAAAGgAAABwAAAAbAAAAGQAAABfAAAAXAAAAHYAAAByAAAAbQAAAG0AAABsAAAAXQAAAF8AAAB1AAAAdgAAAGoAAABuAAAAYgAAAGgAAABgAAAAdwAAAG8AAABzAAAAbwAAAGEAAABuAAAAYgAAAHQAAABnAAAAdwAAAHAAAABrAAAAZgAAAGUAAAB4AAAAcwAAAHIAAABxAAAAYwAAAHQAAABpAAAAdQAAAGoAAAB5AAAAcgAAAHAAAABkAAAAZgAAAHYAAAB4AAAAbAAAAHMAAABuAAAAawAAAGgAAAB4AAAAdwAAAHAAAAB0AAAAZwAAAHcAAABvAAAAcQAAAGkAAAB5AAAAdQAAAH8AAABtAAAAdgAAAHEAAAB5AAAAagAAAHYAAAB4AAAAbAAAAHIAAAB1AAAAeQAAAG0AAAB3AAAAbwAAAHMAAABuAAAAeQAAAHQAAAB4AAAAeAAAAHMAAAByAAAAcAAAAHkAAAB3AAAAdgAAAHkAAAB0AAAAeAAAAHcAAAB1AAAAcQAAAHYAAAAAAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAABAAAABQAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAACAAAABQAAAAEAAAAAAAAA/////wEAAAAAAAAAAwAAAAQAAAACAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAMAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAFAAAAAQAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAADAAAAAAAAAAAAAAABAAAAAAAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAADAAAABQAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAP////8DAAAAAAAAAAUAAAACAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAEAAAABQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAAFAAAABQAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAMAAAADAAAAAwAAAAAAAAADAAAAAAAAAAAAAAD/////AwAAAAAAAAAFAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAAAAAQAAAAAAAAADAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAADAAAAAAAAAP////8DAAAAAAAAAAUAAAACAAAAAAAAAAAAAAADAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAUAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAFAAAABQAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAAAAAADAAAAAAAAAAAAAAADAAAAAwAAAAMAAAAAAAAAAwAAAAAAAAAAAAAA/////wMAAAAAAAAABQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAA/////wMAAAAAAAAABQAAAAIAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAMAAAADAAAAAAAAAAAAAAADAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAwAAAAAAAAADAAAAAAAAAAMAAAADAAAAAwAAAAMAAAAAAAAAAwAAAAAAAAD/////AwAAAAAAAAAFAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAADAAAAAwAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAAAAAD/////AwAAAAAAAAAFAAAAAgAAAAAAAAAAAAAAAwAAAAMAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAFAAAAAAAAAAAAAAADAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAwAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAwAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAADAAAAAAAAAP////8DAAAAAAAAAAUAAAACAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAADAAAAAwAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAUAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAwAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAA/////wMAAAAAAAAABQAAAAIAAAAAAAAAAAAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAFAAAAAAAAAAAAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAQAAAAAAAAABAAAAAAAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAQAAAAAAAAABAAAAAAAAAAMAAAADAAAAAwAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAwAAAAUAAAABAAAAAAAAAP////8DAAAAAAAAAAUAAAACAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAABAAAAAUAAAABAAAAAAAAAAMAAAADAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAIAAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAADAAAAAQAAAAAAAAABAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAFAAAAAAAAAAAAAAD/////AQAAAAAAAAADAAAABAAAAAIAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAFAAAAAAAAAAAAAAAFAAAABQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAUAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAEAAAD//////////wEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAACAAAAAAAAAAAAAAABAAAAAgAAAAYAAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAcAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAKAAAAAgAAAAAAAAAAAAAAAQAAAAEAAAAFAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAACAAAAAAAAAAAAAAABAAAAAwAAAAcAAAAGAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAABwAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAADgAAAAIAAAAAAAAAAAAAAAEAAAAAAAAACQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAMAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAAAIAAAAAAAAAAAAAAAEAAAAEAAAACAAAAAoAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAALAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAACQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAgAAAAAAAAAAAAAAAQAAAAsAAAAPAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAOAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAIAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAABQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAAgAAAAAAAAAAAAAAAQAAAAwAAAAQAAAADAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAPAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAADwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAADQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAACAAAAAAAAAAAAAAABAAAACgAAABMAAAAIAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAOAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAEQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAACQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAIAAAAAAAAAAAAAAAEAAAANAAAAEQAAAA0AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAARAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAEwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAATAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAEQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAACAAAAAAAAAAAAAAABAAAADgAAABIAAAAPAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAADwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAASAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAEwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAABEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAABIAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAATAAAAAgAAAAAAAAAAAAAAAQAAAP//////////EwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAEgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAASAAAAAAAAABgAAAAAAAAAIQAAAAAAAAAeAAAAAAAAACAAAAADAAAAMQAAAAEAAAAwAAAAAwAAADIAAAADAAAACAAAAAAAAAAFAAAABQAAAAoAAAAFAAAAFgAAAAAAAAAQAAAAAAAAABIAAAAAAAAAKQAAAAEAAAAhAAAAAAAAAB4AAAAAAAAABAAAAAAAAAAAAAAABQAAAAIAAAAFAAAADwAAAAEAAAAIAAAAAAAAAAUAAAAFAAAAHwAAAAEAAAAWAAAAAAAAABAAAAAAAAAAAgAAAAAAAAAGAAAAAAAAAA4AAAAAAAAACgAAAAAAAAALAAAAAAAAABEAAAADAAAAGAAAAAEAAAAXAAAAAwAAABkAAAADAAAAAAAAAAAAAAABAAAABQAAAAkAAAAFAAAABQAAAAAAAAACAAAAAAAAAAYAAAAAAAAAEgAAAAEAAAAKAAAAAAAAAAsAAAAAAAAABAAAAAEAAAADAAAABQAAAAcAAAAFAAAACAAAAAEAAAAAAAAAAAAAAAEAAAAFAAAAEAAAAAEAAAAFAAAAAAAAAAIAAAAAAAAABwAAAAAAAAAVAAAAAAAAACYAAAAAAAAACQAAAAAAAAATAAAAAAAAACIAAAADAAAADgAAAAEAAAAUAAAAAwAAACQAAAADAAAAAwAAAAAAAAANAAAABQAAAB0AAAAFAAAAAQAAAAAAAAAHAAAAAAAAABUAAAAAAAAABgAAAAEAAAAJAAAAAAAAABMAAAAAAAAABAAAAAIAAAAMAAAABQAAABoAAAAFAAAAAAAAAAEAAAADAAAAAAAAAA0AAAAFAAAAAgAAAAEAAAABAAAAAAAAAAcAAAAAAAAAGgAAAAAAAAAqAAAAAAAAADoAAAAAAAAAHQAAAAAAAAArAAAAAAAAAD4AAAADAAAAJgAAAAEAAAAvAAAAAwAAAEAAAAADAAAADAAAAAAAAAAcAAAABQAAACwAAAAFAAAADQAAAAAAAAAaAAAAAAAAACoAAAAAAAAAFQAAAAEAAAAdAAAAAAAAACsAAAAAAAAABAAAAAMAAAAPAAAABQAAAB8AAAAFAAAAAwAAAAEAAAAMAAAAAAAAABwAAAAFAAAABwAAAAEAAAANAAAAAAAAABoAAAAAAAAAHwAAAAAAAAApAAAAAAAAADEAAAAAAAAALAAAAAAAAAA1AAAAAAAAAD0AAAADAAAAOgAAAAEAAABBAAAAAwAAAEsAAAADAAAADwAAAAAAAAAWAAAABQAAACEAAAAFAAAAHAAAAAAAAAAfAAAAAAAAACkAAAAAAAAAKgAAAAEAAAAsAAAAAAAAADUAAAAAAAAABAAAAAQAAAAIAAAABQAAABAAAAAFAAAADAAAAAEAAAAPAAAAAAAAABYAAAAFAAAAGgAAAAEAAAAcAAAAAAAAAB8AAAAAAAAAMgAAAAAAAAAwAAAAAAAAADEAAAADAAAAIAAAAAAAAAAeAAAAAwAAACEAAAADAAAAGAAAAAMAAAASAAAAAwAAABAAAAADAAAARgAAAAAAAABDAAAAAAAAAEIAAAADAAAANAAAAAMAAAAyAAAAAAAAADAAAAAAAAAAJQAAAAMAAAAgAAAAAAAAAB4AAAADAAAAUwAAAAAAAABXAAAAAwAAAFUAAAADAAAASgAAAAMAAABGAAAAAAAAAEMAAAAAAAAAOQAAAAEAAAA0AAAAAwAAADIAAAAAAAAAGQAAAAAAAAAXAAAAAAAAABgAAAADAAAAEQAAAAAAAAALAAAAAwAAAAoAAAADAAAADgAAAAMAAAAGAAAAAwAAAAIAAAADAAAALQAAAAAAAAAnAAAAAAAAACUAAAADAAAAIwAAAAMAAAAZAAAAAAAAABcAAAAAAAAAGwAAAAMAAAARAAAAAAAAAAsAAAADAAAAPwAAAAAAAAA7AAAAAwAAADkAAAADAAAAOAAAAAMAAAAtAAAAAAAAACcAAAAAAAAALgAAAAMAAAAjAAAAAwAAABkAAAAAAAAAJAAAAAAAAAAUAAAAAAAAAA4AAAADAAAAIgAAAAAAAAATAAAAAwAAAAkAAAADAAAAJgAAAAMAAAAVAAAAAwAAAAcAAAADAAAANwAAAAAAAAAoAAAAAAAAABsAAAADAAAANgAAAAMAAAAkAAAAAAAAABQAAAAAAAAAMwAAAAMAAAAiAAAAAAAAABMAAAADAAAASAAAAAAAAAA8AAAAAwAAAC4AAAADAAAASQAAAAMAAAA3AAAAAAAAACgAAAAAAAAARwAAAAMAAAA2AAAAAwAAACQAAAAAAAAAQAAAAAAAAAAvAAAAAAAAACYAAAADAAAAPgAAAAAAAAArAAAAAwAAAB0AAAADAAAAOgAAAAMAAAAqAAAAAwAAABoAAAADAAAAVAAAAAAAAABFAAAAAAAAADMAAAADAAAAUgAAAAMAAABAAAAAAAAAAC8AAAAAAAAATAAAAAMAAAA+AAAAAAAAACsAAAADAAAAYQAAAAAAAABZAAAAAwAAAEcAAAADAAAAYgAAAAMAAABUAAAAAAAAAEUAAAAAAAAAYAAAAAMAAABSAAAAAwAAAEAAAAAAAAAASwAAAAAAAABBAAAAAAAAADoAAAADAAAAPQAAAAAAAAA1AAAAAwAAACwAAAADAAAAMQAAAAMAAAApAAAAAwAAAB8AAAADAAAAXgAAAAAAAABWAAAAAAAAAEwAAAADAAAAUQAAAAMAAABLAAAAAAAAAEEAAAAAAAAAQgAAAAMAAAA9AAAAAAAAADUAAAADAAAAawAAAAAAAABoAAAAAwAAAGAAAAADAAAAZQAAAAMAAABeAAAAAAAAAFYAAAAAAAAAVQAAAAMAAABRAAAAAwAAAEsAAAAAAAAAOQAAAAAAAAA7AAAAAAAAAD8AAAADAAAASgAAAAAAAABOAAAAAwAAAE8AAAADAAAAUwAAAAMAAABcAAAAAwAAAF8AAAADAAAAJQAAAAAAAAAnAAAAAwAAAC0AAAADAAAANAAAAAAAAAA5AAAAAAAAADsAAAAAAAAARgAAAAMAAABKAAAAAAAAAE4AAAADAAAAGAAAAAAAAAAXAAAAAwAAABkAAAADAAAAIAAAAAMAAAAlAAAAAAAAACcAAAADAAAAMgAAAAMAAAA0AAAAAAAAADkAAAAAAAAALgAAAAAAAAA8AAAAAAAAAEgAAAADAAAAOAAAAAAAAABEAAAAAwAAAFAAAAADAAAAPwAAAAMAAABNAAAAAwAAAFoAAAADAAAAGwAAAAAAAAAoAAAAAwAAADcAAAADAAAAIwAAAAAAAAAuAAAAAAAAADwAAAAAAAAALQAAAAMAAAA4AAAAAAAAAEQAAAADAAAADgAAAAAAAAAUAAAAAwAAACQAAAADAAAAEQAAAAMAAAAbAAAAAAAAACgAAAADAAAAGQAAAAMAAAAjAAAAAAAAAC4AAAAAAAAARwAAAAAAAABZAAAAAAAAAGEAAAADAAAASQAAAAAAAABbAAAAAwAAAGcAAAADAAAASAAAAAMAAABYAAAAAwAAAGkAAAADAAAAMwAAAAAAAABFAAAAAwAAAFQAAAADAAAANgAAAAAAAABHAAAAAAAAAFkAAAAAAAAANwAAAAMAAABJAAAAAAAAAFsAAAADAAAAJgAAAAAAAAAvAAAAAwAAAEAAAAADAAAAIgAAAAMAAAAzAAAAAAAAAEUAAAADAAAAJAAAAAMAAAA2AAAAAAAAAEcAAAAAAAAAYAAAAAAAAABoAAAAAAAAAGsAAAADAAAAYgAAAAAAAABuAAAAAwAAAHMAAAADAAAAYQAAAAMAAABvAAAAAwAAAHcAAAADAAAATAAAAAAAAABWAAAAAwAAAF4AAAADAAAAUgAAAAAAAABgAAAAAAAAAGgAAAAAAAAAVAAAAAMAAABiAAAAAAAAAG4AAAADAAAAOgAAAAAAAABBAAAAAwAAAEsAAAADAAAAPgAAAAMAAABMAAAAAAAAAFYAAAADAAAAQAAAAAMAAABSAAAAAAAAAGAAAAAAAAAAVQAAAAAAAABXAAAAAAAAAFMAAAADAAAAZQAAAAAAAABmAAAAAwAAAGQAAAADAAAAawAAAAMAAABwAAAAAwAAAHIAAAADAAAAQgAAAAAAAABDAAAAAwAAAEYAAAADAAAAUQAAAAAAAABVAAAAAAAAAFcAAAAAAAAAXgAAAAMAAABlAAAAAAAAAGYAAAADAAAAMQAAAAAAAAAwAAAAAwAAADIAAAADAAAAPQAAAAMAAABCAAAAAAAAAEMAAAADAAAASwAAAAMAAABRAAAAAAAAAFUAAAAAAAAAXwAAAAAAAABcAAAAAAAAAFMAAAAAAAAATwAAAAAAAABOAAAAAAAAAEoAAAADAAAAPwAAAAEAAAA7AAAAAwAAADkAAAADAAAAbQAAAAAAAABsAAAAAAAAAGQAAAAFAAAAXQAAAAEAAABfAAAAAAAAAFwAAAAAAAAATQAAAAEAAABPAAAAAAAAAE4AAAAAAAAAdQAAAAQAAAB2AAAABQAAAHIAAAAFAAAAagAAAAEAAABtAAAAAAAAAGwAAAAAAAAAWgAAAAEAAABdAAAAAQAAAF8AAAAAAAAAWgAAAAAAAABNAAAAAAAAAD8AAAAAAAAAUAAAAAAAAABEAAAAAAAAADgAAAADAAAASAAAAAEAAAA8AAAAAwAAAC4AAAADAAAAagAAAAAAAABdAAAAAAAAAE8AAAAFAAAAYwAAAAEAAABaAAAAAAAAAE0AAAAAAAAAWAAAAAEAAABQAAAAAAAAAEQAAAAAAAAAdQAAAAMAAABtAAAABQAAAF8AAAAFAAAAcQAAAAEAAABqAAAAAAAAAF0AAAAAAAAAaQAAAAEAAABjAAAAAQAAAFoAAAAAAAAAaQAAAAAAAABYAAAAAAAAAEgAAAAAAAAAZwAAAAAAAABbAAAAAAAAAEkAAAADAAAAYQAAAAEAAABZAAAAAwAAAEcAAAADAAAAcQAAAAAAAABjAAAAAAAAAFAAAAAFAAAAdAAAAAEAAABpAAAAAAAAAFgAAAAAAAAAbwAAAAEAAABnAAAAAAAAAFsAAAAAAAAAdQAAAAIAAABqAAAABQAAAFoAAAAFAAAAeQAAAAEAAABxAAAAAAAAAGMAAAAAAAAAdwAAAAEAAAB0AAAAAQAAAGkAAAAAAAAAdwAAAAAAAABvAAAAAAAAAGEAAAAAAAAAcwAAAAAAAABuAAAAAAAAAGIAAAADAAAAawAAAAEAAABoAAAAAwAAAGAAAAADAAAAeQAAAAAAAAB0AAAAAAAAAGcAAAAFAAAAeAAAAAEAAAB3AAAAAAAAAG8AAAAAAAAAcAAAAAEAAABzAAAAAAAAAG4AAAAAAAAAdQAAAAEAAABxAAAABQAAAGkAAAAFAAAAdgAAAAEAAAB5AAAAAAAAAHQAAAAAAAAAcgAAAAEAAAB4AAAAAQAAAHcAAAAAAAAAcgAAAAAAAABwAAAAAAAAAGsAAAAAAAAAZAAAAAAAAABmAAAAAAAAAGUAAAADAAAAUwAAAAEAAABXAAAAAwAAAFUAAAADAAAAdgAAAAAAAAB4AAAAAAAAAHMAAAAFAAAAbAAAAAEAAAByAAAAAAAAAHAAAAAAAAAAXAAAAAEAAABkAAAAAAAAAGYAAAAAAAAAdQAAAAAAAAB5AAAABQAAAHcAAAAFAAAAbQAAAAEAAAB2AAAAAAAAAHgAAAAAAAAAXwAAAAEAAABsAAAAAQAAAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAGAAAAAgAAAAUAAAABAAAABAAAAAAAAAAAAAAABQAAAAMAAAABAAAABgAAAAQAAAACAAAAAAAAAH6iBfbytuk/Gq6akm/58z/Xrm0Liez0P5doSdOpSwRAWs602ULg8D/dT7Rcbo/1v1N1RQHFNOM/g9Snx7HW3L8HWsP8Q3jfP6VwOLosutk/9rjk1YQcxj+gnmKMsNn6P/HDeuPFY+M/YHwDjqKhB0Ci19/fCVrbP4UxKkDWOP6/pvljWa09tL9wi7wrQXjnv/Z6yLImkM2/3yTlOzY14D+m+WNZrT20PzwKVQnrQwNA9nrIsiaQzT/g40rFrRQFwPa45NWEHMa/kbslHEZq97/xw3rjxWPjv4cLC2SMBci/otff3wla27+rKF5oIAv0P1N1RQHFNOO/iDJPGyWHBUAHWsP8Q3jfvwQf/by16gXAfqIF9vK26b8XrO0Vh0r+v9eubQuJ7PS/BxLrA0ZZ479azrTZQuDwv1MK1EuItPw/yscgV9Z6FkAwHBR2WjQMQJNRzXsQ5vY/GlUHVJYKF0DONuFv2lMNQNCGZ28QJfk/0WUwoIL36D8ggDOMQuATQNqMOeAy/wZAWFYOYM+M2z/LWC4uH3oSQDE+LyTsMgRAkJzhRGWFGEDd4soovCQQQKqk0DJMEP8/rGmNdwOLBUAW2X/9xCbjP4hu3dcqJhNAzuYItRvdB0CgzW3zJW/sPxotm/Y2TxRAQAk9XmdDDEC1Kx9MKgT3P1M+NctcghZAFVqcLlb0C0Bgzd3sB2b2P77mZDPUWhZAFROHJpUGCEDAfma5CxXtPz1DWq/zYxRAmhYY5824F0DOuQKWSbAOQNCMqrvu3fs/L6DR22K2wT9nAAxPBU8RQGiN6mW43AFAZhu25b633D8c1YgmzowSQNM25BRKWARArGS08/lNxD+LFssHwmMRQLC5aNcxBgJABL9HT0WRF0CjCmJmOGEOQHsuaVzMP/s/TWJCaGGwBUCeu1PAPLzjP9nqN9DZOBNAKE4JcydbCkCGtbd1qjPzP8dgm9U8jhVAtPeKTkVwDkCeCLss5l37P401XMPLmBdAFd29VMVQDUBg0yA55h75Pz6odcYLCRdApBM4rBrkAkDyAVWgQxbRP4XDMnK20hFAymLlF7EmzD8GUgo9XBHlP3lbK7T9COc/k+OhPthhy7+YGEpnrOvCPzBFhLs15u4/epbqB6H4uz9IuuLF5svev6lzLKY31es/CaQ0envF5z8ZY0xlUADXv7zaz7HYEuI/CfbK1sn16T8uAQfWwxLWPzKn/YuFN94/5KdbC1AFu793fyCSnlfvPzK2y4doAMY/NRg5t1/X6b/shq4QJaHDP5yNIAKPOeI/vpn7BSE30r/X4YQrO6nrv78Ziv/Thto/DqJ1Y6+y5z9l51NaxFrlv8QlA65HOLS/86dxiEc96z+Hj0+LFjneP6LzBZ8LTc2/DaJ1Y6+y579l51NaxFrlP8QlA65HOLQ/8qdxiEc967+Jj0+LFjnev6LzBZ8LTc0/1qdbC1AFuz93fyCSnlfvvzK2y4doAMa/NRg5t1/X6T/vhq4QJaHDv5yNIAKPOeK/wJn7BSE30j/W4YQrO6nrP78Ziv/Thtq/CaQ0envF578XY0xlUADXP7zaz7HYEuK/CvbK1sn16b8rAQfWwxLWvzKn/YuFN96/zWLlF7EmzL8GUgo9XBHlv3lbK7T9COe/kOOhPthhyz+cGEpnrOvCvzBFhLs15u6/c5bqB6H4u79IuuLF5sveP6lzLKY31eu/AQAAAP////8HAAAA/////zEAAAD/////VwEAAP////9hCQAA/////6dBAAD/////kcsBAP/////3kAwA/////8H2VwAAAAAAAAAAAAAAAAACAAAA/////w4AAAD/////YgAAAP////+uAgAA/////8ISAAD/////ToMAAP////8ilwMA/////+4hGQD/////gu2vAAAAAAAAAAAAAAAAAAAAAAACAAAA//////////8BAAAAAwAAAP//////////////////////////////////////////////////////////////////////////AQAAAAAAAAACAAAA////////////////AwAAAP//////////////////////////////////////////////////////////////////////////AQAAAAAAAAACAAAA////////////////AwAAAP//////////////////////////////////////////////////////////////////////////AQAAAAAAAAACAAAA////////////////AwAAAP//////////////////////////////////////////////////////////AgAAAP//////////AQAAAAAAAAD/////////////////////AwAAAP////////////////////////////////////////////////////8DAAAA/////////////////////wAAAAD/////////////////////AQAAAP///////////////wIAAAD///////////////////////////////8DAAAA/////////////////////wAAAAD///////////////8CAAAAAQAAAP////////////////////////////////////////////////////8DAAAA/////////////////////wAAAAD///////////////8CAAAAAQAAAP////////////////////////////////////////////////////8DAAAA/////////////////////wAAAAD///////////////8CAAAAAQAAAP////////////////////////////////////////////////////8DAAAA/////////////////////wAAAAD///////////////8CAAAAAQAAAP////////////////////////////////////////////////////8BAAAAAgAAAP///////////////wAAAAD/////////////////////AwAAAP////////////////////////////////////////////////////8BAAAAAgAAAP///////////////wAAAAD/////////////////////AwAAAP////////////////////////////////////////////////////8BAAAAAgAAAP///////////////wAAAAD/////////////////////AwAAAP////////////////////////////////////////////////////8BAAAAAgAAAP///////////////wAAAAD/////////////////////AwAAAP///////////////////////////////wIAAAD///////////////8BAAAA/////////////////////wAAAAD/////////////////////AwAAAP////////////////////////////////////////////////////8DAAAA/////////////////////wAAAAABAAAA//////////8CAAAA//////////////////////////////////////////////////////////8DAAAA////////////////AgAAAAAAAAABAAAA//////////////////////////////////////////////////////////////////////////8DAAAA////////////////AgAAAAAAAAABAAAA//////////////////////////////////////////////////////////////////////////8DAAAA////////////////AgAAAAAAAAABAAAA//////////////////////////////////////////////////////////////////////////8DAAAAAQAAAP//////////AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAACAAAAAAAAAAIAAAABAAAAAQAAAAIAAAACAAAAAAAAAAUAAAAFAAAAAAAAAAIAAAACAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAgAAAAEAAAACAAAAAgAAAAIAAAAAAAAABQAAAAYAAAAAAAAAAgAAAAIAAAADAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAQAAAAMAAAACAAAAAgAAAAAAAAAFAAAABwAAAAAAAAACAAAAAgAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAAIAAAABAAAABAAAAAIAAAACAAAAAAAAAAUAAAAIAAAAAAAAAAIAAAACAAAAAwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAIAAAAAAAAAAgAAAAEAAAAAAAAAAgAAAAIAAAAAAAAABQAAAAkAAAAAAAAAAgAAAAIAAAADAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAAgAAAAIAAAAAAAAAAwAAAA4AAAACAAAAAAAAAAIAAAADAAAAAAAAAAAAAAACAAAAAgAAAAMAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAACAAAAAgAAAAAAAAADAAAACgAAAAIAAAAAAAAAAgAAAAMAAAABAAAAAAAAAAIAAAACAAAAAwAAAAcAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAIAAAACAAAAAAAAAAMAAAALAAAAAgAAAAAAAAACAAAAAwAAAAIAAAAAAAAAAgAAAAIAAAADAAAACAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAAgAAAAIAAAAAAAAAAwAAAAwAAAACAAAAAAAAAAIAAAADAAAAAwAAAAAAAAACAAAAAgAAAAMAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAACAAAAAgAAAAAAAAADAAAADQAAAAIAAAAAAAAAAgAAAAMAAAAEAAAAAAAAAAIAAAACAAAAAwAAAAoAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAIAAAACAAAAAAAAAAMAAAAGAAAAAgAAAAAAAAACAAAAAwAAAA8AAAAAAAAAAgAAAAIAAAADAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAgAAAAIAAAAAAAAAAwAAAAcAAAACAAAAAAAAAAIAAAADAAAAEAAAAAAAAAACAAAAAgAAAAMAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAACAAAAAgAAAAAAAAADAAAACAAAAAIAAAAAAAAAAgAAAAMAAAARAAAAAAAAAAIAAAACAAAAAwAAAA0AAAAAAAAAAAAAAAAAAAAAAAAACAAAAAIAAAACAAAAAAAAAAMAAAAJAAAAAgAAAAAAAAACAAAAAwAAABIAAAAAAAAAAgAAAAIAAAADAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAgAAAAIAAAAAAAAAAwAAAAUAAAACAAAAAAAAAAIAAAADAAAAEwAAAAAAAAACAAAAAgAAAAMAAAAPAAAAAAAAAAAAAAAAAAAAAAAAABAAAAACAAAAAAAAAAIAAAABAAAAEwAAAAIAAAACAAAAAAAAAAUAAAAKAAAAAAAAAAIAAAACAAAAAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAAIAAAAAAAAAAgAAAAEAAAAPAAAAAgAAAAIAAAAAAAAABQAAAAsAAAAAAAAAAgAAAAIAAAADAAAAEQAAAAAAAAAAAAAAAAAAAAAAAAASAAAAAgAAAAAAAAACAAAAAQAAABAAAAACAAAAAgAAAAAAAAAFAAAADAAAAAAAAAACAAAAAgAAAAMAAAASAAAAAAAAAAAAAAAAAAAAAAAAABMAAAACAAAAAAAAAAIAAAABAAAAEQAAAAIAAAACAAAAAAAAAAUAAAANAAAAAAAAAAIAAAACAAAAAwAAABMAAAAAAAAAAAAAAAAAAAAAAAAADwAAAAIAAAAAAAAAAgAAAAEAAAASAAAAAgAAAAIAAAAAAAAABQAAAA4AAAAAAAAAAgAAAAIAAAADAAAAAgAAAAEAAAAAAAAAAQAAAAIAAAAAAAAAAAAAAAIAAAABAAAAAAAAAAEAAAACAAAAAQAAAAAAAAACAAAAAAAAAAUAAAAEAAAAAAAAAAEAAAAFAAAAAAAAAAAAAAAFAAAABAAAAAAAAAABAAAABQAAAAQAAAAAAAAABQAAAAAAAAACAAAAAQAAAAAAAAABAAAAAgAAAAAAAAAAAAAAAgAAAAEAAAAAAAAAAQAAAAIAAAABAAAAAAAAAAIAAAACAAAAAAAAAAEAAAAAAAAAAAAAAAUAAAAEAAAAAAAAAAEAAAAFAAAAAAAAAAAAAAAFAAAABAAAAAAAAAABAAAABQAAAAQAAAAAAAAABQAAAAUAAAAAAAAAAQAAAAAAAAAAAAAAOgehWlKfUEEz1zLi+JsiQa2og3wcMfVAWCbHorc0yEDi+Yn/Y6mbQJ11/mfsnG9At6bnG4UQQkBvMCQWKqUUQJVmwwswmOc/3hVgVBL3uj//qqOEOdGOPw/WDN4gnGE/H3ANkCUgND+AA8btKgAHPwTXBqJVSdo+XfRQAqsKrj4fc+zLYbSPQklEmCZHv2FCUP+uDso1NEKYtPhwphUHQptxnyFXYdpB7CddZAMmrkGAt1AxSTqBQUibBVdTsFNBSuX3MV+AJkFocv82SLf5QAqmgj7AY81A23VDSEnLoEDGEJVSeDFzQDYrqvBk70VA8U157pcRGUBWfEF+ZKbsP7KBdLHZTpFAqKYk69AqekDbeGY41MdjQD8AZzHK501A1vcrrjubNkD5LnquvBYhQCbiRRD71QlAqt72EbOH8z8Eu+jL1YbdP4uaox/xUcY/abedg1XfsD+BsUdzJ4KZP5wE9YFySIM/rW1kAKMpbT+rZFthVRhWPy4PKlXIs0A/qMZLlwDnMEHByqEF0I0ZQQYSFD8lUQNBPpY+dFs07UAH8BZImBPWQN9RY0I0sMBA2T7kLfc6qUByFYvfhBKTQMq+0Mis1XxA0XQbeQXMZUBJJ5aEGXpQQP7/SY0a6ThAaMD92b/UIkAs8s8yqXoMQNIegOvCk/U/aOi7NZJP4D8AAAAA/////wAAAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////wAAAAD/////AAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA/////wAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAP////8AAAAABQAAAAAAAAAAAAAAAAAAAAAAAAD/////BQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAA/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////////////////////////8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////////////////////////////AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAABQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////////wAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAAAAAABAAAAAAAAAAUAAAABAAAAAQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAAAAAAAEAAQAAAQEAAAAAAAEAAAABAAAAAQABAAAAAAAAAAAAAAAAAAAAAAcAAAAHAAAAAQAAAAIAAAAEAAAAAwAAAAAAAAAAAAAABwAAAAMAAAABAAAAAgAAAAUAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAAAACAAAAAQAAAAMAAAAOAAAABgAAAAsAAAACAAAABwAAAAEAAAAYAAAABQAAAAoAAAABAAAABgAAAAAAAAAmAAAABwAAAAwAAAADAAAACAAAAAIAAAAxAAAACQAAAA4AAAAAAAAABQAAAAQAAAA6AAAACAAAAA0AAAAEAAAACQAAAAMAAAA/AAAACwAAAAYAAAAPAAAACgAAABAAAABIAAAADAAAAAcAAAAQAAAACwAAABEAAABTAAAACgAAAAUAAAATAAAADgAAAA8AAABhAAAADQAAAAgAAAARAAAADAAAABIAAABrAAAADgAAAAkAAAASAAAADQAAABMAAAB1AAAADwAAABMAAAARAAAAEgAAABAAAAAGAAAAAgAAAAMAAAAFAAAABAAAAAAAAAAAAAAAAAAAAAYAAAACAAAAAwAAAAEAAAAFAAAABAAAAAAAAAAAAAAABwAAAAUAAAADAAAABAAAAAEAAAAAAAAAAgAAAAAAAAACAAAAAwAAAAEAAAAFAAAABAAAAAYAAAAAAAAAAAAAAGFsZ29zLmMAaDNOZWlnaGJvclJvdGF0aW9ucwBjb29yZGlqay5jAF91cEFwN0NoZWNrZWQAX3VwQXA3ckNoZWNrZWQAZGlyZWN0ZWRFZGdlLmMAZGlyZWN0ZWRFZGdlVG9Cb3VuZGFyeQBhZGphY2VudEZhY2VEaXJbdG1wRmlqay5mYWNlXVtmaWprLmZhY2VdID09IEtJAGZhY2VpamsuYwBfZmFjZUlqa1BlbnRUb0NlbGxCb3VuZGFyeQBhZGphY2VudEZhY2VEaXJbY2VudGVySUpLLmZhY2VdW2ZhY2UyXSA9PSBLSQBfZmFjZUlqa1RvQ2VsbEJvdW5kYXJ5AGgzSW5kZXguYwBjb21wYWN0Q2VsbHMAbGF0TG5nVG9DZWxsAGNlbGxUb0NoaWxkUG9zAHZhbGlkYXRlQ2hpbGRQb3MAbGF0TG5nLmMAY2VsbEFyZWFSYWRzMgBwb2x5Z29uLT5uZXh0ID09IE5VTEwAbGlua2VkR2VvLmMAYWRkTmV3TGlua2VkUG9seWdvbgBuZXh0ICE9IE5VTEwAbG9vcCAhPSBOVUxMAGFkZE5ld0xpbmtlZExvb3AAcG9seWdvbi0+Zmlyc3QgPT0gTlVMTABhZGRMaW5rZWRMb29wAGNvb3JkICE9IE5VTEwAYWRkTGlua2VkQ29vcmQAbG9vcC0+Zmlyc3QgPT0gTlVMTABpbm5lckxvb3BzICE9IE5VTEwAbm9ybWFsaXplTXVsdGlQb2x5Z29uAGJib3hlcyAhPSBOVUxMAGNhbmRpZGF0ZXMgIT0gTlVMTABmaW5kUG9seWdvbkZvckhvbGUAY2FuZGlkYXRlQkJveGVzICE9IE5VTEwAcmV2RGlyICE9IElOVkFMSURfRElHSVQAbG9jYWxpai5jAGNlbGxUb0xvY2FsSWprAGJhc2VDZWxsICE9IG9yaWdpbkJhc2VDZWxsACEob3JpZ2luT25QZW50ICYmIGluZGV4T25QZW50KQBiYXNlQ2VsbCA9PSBvcmlnaW5CYXNlQ2VsbABiYXNlQ2VsbCAhPSBJTlZBTElEX0JBU0VfQ0VMTABsb2NhbElqa1RvQ2VsbAAhX2lzQmFzZUNlbGxQZW50YWdvbihiYXNlQ2VsbCkAYmFzZUNlbGxSb3RhdGlvbnMgPj0gMABncmlkUGF0aENlbGxzADAAdmVydGV4LmMAY2VsbFRvVmVydGV4AGdyYXBoLT5idWNrZXRzICE9IE5VTEwAdmVydGV4R3JhcGguYwBpbml0VmVydGV4R3JhcGgAbm9kZSAhPSBOVUxMAGFkZFZlcnRleE5vZGU=";var W="function"==typeof atob?atob:function(e){var t,n,r,i,a,o,s,A="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",l="",u=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");do i=A.indexOf(e.charAt(u++)),a=A.indexOf(e.charAt(u++)),o=A.indexOf(e.charAt(u++)),s=A.indexOf(e.charAt(u++)),t=i<<2|a>>4,n=(15&a)<<4|o>>2,r=(3&o)<<6|s,l+=String.fromCharCode(t),64!==o&&(l+=String.fromCharCode(n)),64!==s&&(l+=String.fromCharCode(r));while(u<e.length)return l};function X(e){if(z(e))return function(e){try{for(var t=W(e),n=new Uint8Array(t.length),r=0;r<t.length;++r)n[r]=t.charCodeAt(r);return n}catch(e){throw Error("Converting base64 string to bytes failed.")}}(e.slice(F.length))}var Q=/** @suppress {uselessCode} */function(e,t,n){var r=new e.Int8Array(n),i=new e.Int32Array(n),a=(new e.Uint8Array(n),new e.Float32Array(n),new e.Float64Array(n)),o=0|t.o,s=0|t.p,A=e.Math.floor,l=e.Math.abs,u=e.Math.sqrt,c=e.Math.pow,h=e.Math.cos,d=e.Math.sin,f=e.Math.tan,p=e.Math.acos,m=e.Math.asin,g=e.Math.atan,v=e.Math.atan2,_=e.Math.ceil,y=e.Math.imul,x=e.Math.min,b=e.Math.max,M=e.Math.clz32,w=t.b,E=t.c,S=t.d,T=t.e,C=t.f,R=t.g,P=t.h,L=t.i,D=24160;function O(e,t,n,r){return 0|I(e|=0,t|=0,n|=0,r|=0,0)}function I(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0,A=0,l=0,u=0;if(l=D,D=D+16|0,s=l,!(0|q(e,t,n,r,a)))return r=0,D=l,0|r;do if((0|n)>=0){if((0|n)>13780509){if(0|(o=0|ez(15,s)))break;s=0|i[(A=s)>>2],A=0|i[A+4>>2]}else o=((0|n)<0)<<31>>31,u=0|ta(0|n,0|o,3,0),o=0|ta(0|u,0|(A=0|E()),0|(o=0|te(0|n,0|o,1,0)),0|E()),o=0|te(0|o,0|E(),1,0),A=0|E(),i[s>>2]=o,i[s+4>>2]=A,s=o;if(tp(0|r,0,s<<3|0),0|a){tp(0|a,0,s<<2|0),o=0|U(e,t,n,r,a,s,A,0);break}(o=0|e9(s,4))?(u=0|U(e,t,n,r,o,s,A,0),e7(o),o=u):o=13}else o=2;while(0)return u=o,D=l,0|u}function q(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0;if(m=D,D=D+16|0,f=m,p=m+8|0,i[(d=f)>>2]=e,i[d+4>>2]=t,(0|n)<0)return p=2,D=m,0|p;if(i[(o=r)>>2]=e,i[o+4>>2]=t,(o=(0|a)!=0)&&(i[a>>2]=0),0|ew(e,t))return p=9,D=m,0|p;i[p>>2]=0;o:do if((0|n)>=1){if(o)for(c=1,u=0,h=0,d=1,o=e;;){if(!(u|h)){if(0|(o=0|N(o,t,4,p,f)))break o;if(0|ew(o=0|i[(t=f)>>2],t=0|i[t+4>>2])){o=9;break o}}if(0|(o=0|N(o,t,0|i[22384+(h<<2)>>2],p,f)))break o;if(o=0|i[(t=f)>>2],t=0|i[t+4>>2],i[(e=r+(c<<3)|0)>>2]=o,i[e+4>>2]=t,i[a+(c<<2)>>2]=d,s=(0|(e=u+1|0))==(0|d),l=(0|(A=h+1|0))==6,0|ew(o,t)){o=9;break o}if((0|(d=d+(l&s&1)|0))>(0|n)){o=0;break}c=c+1|0,u=s?0:e,h=s?l?0:A:h}else for(c=1,u=0,h=0,d=1,o=e;;){if(!(u|h)){if(0|(o=0|N(o,t,4,p,f)))break o;if(0|ew(o=0|i[(t=f)>>2],t=0|i[t+4>>2])){o=9;break o}}if(0|(o=0|N(o,t,0|i[22384+(h<<2)>>2],p,f)))break o;if(o=0|i[(t=f)>>2],t=0|i[t+4>>2],i[(e=r+(c<<3)|0)>>2]=o,i[e+4>>2]=t,s=(0|(e=u+1|0))==(0|d),l=(0|(A=h+1|0))==6,0|ew(o,t)){o=9;break o}if((0|(d=d+(l&s&1)|0))>(0|n)){o=0;break}c=c+1|0,u=s?0:e,h=s?l?0:A:h}}else o=0;while(0)return p=o,D=m,0|p}function U(e,t,n,r,a,o,s,A){e|=0,t|=0,n|=0,r|=0,a|=0,o|=0,s|=0,A|=0;var l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0;if(m=D,D=D+16|0,f=m+8|0,p=m,l=0|ts(0|e,0|t,0|o,0|s),c=0|E(),u=(0|(v=0|i[(g=h=r+(l<<3)|0)>>2]))==(0|e)&(0|(g=0|i[g+4>>2]))==(0|t),!((0|v)==0&(0|g)==0|u))do l=0|to(0|(l=0|te(0|l,0|c,1,0)),0|E(),0|o,0|s),c=0|E(),u=(0|(g=0|i[(v=h=r+(l<<3)|0)>>2]))==(0|e)&(0|(v=0|i[v+4>>2]))==(0|t);while(!((0|g)==0&(0|v)==0|u))if(l=a+(l<<2)|0,(u?(0|i[l>>2])<=(0|A):0)||(i[(v=h)>>2]=e,i[v+4>>2]=t,i[l>>2]=A,(0|A)>=(0|n)))return v=0,D=m,0|v;switch(u=A+1|0,i[f>>2]=0,0|(l=0|N(e,t,2,f,p))){case 9:d=9;break;case 0:(l=0|U(0|i[(l=p)>>2],0|i[l+4>>2],n,r,a,o,s,u))||(d=9)}o:do if((0|d)==9){switch(i[f>>2]=0,0|(l=0|N(e,t,3,f,p))){case 9:break;case 0:if(0|(l=0|U(0|i[(l=p)>>2],0|i[l+4>>2],n,r,a,o,s,u)))break o;break;default:break o}switch(i[f>>2]=0,0|(l=0|N(e,t,1,f,p))){case 9:break;case 0:if(0|(l=0|U(0|i[(l=p)>>2],0|i[l+4>>2],n,r,a,o,s,u)))break o;break;default:break o}switch(i[f>>2]=0,0|(l=0|N(e,t,5,f,p))){case 9:break;case 0:if(0|(l=0|U(0|i[(l=p)>>2],0|i[l+4>>2],n,r,a,o,s,u)))break o;break;default:break o}switch(i[f>>2]=0,0|(l=0|N(e,t,4,f,p))){case 9:break;case 0:if(0|(l=0|U(0|i[(l=p)>>2],0|i[l+4>>2],n,r,a,o,s,u)))break o;break;default:break o}switch(i[f>>2]=0,0|(l=0|N(e,t,6,f,p))){case 9:break;case 0:if(0|(l=0|U(0|i[(l=p)>>2],0|i[l+4>>2],n,r,a,o,s,u)))break o;break;default:break o}return v=0,D=m,0|v}while(0)return v=l,D=m,0|v}function N(e,t,n,r,a){e|=0,t|=0,r|=0,a|=0;var o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0;if((n|=0)>>>0>6)return 0|(a=1);if(h=(0|i[r>>2])%6|0,i[r>>2]=h,(0|h)>0){o=0;do n=0|es(n),o=o+1|0;while((0|o)<(0|i[r>>2]))}if(h=0|tl(0|e,0|t,45),E(),(c=127&h)>>>0>121)return 0|(a=5);l=0|eE(e,t),o=0|tl(0|e,0|t,52),E(),o&=15;o:do if(o){for(;;){if(A=0|tl(0|e,0|t,0|(s=(15-o|0)*3|0)),E(),(0|(A&=7))==7){t=5;break}if(p=(0|eR(o))==0,o=o+-1|0,d=0|tu(7,0,0|s),t&=~(0|E()),f=0|tu(0|i[(p?432:16)+(28*A|0)+(n<<2)>>2],0,0|s),s=0|E(),n=0|i[(p?640:224)+(28*A|0)+(n<<2)>>2],e=f|e&~d,t|=s,!n){n=0;break o}if(!o){u=8;break o}}return 0|t}else u=8;while(0)(0|u)==8&&(e|=f=0|tu(0|(p=0|i[848+(28*c|0)+(n<<2)>>2]),0,45),t=0|E()|-1040385&t,n=0|i[4272+(28*c|0)+(n<<2)>>2],(127&p|0)==127&&(p=0|tu(0|i[848+(28*c|0)+20>>2],0,45),t=0|E()|-1040385&t,n=0|i[4272+(28*c|0)+20>>2],e=0|eT(p|e,t),t=0|E(),i[r>>2]=(0|i[r>>2])+1)),A=0|tl(0|e,0|t,45),E(),A&=127;s:do if(0|F(A)){A:do if((0|eE(e,t))==1){if((0|c)!=(0|A)){if(0|H(A,0|i[7696+(28*c|0)>>2])){e=0|eC(e,t),s=1,t=0|E();break}S(23313,22416,436,22424)}switch(0|l){case 3:e=0|eT(e,t),t=0|E(),i[r>>2]=(0|i[r>>2])+1,s=0;break A;case 5:e=0|eC(e,t),t=0|E(),i[r>>2]=(0|i[r>>2])+5,s=0;break A;case 0:return 0|(p=9);default:return 0|(p=1)}}else s=0;while(0)if((0|n)>0){o=0;do e=0|eS(e,t),t=0|E(),o=o+1|0;while((0|o)!=(0|n))}if((0|c)!=(0|A)){if(!(0|z(A))){if((0|s)!=0|(0|eE(e,t))!=5)break;i[r>>2]=(0|i[r>>2])+1;break}switch(127&h){case 8:case 118:break s}(0|eE(e,t))!=3&&(i[r>>2]=(0|i[r>>2])+1)}}else if((0|n)>0){o=0;do e=0|eT(e,t),t=0|E(),o=o+1|0;while((0|o)!=(0|n))}while(0)return i[r>>2]=((0|i[r>>2])+n|0)%6|0,i[(p=a)>>2]=e,i[p+4>>2]=t,0|(p=0)}function B(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0,l=0,u=0;for(A=D,D=D+16|0,o=A,s=A+8|0,a=(a=(0|ew(e,t))==0)?1:2;;){if(i[s>>2]=0,(0|N(e,t,a,s,o))==0&((0|i[(l=o)>>2])==(0|n)?(0|i[l+4>>2])==(0|r):0)){e=4;break}if((a=a+1|0)>>>0>=7){a=7,e=4;break}}return(0|e)==4?(D=A,0|a):0}function k(e,t,n,r,s,u,c){e|=0,t|=0,n|=0,r|=0,s|=0,u|=0,c|=0;var h=0,d=0,f=0,p=0,m=0,g=0,v=0,y=0,b=0,M=0,w=0,S=0,T=0,C=0,R=0,P=0,L=0,O=0,I=0,q=0,U=0,N=0,B=0,k=0,F=0,z=0,G=0,H=0,V=0;if(F=D,D=D+64|0,U=F+48|0,N=F+32|0,B=F+24|0,R=F+8|0,P=F,(0|(d=0|i[e>>2]))<=0)return k=0,D=F,0|k;for(L=e+4|0,O=U+8|0,I=N+8|0,q=R+8|0,h=0,T=0;;){S=(f=0|i[L>>2])+(T<<4)|0,i[U>>2]=i[S>>2],i[U+4>>2]=i[S+4>>2],i[U+8>>2]=i[S+8>>2],i[U+12>>2]=i[S+12>>2],(0|T)==(d+-1|0)?(i[N>>2]=i[f>>2],i[N+4>>2]=i[f+4>>2],i[N+8>>2]=i[f+8>>2],i[N+12>>2]=i[f+12>>2]):(S=f+(T+1<<4)|0,i[N>>2]=i[S>>2],i[N+4>>2]=i[S+4>>2],i[N+8>>2]=i[S+8>>2],i[N+12>>2]=i[S+12>>2]),d=0|function(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var s=0,u=0,c=0,h=0,d=0,f=0,p=0;f=D,D=D+288|0,c=f+264|0,h=f+96|0,u=(s=d=f)+96|0;do i[s>>2]=0,s=s+4|0;while((0|s)<(0|u))return 0|(n=0|eq(n,d))?r=n:(eO(s=0|i[(n=d)>>2],n=0|i[n+4>>2],c),eI(s,n,h),p=+eF(c,h+8|0),p=+_(+(+eF(e,t)/(2*p))),a[o>>3]=p,n=~~p>>>0,s=+l(p)>=1?p>0?~~+x(+A(p/4294967296),4294967295)>>>0:~~+_((p-+(~~p>>>0))/4294967296)>>>0:0,(2146435072&i[o+4>>2]|0)==2146435072)?r=1:(d=(0|n)==0&(0|s)==0,i[r>>2]=d?1:n,i[r+4>>2]=d?0:s,r=0),D=f,0|r}(U,N,r,B);o:do if(d)f=0,h=d;else if(d=0|i[(f=B)>>2],(0|(f=0|i[f+4>>2]))>0|(0|f)==0&d>>>0>0){w=0,S=0;s:for(;;){if(V=+a[U>>3],H=+((M=0|tt(0|d,0|f,0|w,0|S))>>>0)+4294967296*+(0|E()),z=+(d>>>0)+4294967296*+(0|f),G=+(w>>>0)+4294967296*+(0|S),a[R>>3]=V*H/z+ +a[N>>3]*G/z,a[q>>3]=+a[O>>3]*H/z+ +a[I>>3]*G/z,0|(d=0|eP(R,r,P))){h=d;break}g=0|ts(0|(b=0|i[(M=P)>>2]),0|(M=0|i[M+4>>2]),0|t,0|n),p=0|E(),f=0|i[(m=d=c+(g<<3)|0)>>2],m=0|i[m+4>>2];A:do if((0|f)==0&(0|m)==0)C=d,k=16;else for(v=0,y=0;;){if((0|v)>(0|n)|(0|v)==(0|n)&y>>>0>t>>>0){h=1;break s}if((0|f)==(0|b)&(0|m)==(0|M))break A;if(g=0|to(0|(d=0|te(0|g,0|p,1,0)),0|E(),0|t,0|n),p=0|E(),y=0|te(0|y,0|v,1,0),v=0|E(),(0|(f=0|i[(m=d=c+(g<<3)|0)>>2]))==0&(0|(m=0|i[m+4>>2]))==0){C=d,k=16;break}}while(0)if(((0|k)==16?(k=0,!((0|b)==0&(0|M)==0)):0)&&(i[(y=C)>>2]=b,i[y+4>>2]=M,y=u+(i[s>>2]<<3)|0,i[y>>2]=b,i[y+4>>2]=M,y=0|te(0|i[(y=s)>>2],0|i[y+4>>2],1,0),b=0|E(),i[(M=s)>>2]=y,i[M+4>>2]=b),w=0|te(0|w,0|S,1,0),S=0|E(),d=0|i[(f=B)>>2],!((0|(f=0|i[f+4>>2]))>(0|S)|(0|f)==(0|S)&d>>>0>w>>>0)){f=1;break o}}f=0}else f=1;while(0)if(T=T+1|0,!f){k=21;break}if((0|T)>=(0|(d=0|i[e>>2]))){h=0,k=21;break}}return(0|k)==21?(D=F,0|h):0}function F(e){return(e|=0)>>>0>121?0|(e=0):0|(e=0|i[7696+(28*e|0)+16>>2])}function z(e){return(0|(e|=0))==4|(0|e)==117|0}function G(e){return 0|i[11120+((0|i[(e|=0)>>2])*216|0)+((0|i[e+4>>2])*72|0)+((0|i[e+8>>2])*24|0)+(i[e+12>>2]<<3)>>2]}function H(e,t){return(t|=0,(0|i[7696+(28*(e|=0)|0)+20>>2])==(0|t))?0|(t=1):0|(t=(0|i[7696+(28*e|0)+24>>2])==(0|t))}function V(e,t){return 0|i[848+(28*(e|=0)|0)+((t|=0)<<2)>>2]}function j(e,t){return(t|=0,(0|i[848+(28*(e|=0)|0)>>2])==(0|t))?0|(t=0):(0|i[848+(28*e|0)+4>>2])==(0|t)?0|(t=1):(0|i[848+(28*e|0)+8>>2])==(0|t)?0|(t=2):(0|i[848+(28*e|0)+12>>2])==(0|t)?0|(t=3):(0|i[848+(28*e|0)+16>>2])==(0|t)?0|(t=4):(0|i[848+(28*e|0)+20>>2])==(0|t)?0|(t=5):((0|i[848+(28*e|0)+24>>2])==(0|t)?6:7)|0}function W(e){return+a[(e|=0)+16>>3]<+a[e+24>>3]|0}function X(e,t){e|=0,t|=0;var n=0,r=0,i=0;return(n=+a[t>>3])>=+a[e+8>>3]&&n<=+a[e>>3]?(r=+a[e+16>>3],n=+a[e+24>>3],t=(i=+a[t+8>>3])>=n,e=i<=r&1,r<n?t&&(e=1):t||(e=0),0|(t=(0|e)!=0)):0|(t=0)}function Q(e,t,n){e|=0,t|=0,n|=0;var r=0,s=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,y=0,b=0,M=0;y=D,D=D+288|0,p=y+264|0,m=y+96|0,d=(h=f=y)+96|0;do i[h>>2]=0,h=h+4|0;while((0|h)<(0|d))return 0|(t=0|eq(t,f))||(eO(f=0|i[(d=f)>>2],d=0|i[d+4>>2],p),eI(f,d,m),c=+eF(p,m+8|0),a[p>>3]=+a[e>>3],a[(d=p+8|0)>>3]=+a[e+16>>3],a[m>>3]=+a[e+8>>3],a[(f=m+8|0)>>3]=+a[e+24>>3],s=+eF(p,m),u=+l(+(M=+a[d>>3]-+a[f>>3])),r=+l(+(b=+a[p>>3]-+a[m>>3])),(0==M|0==b?0:(M=+_(+(s*s/+th(+((M=+tc(+u,+r))/+th(+u,+r)),3)/(c*(2.59807621135*c)*.8))),a[o>>3]=M,g=~~M>>>0,v=+l(M)>=1?M>0?~~+x(+A(M/4294967296),4294967295)>>>0:~~+_((M-+(~~M>>>0))/4294967296)>>>0:0,(2146435072&i[o+4>>2]|0)!=2146435072))?(m=(0|g)==0&(0|v)==0,i[(t=n)>>2]=m?1:g,i[t+4>>2]=m?0:v,t=0):t=1),v=t,D=y,0|v}function Y(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0;t=0|i[e>>2],n=0|i[(s=e+4|0)>>2],(0|t)<0&&(n=n-t|0,i[s>>2]=n,i[(o=e+8|0)>>2]=(0|i[o>>2])-t,i[e>>2]=0,t=0),(0|n)<0?(t=t-n|0,i[e>>2]=t,a=(0|i[(o=e+8|0)>>2])-n|0,i[o>>2]=a,i[s>>2]=0,n=0):(o=a=e+8|0,a=0|i[a>>2]),(0|a)<0&&(t=t-a|0,i[e>>2]=t,n=n-a|0,i[s>>2]=n,i[o>>2]=0,a=0),(0|(r=(0|a)<(0|(r=(0|n)<(0|t)?n:t))?a:r))<=0||(i[e>>2]=t-r,i[s>>2]=n-r,i[o>>2]=a-r)}function Z(e,t){e|=0,t|=0;var n=0,r=0;r=0|i[e+8>>2],n=+((0|i[e+4>>2])-r|0),a[t>>3]=+((0|i[e>>2])-r|0)-.5*n,a[t+8>>3]=.8660254037844386*n}function K(e,t,n){e|=0,t|=0,i[(n|=0)>>2]=(0|i[t>>2])+(0|i[e>>2]),i[n+4>>2]=(0|i[t+4>>2])+(0|i[e+4>>2]),i[n+8>>2]=(0|i[t+8>>2])+(0|i[e+8>>2])}function J(e,t,n){e|=0,t|=0,i[(n|=0)>>2]=(0|i[e>>2])-(0|i[t>>2]),i[n+4>>2]=(0|i[e+4>>2])-(0|i[t+4>>2]),i[n+8>>2]=(0|i[e+8>>2])-(0|i[t+8>>2])}function $(e,t){e|=0,t|=0;var n=0,r=0;n=0|y(0|i[e>>2],t),i[e>>2]=n,r=0|y(0|i[(n=e+4|0)>>2],t),i[n>>2]=r,t=0|y(0|i[(e=e+8|0)>>2],t),i[e>>2]=t}function ee(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;A=(0|(s=0|i[e>>2]))<0,r=(0|(n=(0|(e=(n=(0|(a=((o=(0|(r=(0|i[e+4>>2])-(A?s:0)|0))<0)?0-r|0:0)+((0|i[e+8>>2])-(A?s:0))|0))<0)?0:a))<(0|(n=(0|(t=(o?0:r)-(n?a:0)|0))<(0|(a=(A?0:s)-(o?r:0)-(n?a:0)|0))?t:a))?e:n))>0,e=e-(r?n:0)|0,t=t-(r?n:0)|0;o:do switch(a-(r?n:0)|0){case 0:switch(0|t){case 0:return 0|(A=(0|e)==0?0:(0|e)==1?1:7);case 1:return 0|(A=(0|e)==0?2:(0|e)==1?3:7);default:break o}case 1:switch(0|t){case 0:return 0|(A=(0|e)==0?4:(0|e)==1?5:7);case 1:if(e)break o;return 0|(e=6);default:break o}}while(0)return 0|(A=7)}function et(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;n=0|i[(s=e+8|0)>>2],r=0|e6(+(((t=(0|i[e>>2])-n|0)<<1)+(n=(0|i[(A=e+4|0)>>2])-n|0)|0)/7),i[e>>2]=r,t=0|e6(+((3*n|0)-t|0)/7),i[A>>2]=t,i[s>>2]=0,n=t-r|0,(0|r)<0?(o=0-r|0,i[A>>2]=n,i[s>>2]=o,i[e>>2]=0,t=n,r=0,n=o):n=0,(0|t)<0&&(r=r-t|0,i[e>>2]=r,n=n-t|0,i[s>>2]=n,i[A>>2]=0,t=0),o=r-n|0,a=t-n|0,(0|n)<0?(i[e>>2]=o,i[A>>2]=a,i[s>>2]=0,t=a,a=o,n=0):a=r,(0|(r=(0|n)<(0|(r=(0|t)<(0|a)?t:a))?n:r))<=0||(i[e>>2]=a-r,i[A>>2]=t-r,i[s>>2]=n-r)}function en(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;t=0|i[e>>2],n=0|i[(s=e+4|0)>>2],r=0|i[(A=e+8|0)>>2],a=n+(3*t|0)|0,i[e>>2]=a,n=r+(3*n|0)|0,i[s>>2]=n,t=(3*r|0)+t|0,i[A>>2]=t,r=n-a|0,(0|a)<0?(t=t-a|0,i[s>>2]=r,i[A>>2]=t,i[e>>2]=0,n=r,r=0):r=a,(0|n)<0&&(r=r-n|0,i[e>>2]=r,t=t-n|0,i[A>>2]=t,i[s>>2]=0,n=0),o=r-t|0,a=n-t|0,(0|t)<0?(i[e>>2]=o,i[s>>2]=a,i[A>>2]=0,r=o,t=0):a=n,(0|(n=(0|t)<(0|(n=(0|a)<(0|r)?a:r))?t:n))<=0||(i[e>>2]=r-n,i[s>>2]=a-n,i[A>>2]=t-n)}function er(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;a=0|i[e>>2],t=0|i[(s=e+4|0)>>2],n=0|i[(A=e+8|0)>>2],r=(3*t|0)+a|0,a=n+(3*a|0)|0,i[e>>2]=a,i[s>>2]=r,t=(3*n|0)+t|0,i[A>>2]=t,n=r-a|0,(0|a)<0?(t=t-a|0,i[s>>2]=n,i[A>>2]=t,i[e>>2]=0,a=0):n=r,(0|n)<0&&(a=a-n|0,i[e>>2]=a,t=t-n|0,i[A>>2]=t,i[s>>2]=0,n=0),o=a-t|0,r=n-t|0,(0|t)<0?(i[e>>2]=o,i[s>>2]=r,i[A>>2]=0,a=o,t=0):r=n,(0|(n=(0|t)<(0|(n=(0|r)<(0|a)?r:a))?t:n))<=0||(i[e>>2]=a-n,i[s>>2]=r-n,i[A>>2]=t-n)}function ei(e,t){e|=0;var n=0,r=0,a=0,o=0,s=0,A=0;!(((t|=0)+-1|0)>>>0>=6)&&(a=(0|i[15440+(12*t|0)>>2])+(0|i[e>>2])|0,i[e>>2]=a,A=e+4|0,r=(0|i[15440+(12*t|0)+4>>2])+(0|i[A>>2])|0,i[A>>2]=r,s=e+8|0,t=(0|i[15440+(12*t|0)+8>>2])+(0|i[s>>2])|0,i[s>>2]=t,n=r-a|0,(0|a)<0?(t=t-a|0,i[A>>2]=n,i[s>>2]=t,i[e>>2]=0,r=0):(n=r,r=a),(0|n)<0&&(r=r-n|0,i[e>>2]=r,t=t-n|0,i[s>>2]=t,i[A>>2]=0,n=0),o=r-t|0,a=n-t|0,(0|t)<0?(i[e>>2]=o,i[A>>2]=a,i[s>>2]=0,r=o,t=0):a=n,(0|(n=(0|t)<(0|(n=(0|a)<(0|r)?a:r))?t:n))<=0||(i[e>>2]=r-n,i[A>>2]=a-n,i[s>>2]=t-n))}function ea(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;a=0|i[e>>2],t=0|i[(s=e+4|0)>>2],n=0|i[(A=e+8|0)>>2],r=t+a|0,a=n+a|0,i[e>>2]=a,i[s>>2]=r,t=n+t|0,i[A>>2]=t,n=r-a|0,(0|a)<0?(t=t-a|0,i[s>>2]=n,i[A>>2]=t,i[e>>2]=0,r=0):(n=r,r=a),(0|n)<0&&(r=r-n|0,i[e>>2]=r,t=t-n|0,i[A>>2]=t,i[s>>2]=0,n=0),o=r-t|0,a=n-t|0,(0|t)<0?(i[e>>2]=o,i[s>>2]=a,i[A>>2]=0,r=o,t=0):a=n,(0|(n=(0|t)<(0|(n=(0|a)<(0|r)?a:r))?t:n))<=0||(i[e>>2]=r-n,i[s>>2]=a-n,i[A>>2]=t-n)}function eo(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;t=0|i[e>>2],r=0|i[(s=e+4|0)>>2],n=0|i[(A=e+8|0)>>2],a=r+t|0,i[e>>2]=a,r=n+r|0,i[s>>2]=r,t=n+t|0,i[A>>2]=t,n=r-a|0,(0|a)<0?(t=t-a|0,i[s>>2]=n,i[A>>2]=t,i[e>>2]=0,r=0):(n=r,r=a),(0|n)<0&&(r=r-n|0,i[e>>2]=r,t=t-n|0,i[A>>2]=t,i[s>>2]=0,n=0),o=r-t|0,a=n-t|0,(0|t)<0?(i[e>>2]=o,i[s>>2]=a,i[A>>2]=0,r=o,t=0):a=n,(0|(n=(0|t)<(0|(n=(0|a)<(0|r)?a:r))?t:n))<=0||(i[e>>2]=r-n,i[s>>2]=a-n,i[A>>2]=t-n)}function es(e){switch(0|(e|=0)){case 1:e=5;break;case 5:e=4;break;case 4:e=6;break;case 6:e=2;break;case 2:e=3;break;case 3:e=1}return 0|e}function eA(e){switch(0|(e|=0)){case 1:e=3;break;case 3:e=2;break;case 2:e=6;break;case 6:e=4;break;case 4:e=5;break;case 5:e=1}return 0|e}function el(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;t=0|i[e>>2],n=0|i[(s=e+4|0)>>2],r=0|i[(A=e+8|0)>>2],a=n+(t<<1)|0,i[e>>2]=a,n=r+(n<<1)|0,i[s>>2]=n,t=(r<<1)+t|0,i[A>>2]=t,r=n-a|0,(0|a)<0?(t=t-a|0,i[s>>2]=r,i[A>>2]=t,i[e>>2]=0,n=r,r=0):r=a,(0|n)<0&&(r=r-n|0,i[e>>2]=r,t=t-n|0,i[A>>2]=t,i[s>>2]=0,n=0),o=r-t|0,a=n-t|0,(0|t)<0?(i[e>>2]=o,i[s>>2]=a,i[A>>2]=0,r=o,t=0):a=n,(0|(n=(0|t)<(0|(n=(0|a)<(0|r)?a:r))?t:n))<=0||(i[e>>2]=r-n,i[s>>2]=a-n,i[A>>2]=t-n)}function eu(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;a=0|i[e>>2],t=0|i[(s=e+4|0)>>2],n=0|i[(A=e+8|0)>>2],r=(t<<1)+a|0,a=n+(a<<1)|0,i[e>>2]=a,i[s>>2]=r,t=(n<<1)+t|0,i[A>>2]=t,n=r-a|0,(0|a)<0?(t=t-a|0,i[s>>2]=n,i[A>>2]=t,i[e>>2]=0,a=0):n=r,(0|n)<0&&(a=a-n|0,i[e>>2]=a,t=t-n|0,i[A>>2]=t,i[s>>2]=0,n=0),o=a-t|0,r=n-t|0,(0|t)<0?(i[e>>2]=o,i[s>>2]=r,i[A>>2]=0,a=o,t=0):r=n,(0|(n=(0|t)<(0|(n=(0|r)<(0|a)?r:a))?t:n))<=0||(i[e>>2]=a-n,i[s>>2]=r-n,i[A>>2]=t-n)}function ec(e,t){e|=0,t|=0;var n=0,r=0,a=0,o=0,s=0,A=0;return A=(0|(s=(0|i[e>>2])-(0|i[t>>2])|0))<0,o=(0|(r=(0|i[e+4>>2])-(0|i[t+4>>2])-(A?s:0)|0))<0,r=(0|(e=(0|(t=(e=(0|(a=(A?0-s|0:0)+(0|i[e+8>>2])-(0|i[t+8>>2])+(o?0-r|0:0)|0))<0)?0:a))<(0|(e=(0|(n=(o?0:r)-(e?a:0)|0))<(0|(a=(A?0:s)-(o?r:0)-(e?a:0)|0))?n:a))?t:e))>0,t=t-(r?e:0)|0,n=n-(r?e:0)|0,((0|(e=(0|(e=a-(r?e:0)|0))>-1?e:0-e|0))>(0|(t=(0|(n=(0|n)>-1?n:0-n|0))>(0|(t=(0|t)>-1?t:0-t|0))?n:t))?e:t)|0}function eh(e){e|=0;var t=0,n=0,r=0,a=0;n=(a=0|i[(t=e+8|0)>>2])-(0|i[e>>2])|0,i[e>>2]=n,e=(0|i[(r=e+4|0)>>2])-a|0,i[r>>2]=e,i[t>>2]=0-(e+n)}function ed(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0,s=0;return(s=D,D=D+16|0,a=s,o=-2130706433&t|134217728,!0&(2013265920&t|0)==268435456)?(r=0|tl(0|e,0|t,56),E(),(0|(r=0|function(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0;if(o=D,D=D+16|0,a=o,r=0|ew(e,t),(n+-1|0)>>>0>5||(0|n)==1&(r=(0|r)!=0))return a=-1,D=o,0|a;do if(0|e0(e,t,a))r=-1;else{if(r){r=((0|i[21936+(n<<2)>>2])+5-(0|i[a>>2])|0)%5|0;break}r=((0|i[21968+(n<<2)>>2])+6-(0|i[a>>2])|0)%6|0;break}while(0)return a=r,D=o,0|a}(e,o,7&r)))==-1)?(i[n>>2]=0,o=6):(0|eD(e,o,a)&&S(23313,22484,282,22499),t=0|tl(0|e,0|t,52),E(),t&=15,0|ew(e,o)?ep(a,t,r,2,n):ev(a,t,r,2,n),o=0):o=6,D=s,0|o}function ef(e,t,n,r,o){e|=0,t|=0,n|=0,r|=0,o|=0;var s,A,c,f=0,p=0;if((f=+(A=0,c=0,+ +u(+((c=+a[(s=0|e)>>3])*c+(A=+a[s+8>>3])*A))))<1e-16){t=15600+(t<<4)|0,i[o>>2]=i[t>>2],i[o+4>>2]=i[t+4>>2],i[o+8>>2]=i[t+8>>2],i[o+12>>2]=i[t+12>>2];return}if(p=+v(+ +a[e+8>>3],+ +a[e>>3]),(0|n)>0){e=0;do f/=2.6457513110645907,e=e+1|0;while((0|e)!=(0|n))}r?(f/=3,f=+g(+(((n=(0|eR(n))==0)?f:f/2.6457513110645907)*.381966011250105))):(f=+g(+(.381966011250105*f)),0|eR(n)&&(p=+eB(p+.3334731722518321))),function(e,t,n,r){e|=0,t=+t,r|=0;var o=0,s=0,A=0,u=0;if((n=+n)<1e-16){i[r>>2]=i[e>>2],i[r+4>>2]=i[e+4>>2],i[r+8>>2]=i[e+8>>2],i[r+12>>2]=i[e+12>>2];return}s=t<0?t+6.283185307179586:t,s=t>=6.283185307179586?s+-6.283185307179586:s;do if(s<1e-16)t=+a[e>>3]+n,a[r>>3]=t,o=r;else{if(o=1e-16>+l(+(s+-3.141592653589793)),t=+a[e>>3],o){t-=n,a[r>>3]=t,o=r;break}if(A=+h(+n),n=+d(+n),t=+m(+((t=(t=A*+d(+t)+ +h(+s)*(n*+h(+t)))>1?1:t)<-1?-1:t)),a[r>>3]=t,1e-16>+l(+(t+-1.5707963267948966))){a[r>>3]=1.5707963267948966,a[r+8>>3]=0;return}if(1e-16>+l(+(t+1.5707963267948966))){a[r>>3]=-1.5707963267948966,a[r+8>>3]=0;return}if(u=+h(+t),s=n*+d(+s)/u,n=+a[e>>3],t=(A-+d(+t)*+d(+n))/+h(+n)/u,A=s>1?1:s,t=t>1?1:t,(t=+a[e+8>>3]+ +v(+(A<-1?-1:A),+(t<-1?-1:t)))>3.141592653589793)do t+=-6.283185307179586;while(t>3.141592653589793)if(t<-3.141592653589793)do t+=6.283185307179586;while(t<-3.141592653589793)a[r+8>>3]=t;return}while(0)if(1e-16>+l(+(t+-1.5707963267948966))){a[o>>3]=1.5707963267948966,a[r+8>>3]=0;return}if(1e-16>+l(+(t+1.5707963267948966))){a[o>>3]=-1.5707963267948966,a[r+8>>3]=0;return}if((t=+a[e+8>>3])>3.141592653589793)do t+=-6.283185307179586;while(t>3.141592653589793)if(t<-3.141592653589793)do t+=6.283185307179586;while(t<-3.141592653589793)a[r+8>>3]=t}(15600+(t<<4)|0,+eB(+a[15920+(24*t|0)>>3]-p),f,o)}function ep(e,t,n,r,o){e|=0,t|=0,n|=0,r|=0,o|=0;var s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0,b=0,M=0,w=0,E=0,T=0,C=0,R=0,P=0,L=0,O=0,I=0,q=0,U=0;if(I=D,D=D+272|0,s=I+256|0,y=I+240|0,P=I,L=I+224|0,O=I+208|0,x=I+176|0,b=I+160|0,M=I+192|0,w=I+144|0,E=I+128|0,T=I+112|0,C=I+96|0,R=I+80|0,i[s>>2]=t,i[y>>2]=i[e>>2],i[y+4>>2]=i[e+4>>2],i[y+8>>2]=i[e+8>>2],i[y+12>>2]=i[e+12>>2],em(y,s,P),i[o>>2]=0,(0|(y=r+n+((0|r)==5&1)|0))<=(0|n)){D=I;return}u=0|i[s>>2],c=L+4|0,h=x+4|0,d=n+5|0,f=16880+(u<<2)|0,p=16960+(u<<2)|0,m=E+8|0,g=T+8|0,v=C+8|0,_=O+4|0,l=n;o:for(;;){A=P+(((0|l)%5|0)<<4)|0,i[O>>2]=i[A>>2],i[O+4>>2]=i[A+4>>2],i[O+8>>2]=i[A+8>>2],i[O+12>>2]=i[A+12>>2];do;while((0|eg(O,u,0,1))==2)if((0|l)>(0|n)&(0|eR(t))!=0){if(i[x>>2]=i[O>>2],i[x+4>>2]=i[O+4>>2],i[x+8>>2]=i[O+8>>2],i[x+12>>2]=i[O+12>>2],Z(c,b),r=0|i[x>>2],s=0|i[17040+(80*r|0)+(i[L>>2]<<2)>>2],i[x>>2]=i[18640+(80*r|0)+(20*s|0)>>2],(0|(A=0|i[18640+(80*r|0)+(20*s|0)+16>>2]))>0){e=0;do ea(h),e=e+1|0;while((0|e)<(0|A))}switch(A=18640+(80*r|0)+(20*s|0)+4|0,i[M>>2]=i[A>>2],i[M+4>>2]=i[A+4>>2],i[M+8>>2]=i[A+8>>2],$(M,(0|i[f>>2])*3|0),K(h,M,h),Y(h),Z(h,w),q=+(0|i[p>>2]),a[E>>3]=3*q,a[m>>3]=0,U=-1.5*q,a[T>>3]=U,a[g>>3]=2.598076211353316*q,a[C>>3]=U,a[v>>3]=-2.598076211353316*q,0|i[17040+((0|i[x>>2])*80|0)+(i[O>>2]<<2)>>2]){case 1:e=T,r=E;break;case 3:e=C,r=T;break;case 2:e=E,r=C;break;default:e=12;break o}eK(b,w,r,e,R),ef(R,0|i[x>>2],u,1,o+8+(i[o>>2]<<4)|0),i[o>>2]=(0|i[o>>2])+1}if((0|l)<(0|d)&&(Z(_,x),ef(x,0|i[O>>2],u,1,o+8+(i[o>>2]<<4)|0),i[o>>2]=(0|i[o>>2])+1),i[L>>2]=i[O>>2],i[L+4>>2]=i[O+4>>2],i[L+8>>2]=i[O+8>>2],i[L+12>>2]=i[O+12>>2],(0|(l=l+1|0))>=(0|y)){e=3;break}}if((0|e)==3){D=I;return}(0|e)==12&&S(22522,22569,571,22579)}function em(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0,s=0,A=0,l=0;l=D,D=D+128|0,r=l+64|0,a=l,s=20240,A=(o=r)+60|0;do i[o>>2]=i[s>>2],o=o+4|0,s=s+4|0;while((0|o)<(0|A))s=20304,A=(o=a)+60|0;do i[o>>2]=i[s>>2],o=o+4|0,s=s+4|0;while((0|o)<(0|A))r=(A=(0|eR(0|i[t>>2]))==0)?r:a,el(a=e+4|0),eu(a),0|eR(0|i[t>>2])&&(er(a),i[t>>2]=(0|i[t>>2])+1),i[n>>2]=i[e>>2],K(a,r,t=n+4|0),Y(t),i[n+16>>2]=i[e>>2],K(a,r+12|0,t=n+20|0),Y(t),i[n+32>>2]=i[e>>2],K(a,r+24|0,t=n+36|0),Y(t),i[n+48>>2]=i[e>>2],K(a,r+36|0,t=n+52|0),Y(t),i[n+64>>2]=i[e>>2],K(a,r+48|0,n=n+68|0),Y(n),D=l}function eg(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a,o,s,A,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0;if(_=D,D=D+32|0,g=_+12|0,h=_,v=e+4|0,m=0|i[16960+(t<<2)>>2],m=(p=(0|r)!=0)?3*m|0:m,l=0|i[v>>2],c=0|i[(f=e+8|0)>>2],p){if((0|(l=c+l+(r=0|i[(u=e+12|0)>>2])|0))==(0|m))return v=1,D=_,0|v;d=u}else l=c+l+(r=0|i[(d=e+12|0)>>2])|0;if((0|l)<=(0|m))return v=0,D=_,0|v;do if((0|r)>0){if(r=0|i[e>>2],(0|c)>0){u=18640+(80*r|0)+60|0,r=e;break}r=18640+(80*r|0)+40|0,n&&(a=g,s=0,A=0,o=0|m,s|=0,A|=0,i[(a|=0)>>2]=o,i[a+4>>2]=s,i[a+8>>2]=A,J(v,g,h),eo(h),K(h,g,v)),u=r,r=e}else u=18640+((0|i[e>>2])*80|0)+20|0,r=e;while(0)if(i[r>>2]=i[u>>2],(0|i[(l=u+16|0)>>2])>0){r=0;do ea(v),r=r+1|0;while((0|r)<(0|i[l>>2]))}return e=u+4|0,i[g>>2]=i[e>>2],i[g+4>>2]=i[e+4>>2],i[g+8>>2]=i[e+8>>2],t=0|i[16880+(t<<2)>>2],$(g,p?3*t|0:t),K(v,g,v),Y(v),v=r=p&&((0|i[f>>2])+(0|i[v>>2])+(0|i[d>>2])|0)==(0|m)?1:2,D=_,0|v}function ev(e,t,n,r,o){e|=0,t|=0,n|=0,r|=0,o|=0;var s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0,b=0,M=0,w=0,E=0,T=0,C=0,R=0,P=0;if(C=D,D=D+240|0,s=C+224|0,M=C+208|0,w=C,E=C+192|0,T=C+176|0,v=C+160|0,_=C+144|0,y=C+128|0,x=C+112|0,b=C+96|0,i[s>>2]=t,i[M>>2]=i[e>>2],i[M+4>>2]=i[e+4>>2],i[M+8>>2]=i[e+8>>2],i[M+12>>2]=i[e+12>>2],e_(M,s,w),i[o>>2]=0,(0|(g=r+n+((0|r)==6&1)|0))<=(0|n)){D=C;return}u=0|i[s>>2],c=n+6|0,h=16960+(u<<2)|0,d=_+8|0,f=y+8|0,p=x+8|0,m=E+4|0,A=0,l=n,r=-1;o:for(;;){if(e=w+((s=(0|l)%6|0)<<4)|0,i[E>>2]=i[e>>2],i[E+4>>2]=i[e+4>>2],i[E+8>>2]=i[e+8>>2],i[E+12>>2]=i[e+12>>2],e=A,A=0|eg(E,u,0,1),(0|l)>(0|n)&(0|eR(t))!=0&&(0|e)!=1?(0|i[E>>2])!=(0|r):0){switch(Z(w+(((s+5|0)%6|0)<<4)+4|0,T),Z(w+(s<<4)+4|0,v),R=+(0|i[h>>2]),a[_>>3]=3*R,a[d>>3]=0,P=-1.5*R,a[y>>3]=P,a[f>>3]=2.598076211353316*R,a[x>>3]=P,a[p>>3]=-2.598076211353316*R,s=0|i[M>>2],0|i[17040+(80*s|0)+(((0|r)==(0|s)?0|i[E>>2]:r)<<2)>>2]){case 1:e=y,r=_;break;case 3:e=x,r=y;break;case 2:e=_,r=x;break;default:e=8;break o}eK(T,v,r,e,b),(0|eJ(T,b)?0:!(0|eJ(v,b)))&&(ef(b,0|i[M>>2],u,1,o+8+(i[o>>2]<<4)|0),i[o>>2]=(0|i[o>>2])+1)}if((0|l)<(0|c)&&(Z(m,T),ef(T,0|i[E>>2],u,1,o+8+(i[o>>2]<<4)|0),i[o>>2]=(0|i[o>>2])+1),(0|(l=l+1|0))>=(0|g)){e=3;break}r=0|i[E>>2]}if((0|e)==3){D=C;return}(0|e)==8&&S(22606,22569,736,22651)}function e_(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0,s=0,A=0,l=0;l=D,D=D+160|0,r=l+80|0,a=l,s=20368,A=(o=r)+72|0;do i[o>>2]=i[s>>2],o=o+4|0,s=s+4|0;while((0|o)<(0|A))s=20448,A=(o=a)+72|0;do i[o>>2]=i[s>>2],o=o+4|0,s=s+4|0;while((0|o)<(0|A))r=(A=(0|eR(0|i[t>>2]))==0)?r:a,el(a=e+4|0),eu(a),0|eR(0|i[t>>2])&&(er(a),i[t>>2]=(0|i[t>>2])+1),i[n>>2]=i[e>>2],K(a,r,t=n+4|0),Y(t),i[n+16>>2]=i[e>>2],K(a,r+12|0,t=n+20|0),Y(t),i[n+32>>2]=i[e>>2],K(a,r+24|0,t=n+36|0),Y(t),i[n+48>>2]=i[e>>2],K(a,r+36|0,t=n+52|0),Y(t),i[n+64>>2]=i[e>>2],K(a,r+48|0,t=n+68|0),Y(t),i[n+80>>2]=i[e>>2],K(a,r+60|0,n=n+84|0),Y(n),D=l}function ey(e,t){return e|=0,t|=0,t=0|tl(0|e,0|t,45),E(),127&t|0}function ex(e,t){e|=0;var n=0,r=0,i=0,a=0,o=0,s=0;if(!(!0&(-16777216&(t|=0)|0)==134217728)||(o=0|tl(0|e,0|t,45),E(),(o&=127)>>>0>121))return 0|(t=0);n=0|tl(0|e,0|t,52),E(),n&=15;do if(0|n){for(i=1,r=0;;){if(a=0|tl(0|e,0|t,(15-i|0)*3|0),E(),(0|(a&=7))!=0&(1^r)){if((0|a)==1&(0|F(o))!=0){s=0,r=13;break}r=1}if((0|a)==7){s=0,r=13;break}if(i>>>0<n>>>0)i=i+1|0;else{r=9;break}}if((0|r)==9){if((0|n)==15)s=1;else break;return 0|s}if((0|r)==13)return 0|s}while(0)for(;;){if(s=0|tl(0|e,0|t,(14-n|0)*3|0),E(),!((7&s|0)==7&!0)){s=0,r=13;break}if(n>>>0<14)n=n+1|0;else{s=1,r=13;break}}return(0|r)==13?0|s:0}function eb(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0;if(o=0|tl(0|e,0|t,52),E(),o&=15,n>>>0>15)return 0|(r=4);if((0|o)<(0|n))return 0|(r=12);if((0|o)==(0|n))return i[r>>2]=e,i[r+4>>2]=t,0|(r=0);if(a=0|tu(0|n,0,52)|e,e=0|E()|-15728641&t,(0|o)>(0|n))do t=0|tu(7,0,(14-n|0)*3|0),n=n+1|0,a|=t,e=0|E()|e;while((0|n)<(0|o))return i[r>>2]=a,i[r+4>>2]=e,0|(r=0)}function eM(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0;if(o=0|tl(0|e,0|t,52),E(),!((0|n)<16&(0|(o&=15))<=(0|n)))return 0|(r=4);a=n-o|0,n=0|tl(0|e,0|t,45),E();o:if(0|F(127&n)){s:if(0|o){for(n=1;((s=0|tu(7,0,(15-n|0)*3|0))&e|0)==0&((0|E())&t|0)==0;)if(n>>>0<o>>>0)n=n+1|0;else break s;n=0|eQ(7,0,a,((0|a)<0)<<31>>31),a=0|E();break o}n=0|ti(0|(n=0|te(0|(n=0|ta(0|(n=0|eQ(7,0,a,((0|a)<0)<<31>>31)),0|E(),5,0)),0|E(),-5,-1)),0|E(),6,0),n=0|te(0|n,0|E(),1,0),a=0|E()}else n=0|eQ(7,0,a,((0|a)<0)<<31>>31),a=0|E();return i[(s=r)>>2]=n,i[s+4>>2]=a,0|(s=0)}function ew(e,t){e|=0,t|=0;var n=0,r=0,i=0;if(i=0|tl(0|e,0|t,45),E(),!(0|F(127&i)))return 0|(i=0);i=0|tl(0|e,0|t,52),E(),i&=15;o:do if(i)for(r=1;;){if(n=0|tl(0|e,0|t,(15-r|0)*3|0),E(),0|(n&=7))break o;if(r>>>0<i>>>0)r=r+1|0;else{n=0;break}}else n=0;while(0)return 0|(i=(0|n)==0&1)}function eE(e,t){e|=0,t|=0;var n=0,r=0,i=0;if(i=0|tl(0|e,0|t,52),E(),!(i&=15))return 0|(i=0);for(r=1;;){if(n=0|tl(0|e,0|t,(15-r|0)*3|0),E(),0|(n&=7)){r=5;break}if(r>>>0<i>>>0)r=r+1|0;else{n=0,r=5;break}}return(0|r)==5?0|n:0}function eS(e,t){e|=0,t|=0;var n=0,r=0,i=0,a=0,o=0,s=0,A=0;if(A=0|tl(0|e,0|t,52),E(),!(A&=15))return s=t,A=e,w(0|s),0|A;for(s=1,n=0;;){r=0|tu(7,0,0|(a=(15-s|0)*3|0)),i=0|E(),o=0|tl(0|e,0|t,0|a),E(),a=0|tu(0|es(7&o),0,0|a),o=0|E(),e=a|e&~r,t=o|t&~i;o:do if(!n){if((a&r|0)==0&(o&i|0)==0)n=0;else if(r=0|tl(0|e,0|t,52),E(),r&=15){n=1;s:for(;;){switch(o=0|tl(0|e,0|t,(15-n|0)*3|0),E(),7&o){case 1:break s;case 0:break;default:n=1;break o}if(n>>>0<r>>>0)n=n+1|0;else{n=1;break o}}for(n=1;;)if(i=0|tl(0|e,0|t,0|(o=(15-n|0)*3|0)),E(),a=0|tu(7,0,0|o),t&=~(0|E()),e=e&~a|(o=0|tu(0|es(7&i),0,0|o)),t|=0|E(),n>>>0<r>>>0)n=n+1|0;else{n=1;break}}else n=1}while(0)if(s>>>0<A>>>0)s=s+1|0;else break}return w(0|t),0|e}function eT(e,t){e|=0,t|=0;var n=0,r=0,i=0,a=0,o=0;if(r=0|tl(0|e,0|t,52),E(),!(r&=15))return n=t,r=e,w(0|n),0|r;for(n=1;;)if(o=0|tl(0|e,0|t,0|(a=(15-n|0)*3|0)),E(),i=0|tu(7,0,0|a),t&=~(0|E()),e=(a=0|tu(0|es(7&o),0,0|a))|e&~i,t=0|E()|t,n>>>0<r>>>0)n=n+1|0;else break;return w(0|t),0|e}function eC(e,t){e|=0,t|=0;var n=0,r=0,i=0,a=0,o=0;if(r=0|tl(0|e,0|t,52),E(),!(r&=15))return n=t,r=e,w(0|n),0|r;for(n=1;;)if(a=0|tu(7,0,0|(o=(15-n|0)*3|0)),i=t&~(0|E()),t=0|tl(0|e,0|t,0|o),E(),e=(t=0|tu(0|eA(7&t),0,0|o))|e&~a,t=0|E()|i,n>>>0<r>>>0)n=n+1|0;else break;return w(0|t),0|e}function eR(e){return(0|(e|=0))%2|0}function eP(e,t,n){e|=0,t|=0,n|=0;var r,o,s,A,u,c=0,m=0;return(m=D,D=D+16|0,c=m,t>>>0>15)?c=4:(2146435072&i[e+4>>2]|0)==2146435072||(2146435072&i[e+8+4>>2]|0)==2146435072?c=3:(r=0|e,o=0|t,s=0|c,A=0,u=0,A=D,D=D+16|0,function(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var o,s,A,l,u,c,m,g=0,_=0,y=0,x=0,b=0;if(x=D,D=D+16|0,function(e,t,n){e|=0,t|=0,n|=0;var r,o,s,A,l,u=0,c=0,f=0;if(f=D,D=D+32|0,r=e,o=c=f,r|=0,o|=0,s=0,A=0,l=0,A=+h(+(s=+a[r>>3])),s=+d(+s),a[o+16>>3]=s,l=A*+h(+(s=+a[r+8>>3])),a[o>>3]=l,s=A*+d(+s),a[o+8>>3]=s,i[t>>2]=0,a[n>>3]=5,(u=+e$(16400,c))<+a[n>>3]&&(i[t>>2]=0,a[n>>3]=u),(u=+e$(16424,c))<+a[n>>3]&&(i[t>>2]=1,a[n>>3]=u),(u=+e$(16448,c))<+a[n>>3]&&(i[t>>2]=2,a[n>>3]=u),(u=+e$(16472,c))<+a[n>>3]&&(i[t>>2]=3,a[n>>3]=u),(u=+e$(16496,c))<+a[n>>3]&&(i[t>>2]=4,a[n>>3]=u),(u=+e$(16520,c))<+a[n>>3]&&(i[t>>2]=5,a[n>>3]=u),(u=+e$(16544,c))<+a[n>>3]&&(i[t>>2]=6,a[n>>3]=u),(u=+e$(16568,c))<+a[n>>3]&&(i[t>>2]=7,a[n>>3]=u),(u=+e$(16592,c))<+a[n>>3]&&(i[t>>2]=8,a[n>>3]=u),(u=+e$(16616,c))<+a[n>>3]&&(i[t>>2]=9,a[n>>3]=u),(u=+e$(16640,c))<+a[n>>3]&&(i[t>>2]=10,a[n>>3]=u),(u=+e$(16664,c))<+a[n>>3]&&(i[t>>2]=11,a[n>>3]=u),(u=+e$(16688,c))<+a[n>>3]&&(i[t>>2]=12,a[n>>3]=u),(u=+e$(16712,c))<+a[n>>3]&&(i[t>>2]=13,a[n>>3]=u),(u=+e$(16736,c))<+a[n>>3]&&(i[t>>2]=14,a[n>>3]=u),(u=+e$(16760,c))<+a[n>>3]&&(i[t>>2]=15,a[n>>3]=u),(u=+e$(16784,c))<+a[n>>3]&&(i[t>>2]=16,a[n>>3]=u),(u=+e$(16808,c))<+a[n>>3]&&(i[t>>2]=17,a[n>>3]=u),(u=+e$(16832,c))<+a[n>>3]&&(i[t>>2]=18,a[n>>3]=u),!((u=+e$(16856,c))<+a[n>>3])){D=f;return}i[t>>2]=19,a[n>>3]=u,D=f}(e,n,b=x),(_=+p(+(1-.5*+a[b>>3])))<1e-16){i[r>>2]=0,i[r+4>>2]=0,i[r+8>>2]=0,i[r+12>>2]=0,D=x;return}if(g=+eB((g=+a[15920+(24*(b=0|i[n>>2])|0)>>3])-+eB(+(o=15600+(b<<4)|0,A=0,l=0,u=0,c=0,m=0,m=(l=+h(+(c=+a[(s=0|e)>>3])))*+d(+(u=+a[s+8>>3]-+a[o+8>>3])),A=+a[o>>3],+ +v(+m,+(+d(+c)*+h(+A)-+h(+u)*(l*+d(+A))))))),y=0|eR(t)?+eB(g+-.3334731722518321):g,g=+f(+_)/.381966011250105,(0|t)>0){e=0;do g*=2.6457513110645907,e=e+1|0;while((0|e)!=(0|t))}_=+h(+y)*g,a[r>>3]=_,y=+d(+y)*g,a[r+8>>3]=y,D=x}(r,o,s,u=A),function(e,t){e|=0,t|=0;var n=0,r=0,o=0,s=0,A=0,u=0,c=0,h=0,d=0,f=0,p=0;i[(f=t+8|0)>>2]=0,n=~~(A=+l(+(c=+a[e>>3]))+.5*(u=+l(+(h=+a[e+8>>3]))/.8660254037844386)),e=~~u,A-=+(0|n),u-=+(0|e);do if(A<.5){if(A<.3333333333333333){if(i[t>>2]=n,u<(A+1)*.5){i[t+4>>2]=e;break}e=e+1|0,i[t+4>>2]=e;break}if(e=(1&!(u<(p=1-A)))+e|0,i[t+4>>2]=e,p<=u&u<2*A){n=n+1|0,i[t>>2]=n;break}i[t>>2]=n;break}else{if(!(A<.6666666666666666)){if(n=n+1|0,i[t>>2]=n,u<.5*A){i[t+4>>2]=e;break}e=e+1|0,i[t+4>>2]=e;break}if(u<1-A){if(i[t+4>>2]=e,2*A+-1<u){i[t>>2]=n;break}}else e=e+1|0,i[t+4>>2]=e;n=n+1|0,i[t>>2]=n}while(0)do if(c<0){if(1&e){d=0|tt(0|n,((0|n)<0)<<31>>31|0,0|(d=(e+1|0)/2|0),((0|d)<0)<<31>>31|0),n=~~(+(0|n)-((+(d>>>0)+4294967296*+(0|E()))*2+1)),i[t>>2]=n;break}d=0|tt(0|n,((0|n)<0)<<31>>31|0,0|(d=(0|e)/2|0),((0|d)<0)<<31>>31|0),n=~~(+(0|n)-(+(d>>>0)+4294967296*+(0|E()))*2),i[t>>2]=n;break}while(0)d=t+4|0,h<0&&(n=n-((e<<1|1)/2|0)|0,i[t>>2]=n,e=0-e|0,i[d>>2]=e),r=e-n|0,(0|n)<0?(o=0-n|0,i[d>>2]=r,i[f>>2]=o,i[t>>2]=0,e=r,n=0):o=0,(0|e)<0&&(n=n-e|0,i[t>>2]=n,o=o-e|0,i[f>>2]=o,i[d>>2]=0,e=0),s=n-o|0,r=e-o|0,(0|o)<0&&(i[t>>2]=s,i[d>>2]=r,i[f>>2]=0,e=r,n=s,o=0),(0|(r=(0|o)<(0|(r=(0|e)<(0|n)?e:n))?o:r))<=0||(i[t>>2]=n-r,i[d>>2]=e-r,i[f>>2]=o-r)}(u,s+4|0),D=A,t=0|function(e,t){e|=0,t|=0;var n,r=0,a=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0;if(u=D,D=D+64|0,l=u+40|0,a=u+24|0,o=u+12|0,s=u,tu(0|t,0,52),r=134225919|E(),!t)return(0|i[e+4>>2])>2||(0|i[e+8>>2])>2||(0|i[e+12>>2])>2?(l=0,w(0|(A=0))):(tu(0|G(e),0,45),A=0|E()|r,l=-1,w(0|A)),D=u,0|l;if(i[l>>2]=i[e>>2],i[l+4>>2]=i[e+4>>2],i[l+8>>2]=i[e+8>>2],i[l+12>>2]=i[e+12>>2],A=l+4|0,(0|t)>0)for(e=-1;;)if(i[a>>2]=i[A>>2],i[a+4>>2]=i[A+4>>2],i[a+8>>2]=i[A+8>>2],1&t?(function(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;n=0|i[(s=e+8|0)>>2],r=0|e6(+((3*(t=(0|i[e>>2])-n|0)|0)-(n=(0|i[(A=e+4|0)>>2])-n|0)|0)/7),i[e>>2]=r,t=0|e6(+((n<<1)+t|0)/7),i[A>>2]=t,i[s>>2]=0,n=t-r|0,(0|r)<0?(o=0-r|0,i[A>>2]=n,i[s>>2]=o,i[e>>2]=0,t=n,r=0,n=o):n=0,(0|t)<0&&(r=r-t|0,i[e>>2]=r,n=n-t|0,i[s>>2]=n,i[A>>2]=0,t=0),o=r-n|0,a=t-n|0,(0|n)<0?(i[e>>2]=o,i[A>>2]=a,i[s>>2]=0,t=a,a=o,n=0):a=r,(0|(r=(0|n)<(0|(r=(0|t)<(0|a)?t:a))?n:r))<=0||(i[e>>2]=a-r,i[A>>2]=t-r,i[s>>2]=n-r)}(A),i[o>>2]=i[A>>2],i[o+4>>2]=i[A+4>>2],i[o+8>>2]=i[A+8>>2],en(o)):(et(A),i[o>>2]=i[A>>2],i[o+4>>2]=i[A+4>>2],i[o+8>>2]=i[A+8>>2],er(o)),J(a,o,s),Y(s),c=0|tu(7,0,0|(h=(15-t|0)*3|0)),r&=~(0|E()),e=(h=0|tu(0|ee(s),0,0|h))|e&~c,r=0|E()|r,(0|t)>1)t=t+-1|0;else break;else e=-1;o:do if(((0|i[A>>2])<=2?(0|i[l+8>>2])<=2:0)?(0|i[l+12>>2])<=2:0){if(t=0|tu(0|(a=0|G(l)),0,45)|e,e=0|E()|-1040385&r,s=0|(0|i[11120+((0|i[(n=0|l)>>2])*216|0)+((0|i[n+4>>2])*72|0)+((0|i[n+8>>2])*24|0)+(i[n+12>>2]<<3)+4>>2]),!(0|F(a))){if((0|s)<=0)break;for(o=0;;){if(a=0|tl(0|t,0|e,52),E(),a&=15)for(r=1;;)if(l=0|tl(0|t,0|e,0|(h=(15-r|0)*3|0)),E(),c=0|tu(7,0,0|h),e&=~(0|E()),t=t&~c|(h=0|tu(0|es(7&l),0,0|h)),e|=0|E(),r>>>0<a>>>0)r=r+1|0;else break;if((0|(o=o+1|0))==(0|s))break o}}o=0|tl(0|t,0|e,52),E(),o&=15;s:do if(o){r=1;A:for(;;){switch(h=0|tl(0|t,0|e,(15-r|0)*3|0),E(),7&h){case 1:break A;case 0:break;default:break s}if(r>>>0<o>>>0)r=r+1|0;else break s}if(0|H(a,0|i[l>>2]))for(r=1;;)if(c=0|tu(7,0,0|(l=(15-r|0)*3|0)),h=e&~(0|E()),e=0|tl(0|t,0|e,0|l),E(),t=t&~c|(e=0|tu(0|eA(7&e),0,0|l)),e=h|(0|E()),r>>>0<o>>>0)r=r+1|0;else break;else for(r=1;;)if(l=0|tl(0|t,0|e,0|(h=(15-r|0)*3|0)),E(),c=0|tu(7,0,0|h),e&=~(0|E()),t=t&~c|(h=0|tu(0|es(7&l),0,0|h)),e|=0|E(),r>>>0<o>>>0)r=r+1|0;else break}while(0)if((0|s)>0){r=0;do t=0|eS(t,e),e=0|E(),r=r+1|0;while((0|r)!=(0|s))}}else t=0,e=0;while(0)return c=e,h=t,w(0|c),D=u,0|h}(c,t),c=0|E(),i[n>>2]=t,i[n+4>>2]=c,(0|t)==0&(0|c)==0&&S(23313,22674,786,22697),c=0),D=m,0|c}function eL(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0,s=0;if(a=n+4|0,o=0|tl(0|e,0|t,52),E(),o&=15,s=0|tl(0|e,0|t,45),E(),r=(0|o)==0,0|F(127&s)){if(r)return 0|(s=1);r=1}else{if(r)return 0|(s=0);r=((0|i[a>>2])==0?(0|i[n+8>>2])==0:0)?(0|i[n+12>>2])!=0&1:1}for(n=1;;)if(1&n?en(a):er(a),s=0|tl(0|e,0|t,(15-n|0)*3|0),E(),ei(a,7&s),n>>>0<o>>>0)n=n+1|0;else break;return 0|r}function eD(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0,s=0,A=0,l=0,u=0,c=0;if(c=D,D=D+16|0,l=c,u=0|tl(0|e,0|t,45),E(),(u&=127)>>>0>121)return i[n>>2]=0,i[n+4>>2]=0,i[n+8>>2]=0,i[n+12>>2]=0,u=5,D=c,0|u;o:do if((0|F(u))!=0?(o=0|tl(0|e,0|t,52),E(),(0|(o&=15))!=0):0){r=1;s:for(;;){switch(A=0|tl(0|e,0|t,(15-r|0)*3|0),E(),7&A){case 5:break s;case 0:break;default:r=t;break o}if(r>>>0<o>>>0)r=r+1|0;else{r=t;break o}}for(a=1,r=t;;)if(s=0|tu(7,0,0|(t=(15-a|0)*3|0)),A=r&~(0|E()),r=0|tl(0|e,0|r,0|t),E(),e=e&~s|(r=0|tu(0|eA(7&r),0,0|t)),r=A|(0|E()),a>>>0<o>>>0)a=a+1|0;else break}else r=t;while(0)if(A=7696+(28*u|0)|0,i[n>>2]=i[A>>2],i[n+4>>2]=i[A+4>>2],i[n+8>>2]=i[A+8>>2],i[n+12>>2]=i[A+12>>2],!(0|eL(e,r,n)))return u=0,D=c,0|u;if(s=n+4|0,i[l>>2]=i[s>>2],i[l+4>>2]=i[s+4>>2],i[l+8>>2]=i[s+8>>2],o=0|tl(0|e,0|r,52),E(),A=15&o,1&o?(er(s),o=A+1|0):o=A,0|F(u)){A:do if(A)for(t=1;;){if(a=0|tl(0|e,0|r,(15-t|0)*3|0),E(),0|(a&=7)){r=a;break A}if(t>>>0<A>>>0)t=t+1|0;else{r=0;break}}else r=0;while(0)r=(0|r)==4&1}else r=0;if(0|eg(n,o,r,0)){if(0|F(u))do;while((0|eg(n,o,0,0))!=0)(0|o)!=(0|A)&&et(s)}else(0|o)!=(0|A)&&(i[s>>2]=i[l>>2],i[s+4>>2]=i[l+4>>2],i[s+8>>2]=i[l+8>>2]);return u=0,D=c,0|u}function eO(e,t,n){e|=0,t|=0,n|=0;var r,a,o,s,A,l=0,u=0,c=0;return c=D,D=D+16|0,0|(u=0|eD(e,t,l=c))||(u=0|tl(0|e,0|t,52),E(),r=0|l,a=15&u|0,o=0|n,s=0,A=0,s=D,D=D+16|0,Z(r+4|0,A=s),ef(A,0|i[r>>2],a,0,o),D=s,u=0),D=c,0|u}function eI(e,t,n){e|=0,t|=0,n|=0;var r=0,i=0,a=0,o=0,s=0;if(o=D,D=D+16|0,0|(r=0|eD(e,t,a=o)))return a=r,D=o,0|a;r=0|tl(0|e,0|t,45),E(),r=(0|F(127&r))==0,i=0|tl(0|e,0|t,52),E(),i&=15;o:do if(!r){if(0|i)for(r=1;;){if(!(((s=0|tu(7,0,(15-r|0)*3|0))&e|0)==0&((0|E())&t|0)==0))break o;if(r>>>0<i>>>0)r=r+1|0;else break}return ep(a,i,0,5,n),s=0,D=o,0|s}while(0)return ev(a,i,0,6,n),s=0,D=o,0|s}function eq(e,t){t|=0;var n=0,r=0,a=0,o=0,s=0,A=0,l=0;if((e|=0)>>>0>15)return 0|(A=4);if(tu(0|e,0,52),A=134225919|E(),!e){n=0,r=0;do 0|F(r)&&(tu(0|r,0,45),s=A|(0|E()),i[(e=t+(n<<3)|0)>>2]=-1,i[e+4>>2]=s,n=n+1|0),r=r+1|0;while((0|r)!=122)return 0|(n=0)}n=0,s=0;do{if(0|F(s)){for(tu(0|s,0,45),r=1,a=-1,o=A|(0|E());a&=~(l=0|tu(7,0,(15-r|0)*3|0)),o&=~(0|E()),(0|r)!=(0|e);)r=r+1|0;i[(l=t+(n<<3)|0)>>2]=a,i[l+4>>2]=o,n=n+1|0}s=s+1|0}while((0|s)!=122)return 0|(n=0)}function eU(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a,o,s,A,l=0,u=0;(l=0|tl(0|t,0|n,52),E(),(0|t)==0&(0|n)==0|((0|r)>15|(0|(l&=15))>(0|r)))?(r=-1,l=-1,t=0,n=0):(u=0|(a=t,o=n,s=l+1|0,(a|=0,o|=0,(0|(A=0|r))<(0|(s|=0)))?(s=o,A=a):(s=0|tu(-1,-1,((A-s|0)*3|0)+3|0),A=0|tu(0|~s,0|~(0|E()),(15-A|0)*3|0),s=~(0|E())&o,A=~A&a),w(0|s),0|A),n=(0|E())&-15728641,t=0|tu(0|r,0,52)|u,n|=0|E(),r=(u=(0|ew(t,n))==0)?-1:r),i[(u=e)>>2]=t,i[u+4>>2]=n,i[e+8>>2]=l,i[e+12>>2]=r}function eN(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0,l=0,u=0;if(!((0|(t=0|i[(n=e)>>2]))==0&(0|(n=0|i[n+4>>2]))==0)&&(r=0|tl(0|t,0|n,52),E(),r&=15,t=0|te(0|(A=0|tu(1,0,(15^r)*3|0)),0|E(),0|t,0|n),n=0|E(),i[(A=e)>>2]=t,i[A+4>>2]=n,!((0|r)<(0|(s=0|i[(A=e+8|0)>>2]))))){for(l=e+12|0,o=r;;){if((0|o)==(0|s)){r=5;break}if(u=(0|o)==(0|i[l>>2]),r=0|tl(0|t,0|n,0|(a=(15-o|0)*3|0)),E(),u&((0|(r&=7))==1&!0)){r=7;break}if(!((0|r)==7&!0)){r=10;break}if(t=0|te(0|t,0|n,0|(u=0|tu(1,0,0|a)),0|E()),n=0|E(),i[(u=e)>>2]=t,i[u+4>>2]=n,(0|o)>(0|s))o=o+-1|0;else{r=10;break}}if((0|r)==5){i[(u=e)>>2]=0,i[u+4>>2]=0,i[A>>2]=-1,i[l>>2]=-1;return}if((0|r)==7){s=0|te(0|t,0|n,0|(s=0|tu(1,0,0|a)),0|E()),A=0|E(),i[(u=e)>>2]=s,i[u+4>>2]=A,i[l>>2]=o+-1;return}if((0|r)==10)return}}function eB(e){var t=0;return t=(e=+e)<0?e+6.283185307179586:e,+(e>=6.283185307179586?t+-6.283185307179586:t)}function ek(e,t){return(t|=0,17453292519943298e-27>+l(+(+a[(e|=0)>>3]-+a[t>>3])))?0|(t=17453292519943298e-27>+l(+(+a[e+8>>3]-+a[t+8>>3]))):0|(t=0)}function eF(e,t){e|=0,t|=0;var n=0,r=0,i=0,o=0;return+(12742.01436183695*+v(+ +u(+(n=(o=+d(+(((i=+a[t>>3])-(r=+a[e>>3]))*.5)))*o+(n=+d(+((+a[t+8>>3]-+a[e+8>>3])*.5)))*(+h(+i)*+h(+r)*n))),+ +u(+(1-n))))}function ez(e,t){t|=0;var n=0;return(e|=0)>>>0>15?0|(t=4):(n=0|ta(0|(n=0|eQ(7,0,e,((0|e)<0)<<31>>31)),0|E(),120,0),e=0|E(),i[t>>2]=2|n,i[t+4>>2]=e,0|(t=0))}function eG(e,t,n){e|=0,t|=0,n|=0;var r=0,i=0,o=0,s=0,A=0,l=0,c=0,p=0,m=0,_=0;return l=+d(+(((_=+a[t>>3])-(p=+a[e>>3]))*.5)),s=+d(+(((o=+a[t+8>>3])-(c=+a[e+8>>3]))*.5)),A=+h(+p),s=2*+v(+ +u(+(s=l*l+s*((m=+h(+_))*A*s))),+ +u(+(1-s))),i=(s+(o=2*+v(+ +u(+(o=(_=+d(+(((l=+a[n>>3])-_)*.5)))*_+(o=+d(+(((r=+a[n+8>>3])-o)*.5)))*(m*(i=+h(+l))*o))),+ +u(+(1-o))))+(r=2*+v(+ +u(+(r=(l=+d(+((p-l)*.5)))*l+(r=+d(+((c-r)*.5)))*(A*i*r))),+ +u(+(1-r)))))*.5,+(4*+g(+ +u(+(+f(+(.5*i))*+f(+((i-s)*.5))*+f(+((i-o)*.5))*+f(+((i-r)*.5))))))}function eH(e,t,n){e|=0,t|=0,n|=0;var r=0,o=0,s=0,A=0,l=0;if(l=D,D=D+192|0,s=l+168|0,A=l,0|(o=0|eO(e,t,s)))return n=o,D=l,0|n;if(0|eI(e,t,A)&&S(23313,22742,386,22751),(0|(t=0|i[A>>2]))>0){if(r=+eG(A+8|0,A+8+(((0|t)!=1&1)<<4)|0,s)+0,(0|t)!=1){e=1;do r+=+eG(A+8+((o=e)<<4)|0,A+8+(((0|(e=e+1|0))%(0|t)|0)<<4)|0,s);while((0|e)<(0|t))}}else r=0;return a[n>>3]=r,n=0,D=l,0|n}function eV(e){var t=0,n=0,r=0,a=0;if(e|=0)for(r=1;;){if(0|(t=0|i[e>>2]))do{if(0|(n=0|i[t>>2]))do a=n,n=0|i[n+16>>2],e7(a);while((0|n)!=0)a=t,t=0|i[t+8>>2],e7(a)}while((0|t)!=0)if(t=e,e=0|i[e+8>>2],r||e7(t),e)r=0;else break}}function ej(e,t,n){e|=0;var r=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0;if(!(0|X(t|=0,n|=0))||(t=0|W(t),r=+a[n>>3],o=t&(o=+a[n+8>>3])<0?o+6.283185307179586:o,!(e=0|i[e>>2])))return 0|(e=0);if(t){t=0,c=o,n=e;o:for(;;){for(;A=+a[n>>3],o=+a[n+8>>3],s=+a[(h=(0|(h=0|i[(n=n+16|0)>>2]))==0?e:h)>>3],l=+a[h+8>>3],A>s?(u=A,A=l):(u=s,s=A,A=o,o=l),(r=r==s|r==u?r+2220446049250313e-31:r)<s|r>u;)if(!(n=0|i[n>>2])){n=22;break o}if(c=(l=A<0?A+6.283185307179586:A)==c|(A=o<0?o+6.283185307179586:o)==c?c+-.0000000000000002220446049250313:c,((u=l+(A-l)*((r-s)/(u-s)))<0?u+6.283185307179586:u)>c&&(t^=1),!(n=0|i[n>>2])){n=22;break}}if((0|n)==22)return 0|t}else{t=0,c=o,n=e;s:for(;;){for(;A=+a[n>>3],o=+a[n+8>>3],s=+a[(h=(0|(h=0|i[(n=n+16|0)>>2]))==0?e:h)>>3],l=+a[h+8>>3],A>s?(u=A,A=l):(u=s,s=A,A=o,o=l),(r=r==s|r==u?r+2220446049250313e-31:r)<s|r>u;)if(!(n=0|i[n>>2])){n=22;break s}if(c=A==c|o==c?c+-.0000000000000002220446049250313:c,A+(o-A)*((r-s)/(u-s))>c&&(t^=1),!(n=0|i[n>>2])){n=22;break}}if((0|n)==22)return 0|t}return 0}function eW(e,t,n,a,o){e|=0,t|=0,n|=0,a|=0,o|=0;var s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0;if(y=D,D=D+32|0,_=y+16|0,v=y,s=0|tl(0|e,0|t,52),E(),s&=15,p=0|tl(0|n,0|a,52),E(),(0|s)!=(15&p|0))return _=12,D=y,0|_;if(c=0|tl(0|e,0|t,45),E(),c&=127,h=0|tl(0|n,0|a,45),E(),c>>>0>121|(h&=127)>>>0>121)return _=5,D=y,0|_;if(p=(0|c)!=(0|h)){if((0|(l=0|j(c,h)))==7)return _=1,D=y,0|_;(0|(u=0|j(h,c)))==7?S(23066,23090,161,23100):(m=l,A=u)}else m=0,A=0;d=0|F(c),f=0|F(h),i[_>>2]=0,i[_+4>>2]=0,i[_+8>>2]=0,i[_+12>>2]=0;do if(m){if(l=(0|(h=0|i[4272+(28*c|0)+(m<<2)>>2]))>0,f){if(l){c=0,u=n,l=a;do u=0|function(e,t){e|=0,t|=0;var n=0,r=0,i=0,a=0,o=0,s=0,A=0;if(A=0|tl(0|e,0|t,52),E(),!(A&=15))return s=t,A=e,w(0|s),0|A;for(s=1,n=0;;){r=0|tu(7,0,0|(a=(15-s|0)*3|0)),i=0|E(),o=0|tl(0|e,0|t,0|a),E(),a=0|tu(0|eA(7&o),0,0|a),o=0|E(),e=a|e&~r,t=o|t&~i;o:do if(!n){if((a&r|0)==0&(o&i|0)==0)n=0;else if(r=0|tl(0|e,0|t,52),E(),r&=15){n=1;s:for(;;){switch(o=0|tl(0|e,0|t,(15-n|0)*3|0),E(),7&o){case 1:break s;case 0:break;default:n=1;break o}if(n>>>0<r>>>0)n=n+1|0;else{n=1;break o}}for(n=1;;)if(a=0|tu(7,0,0|(i=(15-n|0)*3|0)),o=t&~(0|E()),t=0|tl(0|e,0|t,0|i),E(),e=e&~a|(t=0|tu(0|eA(7&t),0,0|i)),t=o|(0|E()),n>>>0<r>>>0)n=n+1|0;else{n=1;break}}else n=1}while(0)if(s>>>0<A>>>0)s=s+1|0;else break}return w(0|t),0|e}(u,l),l=0|E(),(0|(A=0|eA(A)))==1&&(A=0|eA(1)),c=c+1|0;while((0|c)!=(0|h))h=A,c=u,u=l}else h=A,c=n,u=a}else if(l){c=0,u=n,l=a;do u=0|eC(u,l),l=0|E(),A=0|eA(A),c=c+1|0;while((0|c)!=(0|h))h=A,c=u,u=l}else h=A,c=n,u=a;if(eL(c,u,_),p||S(23115,23090,191,23100),(l=(0|d)!=0)&(A=(0|f)!=0)&&S(23142,23090,192,23100),l){if((0|(A=0|eE(e,t)))==7){s=5;break}if(0|r[21872+(7*A|0)+m>>0]){s=1;break}c=u=0|i[21040+(28*A|0)+(m<<2)>>2]}else if(A){if((0|(A=0|eE(c,u)))==7){s=5;break}if(0|r[21872+(7*A|0)+h>>0]){s=1;break}c=0,u=0|i[21040+(28*h|0)+(A<<2)>>2]}else c=0,u=0;if((c|u|0)<0)s=5;else{if((0|u)>0){l=_+4|0,A=0;do eo(l),A=A+1|0;while((0|A)!=(0|u))}if(i[v>>2]=0,i[v+4>>2]=0,i[v+8>>2]=0,ei(v,m),0|s)for(;;)if(0|eR(s)?en(v):er(v),(0|s)>1)s=s+-1|0;else break;if((0|c)>0){s=0;do eo(v),s=s+1|0;while((0|s)!=(0|c))}K(g=_+4|0,v,g),Y(g),g=51}}else if(eL(n,a,_),(0|d)!=0&(0|f)!=0){if((0|h)!=(0|c)&&S(23173,23090,261,23100),(0|(A=0|eE(e,t)))==7|(0|(s=0|eE(n,a)))==7)s=5;else if(0|r[21872+(7*A|0)+s>>0])s=1;else if((0|(A=0|i[21040+(28*A|0)+(s<<2)>>2]))>0){l=_+4|0,s=0;do eo(l),s=s+1|0;while((0|s)!=(0|A))g=51}else g=51}else g=51;while(0)return(0|g)==51&&(s=_+4|0,i[o>>2]=i[s>>2],i[o+4>>2]=i[s+4>>2],i[o+8>>2]=i[s+8>>2],s=0),_=s,D=y,0|_}function eX(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0;if(m=D,D=D+48|0,u=m+36|0,s=m+24|0,A=m+12|0,l=m,a=0|tl(0|e,0|t,52),E(),a&=15,d=0|tl(0|e,0|t,45),E(),(d&=127)>>>0>121)return r=5,D=m,0|r;if(c=0|F(d),tu(0|a,0,52),g=134225919|E(),i[(o=r)>>2]=-1,i[o+4>>2]=g,!a)return(0|(a=0|ee(n)))==7||(0|(a=0|V(d,a)))==127?g=1:(f=0|tu(0|a,0,45),p=0|E(),p=-1040385&i[(d=r)+4>>2]|p,i[(g=r)>>2]=i[d>>2]|f,i[g+4>>2]=p,g=0),D=m,0|g;for(i[u>>2]=i[n>>2],i[u+4>>2]=i[n+4>>2],i[u+8>>2]=i[n+8>>2],n=a;;){if(o=n,n=n+-1|0,i[s>>2]=i[u>>2],i[s+4>>2]=i[u+4>>2],i[s+8>>2]=i[u+8>>2],0|eR(o)){if(0|(a=0|function(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;a=0|i[(s=e+8|0)>>2],o=(0|i[e>>2])-a|0,a=(0|i[(A=e+4|0)>>2])-a|0;do if(o>>>0>715827881|a>>>0>715827881){if(n=(0|o)>0){if((2147483647-o|0)<(0|o)||(2147483647-(o<<1)|0)<(0|o))return 0|(A=1)}else if((-2147483648-o|0)>(0|o)||(-2147483648-(o<<1)|0)>(0|o))return 0|(A=1);if(t=3*o|0,(0|a)>0){if((2147483647-a|0)<(0|a))return 0|(A=1)}else if((-2147483648-a|0)>(0|a))return 0|(A=1);if(r=a<<1,(0|o)>-1){if((-2147483648|t)>=(0|a))return 0|(A=1)}else if((-2147483648^t|0)<(0|a))return 0|(A=1);if(n){if((2147483647-o|0)<(0|r))t=1;else{n=r;break}return 0|t}if((-2147483648-o|0)>(0|r))t=1;else{n=r;break}return 0|t}else n=a<<1,t=3*o|0;while(0)r=0|e6(+(t-a|0)/7),i[e>>2]=r,a=0|e6(+(n+o|0)/7),i[A>>2]=a,i[s>>2]=0,t=(n=(0|a)<(0|r))?r:a,n=n?a:r;do if((0|n)<0){if((0|t)>0){if((-2147483648|t)<(0|n)&((0|n)!=-2147483648&(2147483647-t|0)>=(0|n)))break;S(23313,22444,355,22455)}if((0|n)==-2147483648|(-2147483648-t|0)>(0|n)&&S(23313,22444,355,22455),(0|t)>-1){if((-2147483648|t)<(0|n))break;S(23313,22444,355,22455)}else{if((-2147483648^t|0)>=(0|n))break;S(23313,22444,355,22455)}}while(0)return t=a-r|0,(0|r)<0?(n=0-r|0,i[A>>2]=t,i[s>>2]=n,i[e>>2]=0,r=0):(t=a,n=0),(0|t)<0&&(r=r-t|0,i[e>>2]=r,n=n-t|0,i[s>>2]=n,i[A>>2]=0,t=0),o=r-n|0,a=t-n|0,(0|n)<0?(i[e>>2]=o,i[A>>2]=a,i[s>>2]=0,t=a,a=o,n=0):a=r,(0|(r=(0|n)<(0|(r=(0|t)<(0|a)?t:a))?n:r))<=0||(i[e>>2]=a-r,i[A>>2]=t-r,i[s>>2]=n-r),0|(A=0)}(u))){n=13;break}i[A>>2]=i[u>>2],i[A+4>>2]=i[u+4>>2],i[A+8>>2]=i[u+8>>2],en(A)}else{if(0|(a=0|function(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;a=0|i[(s=e+8|0)>>2],o=(0|i[e>>2])-a|0,a=(0|i[(A=e+4|0)>>2])-a|0;do if(o>>>0>715827881|a>>>0>715827881){if(n=(0|o)>0){if((2147483647-o|0)<(0|o))return 0|(A=1)}else if((-2147483648-o|0)>(0|o))return 0|(A=1);if(t=o<<1,(0|a)>0){if((2147483647-a|0)<(0|a)||(2147483647-(a<<1)|0)<(0|a))return 0|(A=1)}else if((-2147483648-a|0)>(0|a)||(-2147483648-(a<<1)|0)>(0|a))return 0|(A=1);if(r=3*a|0,n){if((2147483647-t|0)<(0|a))return 0|(A=1)}else if((-2147483648-t|0)>(0|a))return 0|(A=1);if((0|a)>-1){if((-2147483648|r)<(0|o)){n=r;break}return 0|(t=1)}if((-2147483648^r|0)<(0|o))t=1;else{n=r;break}return 0|t}else n=3*a|0,t=o<<1;while(0)r=0|e6(+(t+a|0)/7),i[e>>2]=r,a=0|e6(+(n-o|0)/7),i[A>>2]=a,i[s>>2]=0,t=(n=(0|a)<(0|r))?r:a,n=n?a:r;do if((0|n)<0){if((0|t)>0){if((-2147483648|t)<(0|n)&((0|n)!=-2147483648&(2147483647-t|0)>=(0|n)))break;S(23313,22444,404,22469)}if((0|n)==-2147483648|(-2147483648-t|0)>(0|n)&&S(23313,22444,404,22469),(0|t)>-1){if((-2147483648|t)<(0|n))break;S(23313,22444,404,22469)}else{if((-2147483648^t|0)>=(0|n))break;S(23313,22444,404,22469)}}while(0)return t=a-r|0,(0|r)<0?(n=0-r|0,i[A>>2]=t,i[s>>2]=n,i[e>>2]=0,r=0):(t=a,n=0),(0|t)<0&&(r=r-t|0,i[e>>2]=r,n=n-t|0,i[s>>2]=n,i[A>>2]=0,t=0),o=r-n|0,a=t-n|0,(0|n)<0?(i[e>>2]=o,i[A>>2]=a,i[s>>2]=0,t=a,a=o,n=0):a=r,(0|(r=(0|n)<(0|(r=(0|t)<(0|a)?t:a))?n:r))<=0||(i[e>>2]=a-r,i[A>>2]=t-r,i[s>>2]=n-r),0|(A=0)}(u))){n=13;break}i[A>>2]=i[u>>2],i[A+4>>2]=i[u+4>>2],i[A+8>>2]=i[u+8>>2],er(A)}if(J(s,A,l),Y(l),_=0|i[(a=r)>>2],a=0|i[a+4>>2],v=0|tu(7,0,0|(y=(15-o|0)*3|0)),a&=~(0|E()),y=0|tu(0|ee(l),0,0|y),a=0|E()|a,i[(g=r)>>2]=y|_&~v,i[g+4>>2]=a,(0|o)<=1){n=14;break}}o:do if((0|n)!=13&&(0|n)==14){if(((0|i[u>>2])<=1?(0|i[u+4>>2])<=1:0)?(0|i[u+8>>2])<=1:0){l=(0|(a=0|V(d,n=0|ee(u))))==127?0:0|F(a);s:do if(n){if(c){if((0|(a=0|eE(e,t)))==7){a=5;break o}if((0|(o=0|i[21248+(28*a|0)+(n<<2)>>2]))>0){a=n,n=0;do a=0|es(a),n=n+1|0;while((0|n)!=(0|o))}else a=n;if((0|a)==1){a=9;break o}(0|(n=0|V(d,a)))==127&&S(23200,23090,411,23230),0|F(n)?S(23245,23090,412,23230):(p=n,f=o,h=a)}else p=a,f=0,h=n;if((0|(A=0|i[4272+(28*d|0)+(h<<2)>>2]))<=-1&&S(23276,23090,419,23230),!l){if((0|f)<0){a=5;break o}if(0|f){a=0,n=0|i[(o=r)>>2],o=0|i[o+4>>2];do n=0|eT(n,o),o=0|E(),i[(y=r)>>2]=n,i[y+4>>2]=o,a=a+1|0;while((0|a)<(0|f))}if((0|A)<=0){a=p,n=58;break}for(a=0,n=0|i[(o=r)>>2],o=0|i[o+4>>2];;)if(n=0|eT(n,o),o=0|E(),i[(y=r)>>2]=n,i[y+4>>2]=o,(0|(a=a+1|0))==(0|A)){a=p,n=58;break s}}if((0|(s=0|j(p,d)))==7&&S(23066,23090,428,23230),n=0|i[(a=r)>>2],a=0|i[a+4>>2],(0|A)>0){o=0;do n=0|eT(n,a),a=0|E(),i[(y=r)>>2]=n,i[y+4>>2]=a,o=o+1|0;while((0|o)!=(0|A))}if((0|(a=0|eE(n,a)))==7&&S(23313,23090,440,23230),(0|(n=0|i[((n=0|z(p))?21664:21456)+(28*s|0)+(a<<2)>>2]))<0&&S(23313,23090,454,23230),n){a=0,o=0|i[(s=r)>>2],s=0|i[s+4>>2];do o=0|eS(o,s),s=0|E(),i[(y=r)>>2]=o,i[y+4>>2]=s,a=a+1|0;while((0|a)<(0|n))a=p,n=58}else a=p,n=58}else if((0|c)!=0&(0|l)!=0){if((0|(n=0|eE(e,t)))==7|(0|(o=0|eE(0|i[(o=r)>>2],0|i[o+4>>2])))==7||(0|(o=0|i[21248+(28*n|0)+(o<<2)>>2]))<0){a=5;break o}if(o){n=0,s=0|i[(A=r)>>2],A=0|i[A+4>>2];do s=0|eT(s,A),A=0|E(),i[(y=r)>>2]=s,i[y+4>>2]=A,n=n+1|0;while((0|n)<(0|o))n=58}else n=59}else n=58;while(0)if((0|n)==58&&l&&(n=59),(0|n)==59&&(0|eE(0|i[(y=r)>>2],0|i[y+4>>2]))==1){a=9;break}v=0|i[(y=r)>>2],y=-1040385&i[y+4>>2],_=0|tu(0|a,0,45),y|=0|E(),i[(a=r)>>2]=v|_,i[a+4>>2]=y,a=0}else a=1}while(0)return y=a,D=m,0|y}function eQ(e,t,n,r){e|=0,t|=0;var i=0,a=0,o=0;if((0|(n|=0))==0&(0|(r|=0))==0)return a=1,w(0|(i=0)),0|a;a=e,i=t,e=1,t=0;do e=0|ta(((o=(1&n|0)==0&!0)?1:a)|0,(o?0:i)|0,0|e,0|t),t=0|E(),n=0|tA(0|n,0|r,1),r=0|E(),a=0|ta(0|a,0|i,0|a,0|i),i=0|E();while(!((0|n)==0&(0|r)==0))return w(0|t),0|e}function eY(e,t,n){e|=0;var r=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0;if(!(0|X(t|=0,n|=0))||(t=0|W(t),r=+a[n>>3],o=t&(o=+a[n+8>>3])<0?o+6.283185307179586:o,(0|(f=0|i[e>>2]))<=0))return 0|(f=0);if(d=0|i[e+4>>2],t){t=0,h=o,n=-1,e=0;o:for(;;){for(c=e;A=+a[d+(c<<4)>>3],o=+a[d+(c<<4)+8>>3],s=+a[d+((e=(n+2|0)%(0|f)|0)<<4)>>3],l=+a[d+(e<<4)+8>>3],A>s?(u=A,A=l):(u=s,s=A,A=o,o=l),(r=r==s|r==u?r+2220446049250313e-31:r)<s|r>u;){if((0|(n=c+1|0))>=(0|f)){n=22;break o}e=c,c=n,n=e}if(h=(l=A<0?A+6.283185307179586:A)==h|(A=o<0?o+6.283185307179586:o)==h?h+-.0000000000000002220446049250313:h,((u=l+(A-l)*((r-s)/(u-s)))<0?u+6.283185307179586:u)>h&&(t^=1),(0|(e=c+1|0))>=(0|f)){n=22;break}n=c}if((0|n)==22)return 0|t}else{t=0,h=o,n=-1,e=0;s:for(;;){for(c=e;A=+a[d+(c<<4)>>3],o=+a[d+(c<<4)+8>>3],s=+a[d+((e=(n+2|0)%(0|f)|0)<<4)>>3],l=+a[d+(e<<4)+8>>3],A>s?(u=A,A=l):(u=s,s=A,A=o,o=l),(r=r==s|r==u?r+2220446049250313e-31:r)<s|r>u;){if((0|(n=c+1|0))>=(0|f)){n=22;break s}e=c,c=n,n=e}if(h=A==h|o==h?h+-.0000000000000002220446049250313:h,A+(o-A)*((r-s)/(u-s))>h&&(t^=1),(0|(e=c+1|0))>=(0|f)){n=22;break}n=c}if((0|n)==22)return 0|t}return 0}function eZ(e,t){e|=0,t|=0;var n=0,r=0,o=0,s=0,A=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0;if(!(g=0|i[e>>2])){i[t>>2]=0,i[t+4>>2]=0,i[t+8>>2]=0,i[t+12>>2]=0,i[t+16>>2]=0,i[t+20>>2]=0,i[t+24>>2]=0,i[t+28>>2]=0;return}if(a[(v=t+8|0)>>3]=17976931348623157e292,a[(_=t+24|0)>>3]=17976931348623157e292,a[t>>3]=-17976931348623157e292,a[(y=t+16|0)>>3]=-17976931348623157e292,!((0|g)<=0)){for(p=0|i[e+4>>2],h=17976931348623157e292,d=-17976931348623157e292,f=0,e=-1,s=17976931348623157e292,A=17976931348623157e292,c=-17976931348623157e292,r=-17976931348623157e292,m=0;n=+a[p+(m<<4)>>3],u=+a[p+(m<<4)+8>>3],o=+a[p+(((0|(e=e+2|0))==(0|g)?0:e)<<4)+8>>3],n<s&&(a[v>>3]=n,s=n),u<A&&(a[_>>3]=u,A=u),n>c?a[t>>3]=n:n=c,u>r&&(a[y>>3]=u,r=u),h=u>0&u<h?u:h,d=u<0&u>d?u:d,f|=+l(+(u-o))>3.141592653589793,(0|(e=m+1|0))!=(0|g);)x=m,c=n,m=e,e=x;f&&(a[y>>3]=d,a[_>>3]=h)}}function eK(e,t,n,r,i){e|=0,t|=0,n|=0,r|=0,i|=0;var o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0;u=+a[e>>3],l=+a[t>>3]-u,A=+a[e+8>>3],s=+a[t+8>>3]-A,h=+a[n>>3],o=+a[r>>3]-h,d=+a[n+8>>3],c=+a[r+8>>3]-d,o=(o*(A-d)-(u-h)*c)/(l*c-s*o),a[i>>3]=u+l*o,a[i+8>>3]=A+s*o}function eJ(e,t){return(t|=0,11920928955078125e-23>+l(+(+a[(e|=0)>>3]-+a[t>>3])))?0|(t=11920928955078125e-23>+l(+(+a[e+8>>3]-+a[t+8>>3]))):0|(t=0)}function e$(e,t){e|=0,t|=0;var n=0,r=0,i=0;return+((i=+a[e>>3]-+a[t>>3])*i+(r=+a[e+8>>3]-+a[t+8>>3])*r+(n=+a[e+16>>3]-+a[t+16>>3])*n)}function e0(e,t,n){e|=0,t|=0,n|=0;var r,a,o=0,s=0,A=0,l=0,u=0,c=0,h=0;if(h=D,D=D+32|0,l=h+16|0,u=h,0|(o=0|eD(e,t,l)))return n=o,D=h,0|n;A=0|ey(e,t),c=0|eE(e,t),r=7696+(28*(r=0|A)|0)|0,i[(a=0|u)>>2]=i[r>>2],i[a+4>>2]=i[r+4>>2],i[a+8>>2]=i[r+8>>2],i[a+12>>2]=i[r+12>>2],o=0|function(e,t){e|=0;var n=0,r=0;if((t|=0)>>>0>20)return 0|(t=-1);do if((0|i[11120+(216*t|0)>>2])!=(0|e)){if((0|i[11120+(216*t|0)+8>>2])!=(0|e)){if((0|i[11120+(216*t|0)+16>>2])!=(0|e)){if((0|i[11120+(216*t|0)+24>>2])!=(0|e)){if((0|i[11120+(216*t|0)+32>>2])!=(0|e)){if((0|i[11120+(216*t|0)+40>>2])!=(0|e)){if((0|i[11120+(216*t|0)+48>>2])!=(0|e)){if((0|i[11120+(216*t|0)+56>>2])!=(0|e)){if((0|i[11120+(216*t|0)+64>>2])!=(0|e)){if((0|i[11120+(216*t|0)+72>>2])!=(0|e)){if((0|i[11120+(216*t|0)+80>>2])!=(0|e)){if((0|i[11120+(216*t|0)+88>>2])!=(0|e)){if((0|i[11120+(216*t|0)+96>>2])!=(0|e)){if((0|i[11120+(216*t|0)+104>>2])!=(0|e)){if((0|i[11120+(216*t|0)+112>>2])!=(0|e)){if((0|i[11120+(216*t|0)+120>>2])!=(0|e)){if((0|i[11120+(216*t|0)+128>>2])!=(0|e)){if((0|i[11120+(216*t|0)+136>>2])==(0|e))e=2,n=1,r=2;else{if((0|i[11120+(216*t|0)+144>>2])==(0|e)){e=0,n=2,r=0;break}if((0|i[11120+(216*t|0)+152>>2])==(0|e)){e=0,n=2,r=1;break}if((0|i[11120+(216*t|0)+160>>2])==(0|e)){e=0,n=2,r=2;break}if((0|i[11120+(216*t|0)+168>>2])==(0|e)){e=1,n=2,r=0;break}if((0|i[11120+(216*t|0)+176>>2])==(0|e)){e=1,n=2,r=1;break}if((0|i[11120+(216*t|0)+184>>2])==(0|e)){e=1,n=2,r=2;break}if((0|i[11120+(216*t|0)+192>>2])==(0|e)){e=2,n=2,r=0;break}if((0|i[11120+(216*t|0)+200>>2])==(0|e)){e=2,n=2,r=1;break}if((0|i[11120+(216*t|0)+208>>2])==(0|e)){e=2,n=2,r=2;break}return 0|(e=-1)}}else e=2,n=1,r=1}else e=2,n=1,r=0}else e=1,n=1,r=2}else e=1,n=1,r=1}else e=1,n=1,r=0}else e=0,n=1,r=2}else e=0,n=1,r=1}else e=0,n=1,r=0}else e=2,n=0,r=2}else e=2,n=0,r=1}else e=2,n=0,r=0}else e=1,n=0,r=2}else e=1,n=0,r=1}else e=1,n=0,r=0}else e=0,n=0,r=2}else e=0,n=0,r=1}else e=0,n=0,r=0;while(0)return 0|(t=0|i[11120+(216*t|0)+(72*n|0)+(24*e|0)+(r<<3)+4>>2])}(A,0|i[l>>2]);o:do if(0|F(A)){do switch(0|A){case 4:e=0;break;case 14:e=1;break;case 24:e=2;break;case 38:e=3;break;case 49:e=4;break;case 58:e=5;break;case 63:e=6;break;case 72:e=7;break;case 83:e=8;break;case 97:e=9;break;case 107:e=10;break;case 117:e=11;break;default:o=1;break o}while(0)if(s=0|i[22e3+(24*e|0)+8>>2],t=0|i[22e3+(24*e|0)+16>>2],(0|(e=0|i[l>>2]))!=(0|i[u>>2])&&(u=0|z(A))|(0|(e=0|i[l>>2]))==(0|t)&&(o=(o+1|0)%6|0),(0|c)==3&(0|e)==(0|t)){o=(o+5|0)%6|0,s=22;break}(0|c)==5&(0|e)==(0|s)&&(o=(o+1|0)%6|0),s=22}else s=22;while(0)return(0|s)==22&&(i[n>>2]=o,o=0),n=o,D=h,0|n}function e1(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0;if(y=D,D=D+32|0,_=y+24|0,g=y+20|0,p=y+8|0,f=y+16|0,d=y,l=(l=(0|ew(e,t))==0)?6:5,c=0|tl(0|e,0|t,52),E(),c&=15,l>>>0<=n>>>0)return r=2,D=y,0|r;((h=(0|c)==0)?0:((m=0|tu(7,0,(15^c)*3|0))&e|0)==0&((0|E())&t|0)==0)?a=n:o=4;o:do if((0|o)==4){if((((a=(0|ew(e,t))!=0)?4:5)|0)<(0|n)||0|e0(e,t,_)||(o=(0|i[_>>2])+n|0,(0|(m=0|i[(a=a?22288+(((0|o)%5|0)<<2)|0:22320+(((0|o)%6|0)<<2)|0)>>2]))==7))return r=1,D=y,0|r;i[g>>2]=0,a=0|N(e,t,m,g,p);do if(!a){if(u=0|i[(A=p)>>2],o=(s=(A=0|i[A+4>>2])>>>0<t>>>0|(0|A)==(0|t)&u>>>0<e>>>0)?u:e,s=s?A:t,h?0:(u&(h=0|tu(7,0,(15^c)*3|0))|0)==0&(A&(0|E())|0)==0)a=n;else{if(A=(n+-1+l|0)%(0|l)|0,a=0|ew(e,t),(0|A)<0&&S(23313,23315,245,23324),(((l=(0|a)!=0)?4:5)|0)<(0|A)&&S(23313,23315,245,23324),0|e0(e,t,_)&&S(23313,23315,245,23324),a=(0|i[_>>2])+A|0,(0|(A=0|i[(a=l?22288+(((0|a)%5|0)<<2)|0:22320+(((0|a)%6|0)<<2)|0)>>2]))==7&&S(23313,23315,245,23324),i[f>>2]=0,0|(a=0|N(e,t,A,f,d)))break;l=0|i[(u=d)>>2],u=0|i[u+4>>2];do if(u>>>0<s>>>0|(0|u)==(0|s)&l>>>0<o>>>0){if(o=0|ew(l,u)?0|B(l,u,e,t):0|i[22384+((((0|i[f>>2])+(0|i[22352+(A<<2)>>2])|0)%6|0)<<2)>>2],a=0|ew(l,u),(o+-1|0)>>>0>5||(0|o)==1&(a=(0|a)!=0)){a=-1,o=l,s=u;break}do if(0|e0(l,u,_))a=-1;else{if(a){a=((0|i[21936+(o<<2)>>2])+5-(0|i[_>>2])|0)%5|0;break}a=((0|i[21968+(o<<2)>>2])+6-(0|i[_>>2])|0)%6|0;break}while(0)o=l,s=u}else a=n;while(0)u=0|i[(A=p)>>2],A=0|i[A+4>>2]}if((0|o)==(0|u)&(0|s)==(0|A)){if(e=(l=(0|ew(u,A))!=0)?0|B(u,A,e,t):0|i[22384+((((0|i[g>>2])+(0|i[22352+(m<<2)>>2])|0)%6|0)<<2)>>2],a=0|ew(u,A),(e+-1|0)>>>0<=5?!((0|e)==1&(v=(0|a)!=0)):0)do if(0|e0(u,A,_))a=-1;else{if(v){a=((0|i[21936+(e<<2)>>2])+5-(0|i[_>>2])|0)%5|0;break}a=((0|i[21968+(e<<2)>>2])+6-(0|i[_>>2])|0)%6|0;break}while(0)else a=-1;a=(0|(a=a+1|0))==6|l&(0|a)==5?0:a}t=s,e=o;break o}while(0)return r=a,D=y,0|r}while(0)return v=0|tu(0|a,0,56),_=0|E()|-2130706433&t|536870912,i[r>>2]=v|e,i[r+4>>2]=_,r=0,D=y,0|r}function e2(e,t,n){e|=0,n|=0;var r=0;(0|(t|=0))>0?(r=0|e9(t,4),i[e>>2]=r,r||S(23337,23360,40,23374)):i[e>>2]=0,i[e+4>>2]=t,i[e+8>>2]=0,i[e+12>>2]=n}function e3(e){e|=0;var t=0,n=0,r=0,o=0,s=0,A=0,u=0;o=e+4|0,s=e+12|0,A=e+8|0;o:for(;;){for(n=0|i[o>>2],t=0;;){if((0|t)>=(0|n))break o;if(r=0|i[e>>2],u=0|i[r+(t<<2)>>2])break;t=t+1|0}t=r+(~~(+l(+(+c(10,+ +(15-(0|i[s>>2])|0))*(+a[u>>3]+ +a[u+8>>3])))%+(0|n))>>>0<<2)|0,n=0|i[t>>2];s:do if(0|n){if(r=u+32|0,(0|n)==(0|u))i[t>>2]=i[r>>2];else{if(!(t=0|i[(n=n+32|0)>>2]))break;for(;(0|t)!=(0|u);)if(!(t=0|i[(n=t+32|0)>>2]))break s;i[n>>2]=i[r>>2]}e7(u),i[A>>2]=(0|i[A>>2])+-1}while(0)}e7(0|i[e>>2])}function e4(e){e|=0;var t=0,n=0,r=0;for(r=0|i[e+4>>2],n=0;;){if((0|n)>=(0|r)){t=0,n=4;break}if(t=0|i[(0|i[e>>2])+(n<<2)>>2]){n=4;break}n=n+1|0}return(0|n)==4?0|t:0}function e5(e,t){e|=0,t|=0;var n=0,r=0,o=0,s=0;if(n=~~(+l(+(+c(10,+ +(15-(0|i[e+12>>2])|0))*(+a[t>>3]+ +a[t+8>>3])))%+(0|i[e+4>>2]))>>>0,n=(0|i[e>>2])+(n<<2)|0,!(r=0|i[n>>2]))return 0|(s=1);s=t+32|0;do if((0|r)!=(0|t)){if(!(n=0|i[r+32>>2]))return 0|(s=1);for(o=n;;){if((0|o)==(0|t)){o=8;break}if(n=0|i[o+32>>2])r=o,o=n;else{n=1,o=10;break}}if((0|o)==8){i[r+32>>2]=i[s>>2];break}if((0|o)==10)return 0|n}else i[n>>2]=i[s>>2];while(0)return e7(t),i[(s=e+8|0)>>2]=(0|i[s>>2])+-1,0|(s=0)}function e6(e){return 0|~~+ + +tm(+ +(e=+e))}function e8(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0,b=0;b=D,D=D+16|0,d=b;do if(e>>>0<245){if(e=(u=e>>>0<11?16:e+11&-8)>>>3,3&(n=(h=0|i[5857])>>>e)|0)return a=(r=0|i[(n=(e=23468+((t=(1&n^1)+e|0)<<1<<2)|0)+8|0)>>2])+8|0,(0|(o=0|i[a>>2]))==(0|e)?i[5857]=h&~(1<<t):(i[o+12>>2]=e,i[n>>2]=o),x=t<<3,i[r+4>>2]=3|x,i[(x=r+x+4|0)>>2]=1|i[x>>2],x=a,D=b,0|x;if(u>>>0>(c=0|i[5859])>>>0){if(0|n)return t=2<<e,A=(t=((t=n<<e&(t|0-t))&0-t)+-1|0)>>>12&16,t>>>=A,n=t>>>5&8,t>>>=n,o=t>>>2&4,t>>>=o,e=t>>>1&2,t>>>=e,A=(o=0|i[(e=(t=23468+((r=(n|A|o|e|(r=t>>>1&1))+(t>>>r)|0)<<1<<2)|0)+8|0)>>2])+8|0,(0|(n=0|i[A>>2]))==(0|t)?(e=h&~(1<<r),i[5857]=e):(i[n+12>>2]=t,i[e>>2]=n,e=h),s=(x=r<<3)-u|0,i[o+4>>2]=3|u,i[(a=o+u|0)+4>>2]=1|s,i[o+x>>2]=s,0|c&&(r=0|i[5862],n=23468+((t=c>>>3)<<1<<2)|0,e&(t=1<<t)?t=0|i[(e=n+8|0)>>2]:(i[5857]=e|t,t=n,e=n+8|0),i[e>>2]=r,i[t+12>>2]=r,i[r+8>>2]=t,i[r+12>>2]=n),i[5859]=s,i[5862]=a,x=A,D=b,0|x;if(o=0|i[5858]){for(a=(n=(o&0-o)+-1|0)>>>12&16,n>>>=a,r=n>>>5&8,n>>>=r,s=n>>>2&4,n>>>=s,A=n>>>1&2,n>>>=A,n=l=0|i[23732+((r|a|s|A|(l=n>>>1&1))+(n>>>l)<<2)>>2],A=l,l=(-8&i[l+4>>2])-u|0;(e=0|i[n+16>>2])||(e=0|i[n+20>>2]);)a=(s=(-8&i[e+4>>2])-u|0)>>>0<l>>>0,n=e,A=a?e:A,l=a?s:l;if((s=A+u|0)>>>0>A>>>0){a=0|i[A+24>>2],t=0|i[A+12>>2];do if((0|t)==(0|A)){if(!(t=0|i[(e=A+20|0)>>2])&&!(t=0|i[(e=A+16|0)>>2])){n=0;break}for(;;)if(n=0|i[(r=t+20|0)>>2])t=n,e=r;else if(n=0|i[(r=t+16|0)>>2])t=n,e=r;else break;i[e>>2]=0,n=t}else n=0|i[A+8>>2],i[n+12>>2]=t,i[t+8>>2]=n,n=t;while(0)do if(0|a){if(e=23732+((t=0|i[A+28>>2])<<2)|0,(0|A)==(0|i[e>>2])){if(i[e>>2]=n,!n){i[5858]=o&~(1<<t);break}}else if(i[((0|i[(x=a+16|0)>>2])==(0|A)?x:a+20|0)>>2]=n,!n)break;i[n+24>>2]=a,0|(t=0|i[A+16>>2])&&(i[n+16>>2]=t,i[t+24>>2]=n),0|(t=0|i[A+20>>2])&&(i[n+20>>2]=t,i[t+24>>2]=n)}while(0)return l>>>0<16?(x=l+u|0,i[A+4>>2]=3|x,i[(x=A+x+4|0)>>2]=1|i[x>>2]):(i[A+4>>2]=3|u,i[s+4>>2]=1|l,i[s+l>>2]=l,0|c&&(r=0|i[5862],n=23468+((t=c>>>3)<<1<<2)|0,(t=1<<t)&h?t=0|i[(e=n+8|0)>>2]:(i[5857]=t|h,t=n,e=n+8|0),i[e>>2]=r,i[t+12>>2]=r,i[r+8>>2]=t,i[r+12>>2]=n),i[5859]=l,i[5862]=s),x=A+8|0,D=b,0|x}h=u}else h=u}else h=u}else if(e>>>0<=4294967231){if(u=-8&(e=e+11|0),r=0|i[5858]){a=0-u|0,(e>>>=8)?u>>>0>16777215?l=31:(h=(e+1048320|0)>>>16&8,A=((m=e<<h)+520192|0)>>>16&4,m<<=A,l=u>>>((l=14-(A|h|(l=(m+245760|0)>>>16&2))+(m<<l>>>15)|0)+7|0)&1|l<<1):l=0,n=0|i[23732+(l<<2)>>2];o:do if(n)for(e=0,A=u<<((0|l)==31?0:25-(l>>>1)|0),o=0;;){if((s=(-8&i[n+4>>2])-u|0)>>>0<a>>>0){if(s)e=n,a=s;else{e=n,a=0,m=65;break o}}if(o=(0|(m=0|i[n+20>>2]))==0|(0|m)==(0|(n=0|i[n+16+(A>>>31<<2)>>2]))?o:m,n)A<<=1;else{n=o,m=61;break}}else n=0,e=0,m=61;while(0)if((0|m)==61){if((0|n)==0&(0|e)==0){if(!(e=((e=2<<l)|0-e)&r)){h=u;break}s=(h=(e&0-e)+-1|0)>>>12&16,h>>>=s,o=h>>>5&8,h>>>=o,A=h>>>2&4,h>>>=A,l=h>>>1&2,h>>>=l,e=0,n=0|i[23732+((o|s|A|l|(n=h>>>1&1))+(h>>>n)<<2)>>2]}n?m=65:(A=e,s=a)}if((0|m)==65)for(o=n;;)if(a=(n=(h=(-8&i[o+4>>2])-u|0)>>>0<a>>>0)?h:a,e=n?o:e,(n=0|i[o+16>>2])||(n=0|i[o+20>>2]),n)o=n;else{A=e,s=a;break}if(((0|A)!=0?s>>>0<((0|i[5859])-u|0)>>>0:0)?(c=A+u|0)>>>0>A>>>0:0){o=0|i[A+24>>2],t=0|i[A+12>>2];do if((0|t)==(0|A)){if(!(t=0|i[(e=A+20|0)>>2])&&!(t=0|i[(e=A+16|0)>>2])){t=0;break}for(;;)if(n=0|i[(a=t+20|0)>>2])t=n,e=a;else if(n=0|i[(a=t+16|0)>>2])t=n,e=a;else break;i[e>>2]=0}else x=0|i[A+8>>2],i[x+12>>2]=t,i[t+8>>2]=x;while(0)do if(o){if(n=23732+((e=0|i[A+28>>2])<<2)|0,(0|A)==(0|i[n>>2])){if(i[n>>2]=t,!t){r&=~(1<<e),i[5858]=r;break}}else if(i[((0|i[(x=o+16|0)>>2])==(0|A)?x:o+20|0)>>2]=t,!t)break;i[t+24>>2]=o,0|(e=0|i[A+16>>2])&&(i[t+16>>2]=e,i[e+24>>2]=t),(e=0|i[A+20>>2])&&(i[t+20>>2]=e,i[e+24>>2]=t)}while(0)do if(s>>>0<16)x=s+u|0,i[A+4>>2]=3|x,i[(x=A+x+4|0)>>2]=1|i[x>>2];else{if(i[A+4>>2]=3|u,i[c+4>>2]=1|s,i[c+s>>2]=s,t=s>>>3,s>>>0<256){n=23468+(t<<1<<2)|0,(e=0|i[5857])&(t=1<<t)?t=0|i[(e=n+8|0)>>2]:(i[5857]=e|t,t=n,e=n+8|0),i[e>>2]=c,i[t+12>>2]=c,i[c+8>>2]=t,i[c+12>>2]=n;break}if((t=s>>>8)?s>>>0>16777215?n=31:(y=(t+1048320|0)>>>16&8,_=((x=t<<y)+520192|0)>>>16&4,x<<=_,n=s>>>((n=14-(_|y|(n=(x+245760|0)>>>16&2))+(x<<n>>>15)|0)+7|0)&1|n<<1):n=0,t=23732+(n<<2)|0,i[c+28>>2]=n,i[(e=c+16|0)+4>>2]=0,i[e>>2]=0,!(r&(e=1<<n))){i[5858]=r|e,i[t>>2]=c,i[c+24>>2]=t,i[c+12>>2]=c,i[c+8>>2]=c;break}t=0|i[t>>2];A:if((-8&i[t+4>>2]|0)!=(0|s)){for(r=s<<((0|n)==31?0:25-(n>>>1)|0);e=0|i[(n=t+16+(r>>>31<<2)|0)>>2];){if((-8&i[e+4>>2]|0)==(0|s)){t=e;break A}r<<=1,t=e}i[n>>2]=c,i[c+24>>2]=t,i[c+12>>2]=c,i[c+8>>2]=c;break}x=0|i[(y=t+8|0)>>2],i[x+12>>2]=c,i[y>>2]=c,i[c+8>>2]=x,i[c+12>>2]=t,i[c+24>>2]=0}while(0)return x=A+8|0,D=b,0|x}h=u}else h=u}else h=-1;while(0)if((n=0|i[5859])>>>0>=h>>>0)return t=n-h|0,e=0|i[5862],t>>>0>15?(x=e+h|0,i[5862]=x,i[5859]=t,i[x+4>>2]=1|t,i[e+n>>2]=t,i[e+4>>2]=3|h):(i[5859]=0,i[5862]=0,i[e+4>>2]=3|n,i[(x=e+n+4|0)>>2]=1|i[x>>2]),x=e+8|0,D=b,0|x;if((s=0|i[5860])>>>0>h>>>0)return _=s-h|0,i[5860]=_,y=(x=0|i[5863])+h|0,i[5863]=y,i[y+4>>2]=1|_,i[x+4>>2]=3|h,x=x+8|0,D=b,0|x;if(0|i[5975]?e=0|i[5977]:(i[5977]=4096,i[5976]=4096,i[5978]=-1,i[5979]=-1,i[5980]=0,i[5968]=0,i[5975]=-16&d^1431655768,e=4096),A=h+48|0,(u=(o=e+(l=h+47|0)|0)&(a=0-e|0))>>>0<=h>>>0||(0|(e=0|i[5967])?(d=(c=0|i[5965])+u|0)>>>0<=c>>>0|d>>>0>e>>>0:0))return x=0,D=b,0|x;l:do if(4&i[5968])t=0,m=143;else{n=0|i[5863];u:if(n){for(r=23876;!((d=0|i[r>>2])>>>0<=n>>>0)||!((d+(0|i[r+4>>2])|0)>>>0>n>>>0);)if(e=0|i[r+8>>2])r=e;else{m=128;break u}if((t=o-s&a)>>>0<2147483647){if((0|(e=0|tg(0|t)))==((0|i[r>>2])+(0|i[r+4>>2])|0)){if((0|e)!=-1){s=t,o=e,m=145;break}}else r=e,m=136}else t=0}else m=128;do if((0|m)==128){if((0|(n=0|tg(0)))!=-1?(t=n,p=(t=(((p=(f=0|i[5976])+-1|0)&t|0)==0?0:(p+t&0-f)-t|0)+u|0)+(f=0|i[5965])|0,t>>>0>h>>>0&t>>>0<2147483647):0){if(0|(d=0|i[5967])?p>>>0<=f>>>0|p>>>0>d>>>0:0){t=0;break}if((0|(e=0|tg(0|t)))==(0|n)){s=t,o=n,m=145;break l}r=e,m=136}else t=0}while(0)do if((0|m)==136){if(n=0-t|0,!(A>>>0>t>>>0&(t>>>0<2147483647&(0|r)!=-1))){if((0|r)==-1){t=0;break}s=t,o=r,m=145;break l}if((e=l-t+(e=0|i[5977])&0-e)>>>0>=2147483647){s=t,o=r,m=145;break l}if((0|tg(0|e))==-1){tg(0|n),t=0;break}s=e+t|0,o=r,m=145;break l}while(0)i[5968]=4|i[5968],m=143}while(0)if((((0|m)==143?u>>>0<2147483647:0)?(_=0|tg(0|u),v=(g=(p=0|tg(0))-_|0)>>>0>(h+40|0)>>>0,!((0|_)==-1|1^v|_>>>0<p>>>0&((0|_)!=-1&(0|p)!=-1)^1)):0)&&(s=v?g:t,o=_,m=145),(0|m)==145){t=(0|i[5965])+s|0,i[5965]=t,t>>>0>(0|i[5966])>>>0&&(i[5966]=t),l=0|i[5863];do if(l){for(t=23876;;){if((0|o)==((e=0|i[t>>2])+(n=0|i[t+4>>2])|0)){m=154;break}if(r=0|i[t+8>>2])t=r;else break}if(((0|m)==154?(y=t+4|0,(8&i[t+12>>2]|0)==0):0)?o>>>0>l>>>0&e>>>0<=l>>>0:0){i[y>>2]=n+s,x=(0|i[5860])+s|0,_=(7&(_=l+8|0)|0)==0?0:0-_&7,y=l+_|0,_=x-_|0,i[5863]=y,i[5860]=_,i[y+4>>2]=1|_,i[l+x+4>>2]=40,i[5864]=i[5979];break}for(o>>>0<(0|i[5861])>>>0&&(i[5861]=o),n=o+s|0,t=23876;;){if((0|i[t>>2])==(0|n)){m=162;break}if(e=0|i[t+8>>2])t=e;else break}if((0|m)==162?(8&i[t+12>>2]|0)==0:0){i[t>>2]=o,i[(c=t+4|0)>>2]=(0|i[c>>2])+s,c=o+8|0,c=o+((7&c|0)==0?0:0-c&7)|0,t=n+8|0,t=n+((7&t|0)==0?0:0-t&7)|0,u=c+h|0,A=t-c-h|0,i[c+4>>2]=3|h;do if((0|l)==(0|t))x=(0|i[5860])+A|0,i[5860]=x,i[5863]=u,i[u+4>>2]=1|x;else{if((0|i[5862])==(0|t)){x=(0|i[5859])+A|0,i[5859]=x,i[5862]=u,i[u+4>>2]=1|x,i[u+x>>2]=x;break}if((3&(e=0|i[t+4>>2])|0)==1){s=-8&e,r=e>>>3;c:do if(e>>>0<256){if(e=0|i[t+8>>2],(0|(n=0|i[t+12>>2]))==(0|e)){i[5857]=i[5857]&~(1<<r);break}i[e+12>>2]=n,i[n+8>>2]=e;break}else{o=0|i[t+24>>2],e=0|i[t+12>>2];do if((0|e)==(0|t)){if(e=0|i[(r=(n=t+16|0)+4|0)>>2])n=r;else if(!(e=0|i[n>>2])){e=0;break}for(;;)if(r=0|i[(a=e+20|0)>>2])e=r,n=a;else if(r=0|i[(a=e+16|0)>>2])e=r,n=a;else break;i[n>>2]=0}else x=0|i[t+8>>2],i[x+12>>2]=e,i[e+8>>2]=x;while(0)if(!o)break;r=23732+((n=0|i[t+28>>2])<<2)|0;do if((0|i[r>>2])!=(0|t)){if(i[((0|i[(x=o+16|0)>>2])==(0|t)?x:o+20|0)>>2]=e,!e)break c}else{if(i[r>>2]=e,0|e)break;i[5858]=i[5858]&~(1<<n);break c}while(0)if(i[e+24>>2]=o,0|(r=0|i[(n=t+16|0)>>2])&&(i[e+16>>2]=r,i[r+24>>2]=e),!(n=0|i[n+4>>2]))break;i[e+20>>2]=n,i[n+24>>2]=e}while(0)t=t+s|0,a=s+A|0}else a=A;if(i[(t=t+4|0)>>2]=-2&i[t>>2],i[u+4>>2]=1|a,i[u+a>>2]=a,t=a>>>3,a>>>0<256){n=23468+(t<<1<<2)|0,(e=0|i[5857])&(t=1<<t)?t=0|i[(e=n+8|0)>>2]:(i[5857]=e|t,t=n,e=n+8|0),i[e>>2]=u,i[t+12>>2]=u,i[u+8>>2]=t,i[u+12>>2]=n;break}t=a>>>8;do if(t){if(a>>>0>16777215){r=31;break}y=(t+1048320|0)>>>16&8,_=((x=t<<y)+520192|0)>>>16&4,x<<=_,r=a>>>((r=14-(_|y|(r=(x+245760|0)>>>16&2))+(x<<r>>>15)|0)+7|0)&1|r<<1}else r=0;while(0)if(t=23732+(r<<2)|0,i[u+28>>2]=r,i[(e=u+16|0)+4>>2]=0,i[e>>2]=0,!((e=0|i[5858])&(n=1<<r))){i[5858]=e|n,i[t>>2]=u,i[u+24>>2]=t,i[u+12>>2]=u,i[u+8>>2]=u;break}t=0|i[t>>2];h:if((-8&i[t+4>>2]|0)!=(0|a)){for(r=a<<((0|r)==31?0:25-(r>>>1)|0);e=0|i[(n=t+16+(r>>>31<<2)|0)>>2];){if((-8&i[e+4>>2]|0)==(0|a)){t=e;break h}r<<=1,t=e}i[n>>2]=u,i[u+24>>2]=t,i[u+12>>2]=u,i[u+8>>2]=u;break}x=0|i[(y=t+8|0)>>2],i[x+12>>2]=u,i[y>>2]=u,i[u+8>>2]=x,i[u+12>>2]=t,i[u+24>>2]=0}while(0)return x=c+8|0,D=b,0|x}for(t=23876;!((e=0|i[t>>2])>>>0<=l>>>0)||!((x=e+(0|i[t+4>>2])|0)>>>0>l>>>0);)t=0|i[t+8>>2];e=(a=x+-47|0)+8|0,t=(e=(e=a+((7&e|0)==0?0:0-e&7)|0)>>>0<(a=l+16|0)>>>0?l:e)+8|0,n=s+-40|0,_=(7&(_=o+8|0)|0)==0?0:0-_&7,y=o+_|0,_=n-_|0,i[5863]=y,i[5860]=_,i[y+4>>2]=1|_,i[o+n+4>>2]=40,i[5864]=i[5979],i[(n=e+4|0)>>2]=27,i[t>>2]=i[5969],i[t+4>>2]=i[5970],i[t+8>>2]=i[5971],i[t+12>>2]=i[5972],i[5969]=o,i[5970]=s,i[5972]=0,i[5971]=t,t=e+24|0;do y=t,i[(t=t+4|0)>>2]=7;while((y+8|0)>>>0<x>>>0)if((0|e)!=(0|l)){if(o=e-l|0,i[n>>2]=-2&i[n>>2],i[l+4>>2]=1|o,i[e>>2]=o,t=o>>>3,o>>>0<256){n=23468+(t<<1<<2)|0,(e=0|i[5857])&(t=1<<t)?t=0|i[(e=n+8|0)>>2]:(i[5857]=e|t,t=n,e=n+8|0),i[e>>2]=l,i[t+12>>2]=l,i[l+8>>2]=t,i[l+12>>2]=n;break}if((t=o>>>8)?o>>>0>16777215?r=31:(y=(t+1048320|0)>>>16&8,_=((x=t<<y)+520192|0)>>>16&4,x<<=_,r=o>>>((r=14-(_|y|(r=(x+245760|0)>>>16&2))+(x<<r>>>15)|0)+7|0)&1|r<<1):r=0,n=23732+(r<<2)|0,i[l+28>>2]=r,i[l+20>>2]=0,i[a>>2]=0,!((t=0|i[5858])&(e=1<<r))){i[5858]=t|e,i[n>>2]=l,i[l+24>>2]=n,i[l+12>>2]=l,i[l+8>>2]=l;break}t=0|i[n>>2];d:if((-8&i[t+4>>2]|0)!=(0|o)){for(r=o<<((0|r)==31?0:25-(r>>>1)|0);e=0|i[(n=t+16+(r>>>31<<2)|0)>>2];){if((-8&i[e+4>>2]|0)==(0|o)){t=e;break d}r<<=1,t=e}i[n>>2]=l,i[l+24>>2]=t,i[l+12>>2]=l,i[l+8>>2]=l;break}x=0|i[(y=t+8|0)>>2],i[x+12>>2]=l,i[y>>2]=l,i[l+8>>2]=x,i[l+12>>2]=t,i[l+24>>2]=0}}else(0|(x=0|i[5861]))==0|o>>>0<x>>>0&&(i[5861]=o),i[5969]=o,i[5970]=s,i[5972]=0,i[5866]=i[5975],i[5865]=-1,i[5870]=23468,i[5869]=23468,i[5872]=23476,i[5871]=23476,i[5874]=23484,i[5873]=23484,i[5876]=23492,i[5875]=23492,i[5878]=23500,i[5877]=23500,i[5880]=23508,i[5879]=23508,i[5882]=23516,i[5881]=23516,i[5884]=23524,i[5883]=23524,i[5886]=23532,i[5885]=23532,i[5888]=23540,i[5887]=23540,i[5890]=23548,i[5889]=23548,i[5892]=23556,i[5891]=23556,i[5894]=23564,i[5893]=23564,i[5896]=23572,i[5895]=23572,i[5898]=23580,i[5897]=23580,i[5900]=23588,i[5899]=23588,i[5902]=23596,i[5901]=23596,i[5904]=23604,i[5903]=23604,i[5906]=23612,i[5905]=23612,i[5908]=23620,i[5907]=23620,i[5910]=23628,i[5909]=23628,i[5912]=23636,i[5911]=23636,i[5914]=23644,i[5913]=23644,i[5916]=23652,i[5915]=23652,i[5918]=23660,i[5917]=23660,i[5920]=23668,i[5919]=23668,i[5922]=23676,i[5921]=23676,i[5924]=23684,i[5923]=23684,i[5926]=23692,i[5925]=23692,i[5928]=23700,i[5927]=23700,i[5930]=23708,i[5929]=23708,i[5932]=23716,i[5931]=23716,x=s+-40|0,_=(7&(_=o+8|0)|0)==0?0:0-_&7,y=o+_|0,_=x-_|0,i[5863]=y,i[5860]=_,i[y+4>>2]=1|_,i[o+x+4>>2]=40,i[5864]=i[5979];while(0)if((t=0|i[5860])>>>0>h>>>0)return _=t-h|0,i[5860]=_,y=(x=0|i[5863])+h|0,i[5863]=y,i[y+4>>2]=1|_,i[x+4>>2]=3|h,x=x+8|0,D=b,0|x}return i[(x=23424)>>2]=12,x=0,D=b,0|x}function e7(e){var t=0,n=0,r=0,a=0,o=0,s=0,A=0,l=0;if(e|=0){n=e+-8|0,a=0|i[5861],l=n+(t=-8&(e=0|i[e+-4>>2]))|0;do if(1&e)A=n,s=n;else{if(r=0|i[n>>2],!(3&e)||(s=n+(0-r)|0,o=r+t|0,s>>>0<a>>>0))return;if((0|i[5862])==(0|s)){if((3&(t=0|i[(e=l+4|0)>>2])|0)!=3){A=s,t=o;break}i[5859]=o,i[e>>2]=-2&t,i[s+4>>2]=1|o,i[s+o>>2]=o;return}if(n=r>>>3,r>>>0<256){if(e=0|i[s+8>>2],(0|(t=0|i[s+12>>2]))==(0|e)){i[5857]=i[5857]&~(1<<n),A=s,t=o;break}i[e+12>>2]=t,i[t+8>>2]=e,A=s,t=o;break}a=0|i[s+24>>2],e=0|i[s+12>>2];do if((0|e)==(0|s)){if(e=0|i[(n=(t=s+16|0)+4|0)>>2])t=n;else if(!(e=0|i[t>>2])){e=0;break}for(;;)if(n=0|i[(r=e+20|0)>>2])e=n,t=r;else if(n=0|i[(r=e+16|0)>>2])e=n,t=r;else break;i[t>>2]=0}else A=0|i[s+8>>2],i[A+12>>2]=e,i[e+8>>2]=A;while(0)if(a){if(n=23732+((t=0|i[s+28>>2])<<2)|0,(0|i[n>>2])==(0|s)){if(i[n>>2]=e,!e){i[5858]=i[5858]&~(1<<t),A=s,t=o;break}}else if(i[((0|i[(A=a+16|0)>>2])==(0|s)?A:a+20|0)>>2]=e,!e){A=s,t=o;break}i[e+24>>2]=a,0|(n=0|i[(t=s+16|0)>>2])&&(i[e+16>>2]=n,i[n+24>>2]=e),(t=0|i[t+4>>2])&&(i[e+20>>2]=t,i[t+24>>2]=e),A=s,t=o}else A=s,t=o}while(0)if(!(s>>>0>=l>>>0)&&1&(r=0|i[(e=l+4|0)>>2])){if(2&r)i[e>>2]=-2&r,i[A+4>>2]=1|t,i[s+t>>2]=t,a=t;else{if((0|i[5863])==(0|l)){if(l=(0|i[5860])+t|0,i[5860]=l,i[5863]=A,i[A+4>>2]=1|l,(0|A)!=(0|i[5862]))return;i[5862]=0,i[5859]=0;return}if((0|i[5862])==(0|l)){l=(0|i[5859])+t|0,i[5859]=l,i[5862]=s,i[A+4>>2]=1|l,i[s+l>>2]=l;return}a=(-8&r)+t|0,n=r>>>3;do if(r>>>0<256){if(t=0|i[l+8>>2],(0|(e=0|i[l+12>>2]))==(0|t)){i[5857]=i[5857]&~(1<<n);break}i[t+12>>2]=e,i[e+8>>2]=t;break}else{o=0|i[l+24>>2],e=0|i[l+12>>2];do if((0|e)==(0|l)){if(e=0|i[(n=(t=l+16|0)+4|0)>>2])t=n;else if(!(e=0|i[t>>2])){n=0;break}for(;;)if(n=0|i[(r=e+20|0)>>2])e=n,t=r;else if(n=0|i[(r=e+16|0)>>2])e=n,t=r;else break;i[t>>2]=0,n=e}else n=0|i[l+8>>2],i[n+12>>2]=e,i[e+8>>2]=n,n=e;while(0)if(0|o){if(t=23732+((e=0|i[l+28>>2])<<2)|0,(0|i[t>>2])==(0|l)){if(i[t>>2]=n,!n){i[5858]=i[5858]&~(1<<e);break}}else if(i[((0|i[(r=o+16|0)>>2])==(0|l)?r:o+20|0)>>2]=n,!n)break;i[n+24>>2]=o,0|(t=0|i[(e=l+16|0)>>2])&&(i[n+16>>2]=t,i[t+24>>2]=n),0|(e=0|i[e+4>>2])&&(i[n+20>>2]=e,i[e+24>>2]=n)}}while(0)if(i[A+4>>2]=1|a,i[s+a>>2]=a,(0|A)==(0|i[5862])){i[5859]=a;return}}if(e=a>>>3,a>>>0<256){n=23468+(e<<1<<2)|0,(t=0|i[5857])&(e=1<<e)?e=0|i[(t=n+8|0)>>2]:(i[5857]=t|e,e=n,t=n+8|0),i[t>>2]=A,i[e+12>>2]=A,i[A+8>>2]=e,i[A+12>>2]=n;return}(e=a>>>8)?a>>>0>16777215?r=31:(s=(e+1048320|0)>>>16&8,o=((l=e<<s)+520192|0)>>>16&4,l<<=o,r=a>>>((r=14-(o|s|(r=(l+245760|0)>>>16&2))+(l<<r>>>15)|0)+7|0)&1|r<<1):r=0,e=23732+(r<<2)|0,i[A+28>>2]=r,i[A+20>>2]=0,i[A+16>>2]=0,t=0|i[5858],n=1<<r;o:if(t&n){e=0|i[e>>2];s:if((-8&i[e+4>>2]|0)!=(0|a)){for(r=a<<((0|r)==31?0:25-(r>>>1)|0);t=0|i[(n=e+16+(r>>>31<<2)|0)>>2];){if((-8&i[t+4>>2]|0)==(0|a)){e=t;break s}r<<=1,e=t}i[n>>2]=A,i[A+24>>2]=e,i[A+12>>2]=A,i[A+8>>2]=A;break o}l=0|i[(s=e+8|0)>>2],i[l+12>>2]=A,i[s>>2]=A,i[A+8>>2]=l,i[A+12>>2]=e,i[A+24>>2]=0}else i[5858]=t|n,i[e>>2]=A,i[A+24>>2]=e,i[A+12>>2]=A,i[A+8>>2]=A;if(l=(0|i[5865])+-1|0,i[5865]=l,!(0|l)){for(e=23884;;)if(e=0|i[e>>2])e=e+8|0;else break;i[5865]=-1}}}}function e9(e,t){t|=0;var n=0;return(e|=0)?(n=0|y(t,e),(t|e)>>>0>65535&&(n=((n>>>0)/(e>>>0)|0)==(0|t)?n:-1)):n=0,(e=0|e8(n))&&3&i[e+-4>>2]&&tp(0|e,0,0|n),0|e}function te(e,t,n,r){return e|=0,n|=0,w((t|=0)+(r|=0)+((n=e+n>>>0)>>>0<e>>>0|0)>>>0|0),0|n|0}function tt(e,t,n,r){return e|=0,t|=0,n|=0,r|=0,w(0|(r=t-r-(n>>>0>e>>>0|0)>>>0)),e-n>>>0|0}function tn(e){return((e|=0)?31-(0|M(e^e-1))|0:32)|0}function tr(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0;if(c=e,u=l=t,s=n,A=d=r,!u)return(o=(0|a)!=0,A)?(o&&(i[a>>2]=0|e,i[a+4>>2]=0&t),a=0,w(0|(d=0))):(o&&(i[a>>2]=(c>>>0)%(s>>>0),i[a+4>>2]=0),d=0,a=(c>>>0)/(s>>>0)>>>0,w(0|d)),0|a;o=(0|A)==0;do if(s){if(!o){if((o=(0|M(0|A))-(0|M(0|u))|0)>>>0<=31){h=o+1|0,A=31-o|0,t=o-31>>31,s=h,e=c>>>(h>>>0)&t|u<<A,t=u>>>(h>>>0)&t,o=0,A=c<<A;break}if(!a)return a=0,w(0|(d=0)),0|a;return i[a>>2]=0|e,i[a+4>>2]=l|0&t,a=0,w(0|(d=0)),0|a}if((o=s-1|0)&s|0){p=64-(A=(0|M(0|s))+33-(0|M(0|u))|0)|0,l=(h=32-A|0)>>31,t=(f=A-32|0)>>31,s=A,e=h-1>>31&u>>>(f>>>0)|(u<<h|c>>>(A>>>0))&t,t&=u>>>(A>>>0),o=c<<p&l,A=(u<<p|c>>>(f>>>0))&l|c<<h&A-33>>31;break}if(0|a&&(i[a>>2]=o&c,i[a+4>>2]=0),(0|s)==1)return f=l|0&t,p=0|e,w(0|f),0|p;return f=u>>>((p=0|tn(0|s))>>>0)|0,p=u<<32-p|c>>>(p>>>0)|0,w(0|f),0|p}else{if(o)return 0|a&&(i[a>>2]=(u>>>0)%(s>>>0),i[a+4>>2]=0),f=0,p=(u>>>0)/(s>>>0)>>>0,w(0|f),0|p;if(!c)return 0|a&&(i[a>>2]=0,i[a+4>>2]=(u>>>0)%(A>>>0)),f=0,p=(u>>>0)/(A>>>0)>>>0,w(0|f),0|p;if(!((o=A-1|0)&A))return 0|a&&(i[a>>2]=0|e,i[a+4>>2]=o&u|0&t),f=0,p=u>>>((0|tn(0|A))>>>0),w(0|f),0|p;if((o=(0|M(0|A))-(0|M(0|u))|0)>>>0<=30){t=o+1|0,A=31-o|0,s=t,e=u<<A|c>>>(t>>>0),t=u>>>(t>>>0),o=0,A=c<<A;break}if(!a)return p=0,w(0|(f=0)),0|p;return i[a>>2]=0|e,i[a+4>>2]=l|0&t,p=0,w(0|(f=0)),0|p}while(0)if(s){u=0|te(0|(h=0|n),0|(c=d|0&r),-1,-1),n=0|E(),l=A,A=0;do r=l,l=o>>>31|l<<1,o=A|o<<1,tt(0|u,0|n,0|(r=e<<1|r>>>31|0),0|(d=e>>>31|t<<1|0)),A=1&(f=(p=0|E())>>31|((0|p)<0?-1:0)<<1),e=0|tt(0|r,0|d,f&h|0,(((0|p)<0?-1:0)>>31|((0|p)<0?-1:0)<<1)&c|0),t=0|E(),s=s-1|0;while((0|s)!=0)u=l,l=0}else u=A,l=0,A=0;return s=0,0|a&&(i[a>>2]=e,i[a+4>>2]=t),f=(0|o)>>>31|(u|s)<<1|(s<<1|o>>>31)&0|l,p=(o<<1|0)&-2|A,w(0|f),0|p}function ti(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var i=0,a=0,o=0,s=0,A=0,l=0;return l=t>>31|((0|t)<0?-1:0)<<1,A=((0|t)<0?-1:0)>>31|((0|t)<0?-1:0)<<1,a=r>>31|((0|r)<0?-1:0)<<1,i=((0|r)<0?-1:0)>>31|((0|r)<0?-1:0)<<1,s=0|tt(l^e|0,A^t|0,0|l,0|A),o=0|E(),e=a^l,t=i^A,0|tt((0|tr(s,o,0|tt(a^n|0,i^r|0,0|a,0|i),0|E(),0))^e|0,(0|E())^t|0,0|e,0|t)}function ta(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var i,a,o,s,A,l,u=0,c=0;return u=e,c=n,n=0|(i=0|u,a=0|c,o=0,s=0,A=0,l=0,l=65535&i,i=((o=0|y(A=65535&a,l))>>>16)+(0|y(A,s=i>>>16))|0,a=0|y(A=a>>>16,l),w((i>>>16)+(0|y(A,s))+(((65535&i)+a|0)>>>16)|0),i+a<<16|65535&o|0),e=0|E(),w((0|y(t,c))+(0|y(r,u))+e|0&e|0),0|n|0}function to(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0,l=0,u=0;return a=D,D=D+16|0,A=0|a,s=t>>31|((0|t)<0?-1:0)<<1,o=((0|t)<0?-1:0)>>31|((0|t)<0?-1:0)<<1,u=r>>31|((0|r)<0?-1:0)<<1,l=((0|r)<0?-1:0)>>31|((0|r)<0?-1:0)<<1,tr(e=0|tt(s^e|0,o^t|0,0|s,0|o),t=0|E(),0|tt(u^n|0,l^r|0,0|u,0|l),0|E(),A),r=0|tt(i[A>>2]^s|0,i[A+4>>2]^o|0,0|s,0|o),n=0|E(),D=a,w(0|n),0|r}function ts(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0;return o=D,D=D+16|0,tr(e,t,n,r,a=0|o),D=o,w(0|i[a+4>>2]),0|i[a>>2]|0}function tA(e,t,n){return(e|=0,t|=0,(0|(n|=0))<32)?(w(t>>n|0),e>>>n|(t&(1<<n)-1)<<32-n):(w(((0|t)<0?-1:0)|0),t>>n-32|0)}function tl(e,t,n){return(e|=0,t|=0,(0|(n|=0))<32)?(w(t>>>n|0),e>>>n|(t&(1<<n)-1)<<32-n):(w(0),t>>>n-32|0)}function tu(e,t,n){return(e|=0,t|=0,(0|(n|=0))<32)?(w(t<<n|(e&(1<<n)-1<<32-n)>>>32-n|0),e<<n):(w(e<<n-32|0),0)}function tc(e,t){return(t=+t,(e=+e)!=e)?+t:t!=t?+e:+b(+e,+t)}function th(e,t){return(t=+t,(e=+e)!=e)?+t:t!=t?+e:+x(+e,+t)}function td(e){return(e=+e)>=0?+A(e+.5):+_(e-.5)}function tf(e,t,n){e|=0,t|=0;var a=0,o=0,s=0;if((0|(n|=0))>=8192)return R(0|e,0|t,0|n),0|e;if(s=0|e,o=e+n|0,(3&e)==(3&t)){for(;3&e;){if(!n)return 0|s;r[e>>0]=0|r[t>>0],e=e+1|0,t=t+1|0,n=n-1|0}for(a=(n=-4&o|0)-64|0;(0|e)<=(0|a);)i[e>>2]=i[t>>2],i[e+4>>2]=i[t+4>>2],i[e+8>>2]=i[t+8>>2],i[e+12>>2]=i[t+12>>2],i[e+16>>2]=i[t+16>>2],i[e+20>>2]=i[t+20>>2],i[e+24>>2]=i[t+24>>2],i[e+28>>2]=i[t+28>>2],i[e+32>>2]=i[t+32>>2],i[e+36>>2]=i[t+36>>2],i[e+40>>2]=i[t+40>>2],i[e+44>>2]=i[t+44>>2],i[e+48>>2]=i[t+48>>2],i[e+52>>2]=i[t+52>>2],i[e+56>>2]=i[t+56>>2],i[e+60>>2]=i[t+60>>2],e=e+64|0,t=t+64|0;for(;(0|e)<(0|n);)i[e>>2]=i[t>>2],e=e+4|0,t=t+4|0}else for(n=o-4|0;(0|e)<(0|n);)r[e>>0]=0|r[t>>0],r[e+1>>0]=0|r[t+1>>0],r[e+2>>0]=0|r[t+2>>0],r[e+3>>0]=0|r[t+3>>0],e=e+4|0,t=t+4|0;for(;(0|e)<(0|o);)r[e>>0]=0|r[t>>0],e=e+1|0,t=t+1|0;return 0|s}function tp(e,t,n){e|=0,t|=0,n|=0;var a=0,o=0,s=0,A=0;if(s=e+n|0,t&=255,(0|n)>=67){for(;3&e;)r[e>>0]=t,e=e+1|0;for(a=-4&s|0,A=t|t<<8|t<<16|t<<24,o=a-64|0;(0|e)<=(0|o);)i[e>>2]=A,i[e+4>>2]=A,i[e+8>>2]=A,i[e+12>>2]=A,i[e+16>>2]=A,i[e+20>>2]=A,i[e+24>>2]=A,i[e+28>>2]=A,i[e+32>>2]=A,i[e+36>>2]=A,i[e+40>>2]=A,i[e+44>>2]=A,i[e+48>>2]=A,i[e+52>>2]=A,i[e+56>>2]=A,i[e+60>>2]=A,e=e+64|0;for(;(0|e)<(0|a);)i[e>>2]=A,e=e+4|0}for(;(0|e)<(0|s);)r[e>>0]=t,e=e+1|0;return s-n|0}function tm(e){return(e=+e)>=0?+A(e+.5):+_(e-.5)}function tg(e){e|=0;var t=0,n=0,r=0;return(r=0|C(),t=(n=0|i[s>>2])+e|0,(0|e)>0&(0|t)<(0|n)|(0|t)<0)?(L(0|t),T(12),-1):(0|t)>(0|r)&&!(0|P(0|t))?(T(12),-1):(i[s>>2]=t,0|n)}// EMSCRIPTEN_END_FUNCS
return{___divdi3:ti,___muldi3:ta,___remdi3:to,___uremdi3:ts,_areNeighborCells:function(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0,A=0,l=0,u=0,c=0,h=0;if(h=D,D=D+64|0,c=h,A=h+56|0,!(!0&(2013265920&t|0)==134217728&(!0&(2013265920&r|0)==134217728)))return a=5,D=h,0|a;if((0|e)==(0|n)&(0|t)==(0|r))return i[a>>2]=0,a=0,D=h,0|a;if(s=0|tl(0|e,0|t,52),E(),s&=15,u=0|tl(0|n,0|r,52),E(),(0|s)!=(15&u|0))return a=12,D=h,0|a;if(o=s+-1|0,s>>>0>1){eb(e,t,o,c),eb(n,r,o,A),l=0|i[(u=c)>>2],u=0|i[u+4>>2];o:do if((0|l)==(0|i[A>>2])?(0|u)==(0|i[A+4>>2]):0){o=0|tl(0|e,0|t,0|(s=(15^s)*3|0)),E(),o&=7,s=0|tl(0|n,0|r,0|s),E(),s&=7;do if((0|o)==0|(0|s)==0)i[a>>2]=1,o=0;else if((0|o)==7)o=5;else{if((0|o)==1|(0|s)==1?0|ew(l,u):0){o=5;break}if((0|i[15536+(o<<2)>>2])!=(0|s)?(0|i[15568+(o<<2)>>2])!=(0|s):0)break o;i[a>>2]=1,o=0}while(0)return a=o,D=h,0|a}while(0)}s=(o=c)+56|0;do i[o>>2]=0,o=o+4|0;while((0|o)<(0|s))return O(e,t,1,c),o=(((((((0|i[(t=c)>>2])==(0|n)?(0|i[t+4>>2])==(0|r):0)?0:!((0|i[(t=c+8|0)>>2])==(0|n)?(0|i[t+4>>2])==(0|r):0))?!((0|i[(t=c+16|0)>>2])==(0|n)?(0|i[t+4>>2])==(0|r):0):0)?!((0|i[(t=c+24|0)>>2])==(0|n)?(0|i[t+4>>2])==(0|r):0):0)?!((0|i[(t=c+32|0)>>2])==(0|n)?(0|i[t+4>>2])==(0|r):0):0)?!((0|i[(t=c+40|0)>>2])==(0|n)?(0|i[t+4>>2])==(0|r):0):0)?((0|i[(o=c+48|0)>>2])==(0|n)?(0|i[o+4>>2])==(0|r):0)&1:1,i[a>>2]=o,a=0,D=h,0|a},_bitshift64Ashr:tA,_bitshift64Lshr:tl,_bitshift64Shl:tu,_calloc:e9,_cellAreaKm2:function(e,t,n){return e|=0,t|=0,n|=0,0|(e=0|eH(e,t,n))||(a[n>>3]=40589732.49931477*+a[n>>3]),0|e},_cellAreaM2:function(e,t,n){return e|=0,t|=0,n|=0,0|(e=0|eH(e,t,n))||(a[n>>3]=40589732499314.77*+a[n>>3]),0|e},_cellAreaRads2:eH,_cellToBoundary:eI,_cellToCenterChild:function(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0;return(a=0|tl(0|e,0|t,52),E(),(0|n)<16&(0|(a&=15))<=(0|n))?((0|a)<(0|n)&&(a=0|tu(-1,-1,((n+-1-a|0)*3|0)+3|0),a=0|tu(0|~a,0|~(0|E()),(15-n|0)*3|0),t=~(0|E())&t,e=~a&e),a=0|tu(0|n,0,52),n=-15728641&t|(0|E()),i[r>>2]=e|a,i[r+4>>2]=n,0|(r=0)):0|(r=4)},_cellToChildPos:function(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0;if(_=D,D=D+16|0,g=_,v=0|tl(0|e,0|t,52),E(),v&=15,n>>>0>15)return v=4,D=_,0|v;if((0|v)<(0|n))return v=12,D=_,0|v;if((0|v)!=(0|n)){if(o=0|tu(0|n,0,52)|e,A=0|E()|-15728641&t,(0|v)>(0|n)){l=n;do m=0|tu(7,0,(14-l|0)*3|0),l=l+1|0,o|=m,A=0|E()|A;while((0|l)<(0|v))m=o}else m=o}else m=e,A=t;p=0|tl(0|m,0|A,45),E();o:do if(0|F(127&p)){if(l=0|tl(0|m,0|A,52),E(),0|(l&=15))for(o=1;;){if(!(((p=0|tu(7,0,(15-o|0)*3|0))&m|0)==0&((0|E())&A|0)==0)){u=33;break o}if(o>>>0<l>>>0)o=o+1|0;else break}if(i[(p=r)>>2]=0,i[p+4>>2]=0,(0|v)>(0|n)){for(p=-15728641&t,f=v;;){if(d=f,(f=f+-1|0)>>>0>15|(0|v)<(0|f)){u=19;break}if((0|v)!=(0|f)){if(o=0|tu(0|f,0,52)|e,l=0|E()|p,(0|v)<(0|d))h=o;else{u=f;do h=0|tu(7,0,(14-u|0)*3|0),u=u+1|0,o|=h,l=0|E()|l;while((0|u)<(0|v))h=o}}else h=e,l=t;if(c=0|tl(0|h,0|l,45),E(),0|F(127&c)){c=0|tl(0|h,0|l,52),E(),c&=15;s:do if(c)for(u=1;;){if(o=0|tl(0|h,0|l,(15-u|0)*3|0),E(),0|(o&=7))break s;if(u>>>0<c>>>0)u=u+1|0;else{o=0;break}}else o=0;while(0)o=(0|o)==0&1}else o=0;if(l=0|tl(0|e,0|t,(15-d|0)*3|0),E(),(0|(l&=7))==7||(0|l)==1&(o=(0|o)!=0)){a=5,u=42;break}if(0|(h=l+(((0|l)!=0&o)<<31>>31)|0)&&(u=0|eQ(7,0,u=v-d|0,((0|u)<0)<<31>>31),c=0|E(),o?(o=0|ti(0|(o=0|te(0|(o=0|ta(0|u,0|c,5,0)),0|E(),-5,-1)),0|E(),6,0),o=0|te(0|o,0|E(),1,0),l=0|E()):(o=u,l=c),d=0|te(0|o,0|l,0|(d=0|ta(0|u,0|c,0|(d=h+-1|0),((0|d)<0)<<31>>31|0)),0|E()),c=0|te(0|d,0|(h=0|E()),0|i[(c=r)>>2],0|i[c+4>>2]),h=0|E(),i[(d=r)>>2]=c,i[d+4>>2]=h),(0|f)<=(0|n)){u=37;break}}if((0|u)==19)S(23313,22674,1099,22710);else if((0|u)==37){a=0|i[(s=r)+4>>2],s=0|i[s>>2];break}else if((0|u)==42)return D=_,0|a}else a=0,s=0}else u=33;while(0)A:do if((0|u)==33){if(i[(p=r)>>2]=0,i[p+4>>2]=0,(0|v)>(0|n)){for(o=v;;){if(a=0|tl(0|e,0|t,(15-o|0)*3|0),E(),(0|(a&=7))==7){a=5;break}if(a=0|ta(0|(s=0|eQ(7,0,s=v-o|0,((0|s)<0)<<31>>31)),0|E(),0|a,0),s=0|E(),s=0|te(0|i[(p=r)>>2],0|i[p+4>>2],0|a,0|s),a=0|E(),i[(p=r)>>2]=s,i[p+4>>2]=a,(0|(o=o+-1|0))<=(0|n))break A}return D=_,0|a}a=0,s=0}while(0)return(0|eM(m,A,v,g)&&S(23313,22674,1063,22725),((0|a)>-1|(0|a)==-1&s>>>0>4294967295)&((0|(g=0|i[(v=g)+4>>2]))>(0|a)|((0|g)==(0|a)?(0|i[v>>2])>>>0>s>>>0:0)))?(v=0,D=_,0|v):(S(23313,22674,1139,22710),0)},_cellToChildren:function(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0;if(s=D,D=D+16|0,eU(o=s,e,t,n),(0|(e=0|i[(t=o)>>2]))==0&(0|(t=0|i[t+4>>2]))==0)return D=s,0;a=0,n=0;do i[(A=r+(a<<3)|0)>>2]=e,i[A+4>>2]=t,a=0|te(0|a,0|n,1,0),n=0|E(),eN(o),e=0|i[(A=o)>>2],t=0|i[A+4>>2];while(!((0|e)==0&(0|t)==0))return D=s,0},_cellToChildrenSize:eM,_cellToLatLng:eO,_cellToLocalIj:function(e,t,n,r,a,o){e|=0,t|=0,n|=0,r|=0,a|=0,o|=0;var s,A,l,u=0,c=0;return(c=D,D=D+16|0,u=c,a)?e=15:(e=0|eW(e,t,n,r,u))||(s=0|u,A=0|o,l=0,l=0|i[s+8>>2],i[A>>2]=(0|i[s>>2])-l,i[A+4>>2]=(0|i[s+4>>2])-l,e=0),D=c,0|e},_cellToParent:eb,_cellToVertex:e1,_cellToVertexes:function(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0;return(o=(0|ew(e,t))==0,a=(0|(r=0|e1(e,t,0,n)))==0,o)?!a||0|(r=0|e1(e,t,1,n+8|0))||0|(r=0|e1(e,t,2,n+16|0))||0|(r=0|e1(e,t,3,n+24|0))?0|(o=r):(r=0|e1(e,t,4,n+32|0))?0|(o=r):0|e1(e,t,5,n+40|0):!a||0|(r=0|e1(e,t,1,n+8|0))||0|(r=0|e1(e,t,2,n+16|0))||0|(r=0|e1(e,t,3,n+24|0))||0|(r=0|e1(e,t,4,n+32|0))?0|(o=r):(i[(o=n+40|0)>>2]=0,i[o+4>>2]=0,0|(o=0))},_cellsToDirectedEdge:function(e,t,n,r,a){return(e|=0,t|=0,n|=0,r|=0,a|=0,(0|(n=0|B(e,t,n,r)))==7)?0|(a=11):(r=0|tu(0|n,0,56),t=-2130706433&t|(0|E())|268435456,i[a>>2]=e|r,i[a+4>>2]=t,0|(a=0))},_cellsToLinkedMultiPolygon:function(e,t,n){e|=0,t|=0,n|=0;var r=0,o=0,s=0,A=0;if(s=D,D=D+32|0,r=s,0|(e=0|function(e,t,n){e|=0,t|=0,n|=0;var r=0,o=0,s=0,A=0,u=0,h=0,d=0,f=0;if(f=D,D=D+176|0,h=f,(0|t)<1)return e2(n,0,0),d=0,D=f,0|d;for(u=0|tl(0|i[(u=e)>>2],0|i[u+4>>2],52),E(),e2(n,(0|t)>6?t:6,15&u),u=0;!(0|(r=0|eI(0|i[(r=e+(u<<3)|0)>>2],0|i[r+4>>2],h)));){if((0|(r=0|i[h>>2]))>0){A=0;do s=h+8+(A<<4)|0,(o=0|function(e,t,n){e|=0,t|=0,n|=0;var r=0,o=0;if(o=~~(+l(+(+c(10,+ +(15-(0|i[e+12>>2])|0))*(+a[t>>3]+ +a[t+8>>3])))%+(0|i[e+4>>2]))>>>0,!(o=0|i[(0|i[e>>2])+(o<<2)>>2]))return 0|(n=0);if(!n){for(e=o;;){if(0|ek(e,t)){r=10;break}if(!(e=0|i[e+32>>2])){e=0,r=10;break}}if((0|r)==10)return 0|e}for(e=o;;){if(0|ek(e,t)?0|ek(e+16|0,n):0){r=10;break}if(!(e=0|i[e+32>>2])){e=0,r=10;break}}return(0|r)==10?0|e:0}(n,r=h+8+(((0|(A=A+1|0))%(0|r)|0)<<4)|0,s))?e5(n,o):function(e,t,n){e|=0,t|=0,n|=0;var r=0,o=0,s=0,A=0;(s=0|e8(40))||S(23390,23360,98,23403),i[s>>2]=i[t>>2],i[s+4>>2]=i[t+4>>2],i[s+8>>2]=i[t+8>>2],i[s+12>>2]=i[t+12>>2],i[(o=s+16|0)>>2]=i[n>>2],i[o+4>>2]=i[n+4>>2],i[o+8>>2]=i[n+8>>2],i[o+12>>2]=i[n+12>>2],i[s+32>>2]=0,o=~~(+l(+(+c(10,+ +(15-(0|i[e+12>>2])|0))*(+a[t>>3]+ +a[t+8>>3])))%+(0|i[e+4>>2]))>>>0,o=(0|i[e>>2])+(o<<2)|0,r=0|i[o>>2];do if(r){for(;!(0|ek(r,t))||!(0|ek(r+16|0,n));)if(r=(0|(o=0|i[r+32>>2]))==0?r:o,!(0|i[r+32>>2])){A=10;break}if((0|A)==10){i[r+32>>2]=s;break}return e7(s),0|(A=r)}else i[o>>2]=s;while(0)return i[(A=e+8|0)>>2]=(0|i[A>>2])+1,0|(A=s)}(n,s,r),r=0|i[h>>2];while((0|A)<(0|r))}if((0|(u=u+1|0))>=(0|t)){r=0,d=13;break}}return(0|d)==13?(D=f,0|r):(e3(n),d=r,D=f,0|d)}(e,t,o=s+16|0)))return n=e,D=s,0|n;if(i[n>>2]=0,i[n+4>>2]=0,i[n+8>>2]=0,0|(e=0|e4(o)))do{t=0|function(e){e|=0;var t=0,n=0,r=0;return((t=0|e9(1,12))||S(22832,22787,49,22845),0|(r=0|i[(n=e+4|0)>>2]))?i[(r=r+8|0)>>2]=t:(0|i[e>>2]&&S(22862,22787,61,22885),i[(r=e)>>2]=t),i[n>>2]=t,0|t}(n);do(function(e,t){e|=0,t|=0;var n=0,r=0;((r=0|e8(24))||S(22899,22787,78,22913),i[r>>2]=i[t>>2],i[r+4>>2]=i[t+4>>2],i[r+8>>2]=i[t+8>>2],i[r+12>>2]=i[t+12>>2],i[r+16>>2]=0,0|(n=0|i[(t=e+4|0)>>2]))?i[n+16>>2]=r:(0|i[e>>2]&&S(22928,22787,82,22913),i[e>>2]=r),i[t>>2]=r})(t,e),A=e+16|0,i[r>>2]=i[A>>2],i[r+4>>2]=i[A+4>>2],i[r+8>>2]=i[A+8>>2],i[r+12>>2]=i[A+12>>2],e5(o,e),e=0|function(e,t){e|=0,t|=0;var n=0;if(n=~~(+l(+(+c(10,+ +(15-(0|i[e+12>>2])|0))*(+a[t>>3]+ +a[t+8>>3])))%+(0|i[e+4>>2]))>>>0,!(e=0|i[(0|i[e>>2])+(n<<2)>>2]))return 0|(n=0);for(;;){if(0|ek(e,t)){t=5;break}if(!(e=0|i[e+32>>2])){e=0,t=5;break}}return(0|t)==5?0|e:0}(o,r);while((0|e)!=0)e=0|e4(o)}while((0|e)!=0)return(e3(o),e=0|function(e){e|=0;var t=0,n=0,r=0,o=0,s=0,A=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0,b=0,M=0,w=0,E=0,T=0,C=0,R=0,P=0,L=0,D=0,O=0,I=0,q=0,U=0;if(0|i[(o=e+8|0)>>2])return 0|(U=1);if(!(r=0|i[e>>2]))return 0|(U=0);t=r,n=0;do n=n+1|0,t=0|i[t+8>>2];while((0|t)!=0)if(n>>>0<2)return 0|(U=0);(I=0|e8(n<<2))||S(22948,22787,317,22967),(O=0|e8(n<<5))||S(22989,22787,321,22967),i[e>>2]=0,i[(E=e+4|0)>>2]=0,i[o>>2]=0,n=0,D=0,w=0,f=0;o:for(;;){if(d=0|i[r>>2]){s=0,A=d;do{if(c=+a[A+8>>3],t=A,+l(+(c-(u=+a[(o=(h=(0|(A=0|i[A+16>>2]))==0)?d:A)+8>>3])))>3.141592653589793){U=14;break}s+=(u-c)*(+a[t>>3]+ +a[o>>3])}while(!h)if((0|U)==14){U=0,s=0,t=d;do M=+a[t+8>>3],b=+a[(P=(0|(P=0|i[(L=t+16|0)>>2]))==0?d:P)+8>>3],s+=(+a[t>>3]+ +a[P>>3])*((b<0?b+6.283185307179586:b)-(M<0?M+6.283185307179586:M)),t=0|i[((0|t)==0?r:L)>>2];while((0|t)!=0)}s>0?(i[I+(D<<2)>>2]=r,D=D+1|0,o=w,t=f):U=19}else U=19;if((0|U)==19){U=0;do if(n){if(0|i[(t=n+8|0)>>2]){U=21;break o}if(!(n=0|e9(1,12))){U=23;break o}i[t>>2]=n,o=n+4|0,A=n,t=f}else{if(f){o=E,A=f+8|0,t=r,n=e;break}if(0|i[e>>2]){U=27;break o}o=E,A=e,t=r,n=e;break}while(0)if(i[A>>2]=r,i[o>>2]=r,A=O+(w<<5)|0,h=0|i[r>>2]){for(a[(d=O+(w<<5)+8|0)>>3]=17976931348623157e292,a[(f=O+(w<<5)+24|0)>>3]=17976931348623157e292,a[A>>3]=-17976931348623157e292,a[(p=O+(w<<5)+16|0)>>3]=-17976931348623157e292,y=17976931348623157e292,x=-17976931348623157e292,o=0,m=h,c=17976931348623157e292,v=17976931348623157e292,_=-17976931348623157e292,u=-17976931348623157e292;s=+a[m>>3],M=+a[m+8>>3],b=+a[((g=(0|(m=0|i[m+16>>2]))==0)?h:m)+8>>3],s<c&&(a[d>>3]=s,c=s),M<v&&(a[f>>3]=M,v=M),s>_?a[A>>3]=s:s=_,M>u&&(a[p>>3]=M,u=M),y=M>0&M<y?M:y,x=M<0&M>x?M:x,o|=+l(+(M-b))>3.141592653589793,!g;)_=s;o&&(a[p>>3]=x,a[f>>3]=y)}else i[A>>2]=0,i[A+4>>2]=0,i[A+8>>2]=0,i[A+12>>2]=0,i[A+16>>2]=0,i[A+20>>2]=0,i[A+24>>2]=0,i[A+28>>2]=0;o=w+1|0}if(r=0|i[(L=r+8|0)>>2],i[L>>2]=0,r)w=o,f=t;else{U=45;break}}if((0|U)==21)S(22765,22787,35,22799);else if((0|U)==23)S(22819,22787,37,22799);else if((0|U)==27)S(22862,22787,61,22885);else if((0|U)==45){s:do if((0|D)>0){for(L=(0|o)==0,R=o<<2,P=(0|e)==0,C=0,t=0;;){if(T=0|i[I+(C<<2)>>2],L)U=73;else{if(!(w=0|e8(R))){U=50;break}if(!(E=0|e8(R))){U=52;break}A:do if(P)n=0;else{for(o=0,n=0,A=e;;)if(r=O+(o<<5)|0,0|ej(0|i[A>>2],r,0|i[T>>2])?(i[w+(n<<2)>>2]=A,i[E+(n<<2)>>2]=r,g=n+1|0):g=n,A=0|i[A+8>>2])o=o+1|0,n=g;else break;if((0|g)>0){if(r=0|i[w>>2],(0|g)==1)n=r;else for(p=0,m=-1,n=r,f=r;;){for(h=0|i[f>>2],r=0,A=0;d=(0|(o=0|i[i[w+(A<<2)>>2]>>2]))==(0|h)?r:r+((0|ej(o,0|i[E+(A<<2)>>2],0|i[h>>2]))&1)|0,(0|(A=A+1|0))!=(0|g);)r=d;if(n=(o=(0|d)>(0|m))?f:n,(0|(r=p+1|0))==(0|g))break A;p=r,m=o?d:m,f=0|i[w+(r<<2)>>2]}}else n=0}while(0)if(e7(w),e7(E),n){if(r=0|i[(o=n+4|0)>>2])n=r+8|0;else if(0|i[n>>2]){U=70;break}i[n>>2]=T,i[o>>2]=T}else U=73}if((0|U)==73){if(U=0,0|(t=0|i[T>>2]))do E=t,t=0|i[t+16>>2],e7(E);while((0|t)!=0)e7(T),t=1}if((0|(C=C+1|0))>=(0|D)){q=t;break s}}(0|U)==50?S(23004,22787,249,23023):(0|U)==52?S(23042,22787,252,23023):(0|U)==70&&S(22862,22787,61,22885)}else q=0;while(0)return e7(I),e7(O),0|(U=q)}return 0}(n))?(eV(n),A=e):A=0,D=s,0|A},_childPosToCell:function(e,t,n,r,a,o){e|=0,t|=0,n|=0,r|=0,a|=0,o|=0;var s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0;if(h=D,D=D+16|0,s=h,a>>>0>15)return o=4,D=h,0|o;if(A=0|tl(0|n,0|r,52),E(),(0|(A&=15))>(0|a))return o=12,D=h,0|o;if(0|eM(n,r,a,s)&&S(23313,22674,1063,22725),!(((0|t)>-1|(0|t)==-1&e>>>0>4294967295)&((0|(u=0|i[(c=s)+4>>2]))>(0|t)|((0|u)==(0|t)?(0|i[c>>2])>>>0>e>>>0:0))))return o=2,D=h,0|o;c=a-A|0,a=0|tu(0|a,0,52),l=0|E()|-15728641&r,i[(u=o)>>2]=a|n,i[u+4>>2]=l,u=0|tl(0|n,0|r,45),E();o:do if(0|F(127&u)){if(0|A)for(s=1;;){if(!(((u=0|tu(7,0,(15-s|0)*3|0))&n|0)==0&((0|E())&r|0)==0))break o;if(s>>>0<A>>>0)s=s+1|0;else break}if((0|c)<1)return o=0,D=h,0|o;for(u=15^A,r=-1,l=1,s=1;;){A=0|eQ(7,0,A=c-l|0,((0|A)<0)<<31>>31),n=0|E();do if(s){if(s=0|ti(0|(s=0|te(0|(s=0|ta(0|A,0|n,5,0)),0|E(),-5,-1)),0|E(),6,0),(0|t)>(0|(a=0|E()))|(0|t)==(0|a)&e>>>0>s>>>0){t=0|tt(0|(t=0|te(0|e,0|t,-1,-1)),0|E(),0|s,0|a),s=0|E(),p=0|i[(d=o)>>2],d=0|i[d+4>>2],f=0|tu(7,0,0|(m=(u+r|0)*3|0)),d&=~(0|E()),m=0|tu(0|(a=0|te(0|(r=0|ti(0|t,0|s,0|A,0|n)),0|(e=0|E()),2,0)),0|E(),0|m),d=0|E()|d,i[(a=o)>>2]=m|p&~f,i[a+4>>2]=d,e=0|tt(0|t,0|s,0|(e=0|ta(0|r,0|e,0|A,0|n)),0|E()),s=0,t=0|E();break}f=0|i[(m=o)>>2],m=0|i[m+4>>2],p=0|tu(7,0,(u+r|0)*3|0),m&=~(0|E()),i[(s=o)>>2]=f&~p,i[s+4>>2]=m,s=1;break}else a=0|i[(f=o)>>2],f=0|i[f+4>>2],d=0|tu(7,0,0|(r=(u+r|0)*3|0)),f&=~(0|E()),r=0|tu(0|(m=0|ti(0|e,0|t,0|A,0|n)),0|(s=0|E()),0|r),f=0|E()|f,i[(p=o)>>2]=r|a&~d,i[p+4>>2]=f,e=0|tt(0|e,0|t,0|(s=0|ta(0|m,0|s,0|A,0|n)),0|E()),s=0,t=0|E();while(0)if((0|c)>(0|l))r=~l,l=l+1|0;else{t=0;break}}return D=h,0|t}while(0)if((0|c)<1)return m=0,D=h,0|m;for(a=15^A,s=1;;){if(p=0|eQ(7,0,p=c-s|0,((0|p)<0)<<31>>31),m=0|E(),n=0|i[(l=o)>>2],l=0|i[l+4>>2],r=0|tu(7,0,0|(A=(a-s|0)*3|0)),l&=~(0|E()),A=0|tu(0|(d=0|ti(0|e,0|t,0|p,0|m)),0|(f=0|E()),0|A),l=0|E()|l,i[(u=o)>>2]=A|n&~r,i[u+4>>2]=l,e=0|tt(0|e,0|t,0|(m=0|ta(0|d,0|f,0|p,0|m)),0|E()),t=0|E(),(0|c)<=(0|s)){t=0;break}s=s+1|0}return D=h,0|t},_compactCells:function(e,t,n,r){e|=0,t|=0;var a=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0,b=0,M=0,w=0,T=0;if((0|(n|=0))==0&(0|(r|=0))==0)return 0|(w=0);if(o=0|i[(a=e)>>2],!0&(15728640&(a=0|i[a+4>>2])|0)==0){if(!((0|r)>0|(0|r)==0&n>>>0>0)||(i[(w=t)>>2]=o,i[w+4>>2]=a,(0|n)==1&(0|r)==0))return 0|(w=0);a=1;do M=0|i[(b=e+(a<<3)|0)+4>>2],i[(w=t+(a<<3)|0)>>2]=i[b>>2],i[w+4>>2]=M,a=a+1|0;while(0<(0|r)|0==(0|r)&a>>>0<n>>>0)return 0|(a=0)}if(!(M=0|e8(x=n<<3)))return 0|(w=13);if(tf(0|M,0|e,0|x),!(b=0|e9(n,8)))return e7(M),0|(w=13);o:do if(0|n){s:for(;;){_=0|tl(0|(v=0|i[(a=M)>>2]),0|(a=0|i[a+4>>2]),52),E(),_&=15,y=_+-1|0,g=(0|n)>0;A:do if((0|_)!=0&g){if(f=((0|n)<0)<<31>>31,p=0|tu(0|y,0,52),m=0|E(),y>>>0>15){if(!((0|v)==0&(0|a)==0)){w=17;break s}for(o=0;;){if((0|(o=o+1|0))>=(0|n))break A;if(!((0|(m=0|i[(r=M+(o<<3)|0)>>2]))==0&(0|(r=0|i[r+4>>2]))==0)){a=r,w=17;break s}}}for(o=0,e=v,r=a;;){if(!((0|e)==0&(0|r)==0)){if(!(!0&(117440512&r|0)==0)){w=22;break s}if(A=0|tl(0|e,0|r,52),E(),(0|(A&=15))<(0|y)){a=12,w=28;break s}if((0|A)!=(0|y)&&(e|=p,r=-15728641&r|m,A>>>0>=_>>>0)){s=y;do d=0|tu(7,0,(14-s|0)*3|0),s=s+1|0,e|=d,r=0|E()|r;while(s>>>0<A>>>0)}if(s=0|ts(0|e,0|r,0|n,0|f),E(),(0|(l=0|i[(A=u=b+(s<<3)|0)>>2]))==0&(0|(A=0|i[A+4>>2]))==0)s=u;else for(d=0;;){if((0|d)>(0|n)){w=32;break s}if((0|l)==(0|e)&(-117440513&A|0)==(0|r)){c=0|tl(0|l,0|A,56),E(),c&=7,h=c+1|0,T=0|tl(0|l,0|A,45),E();l:do if(0|F(127&T)){if(l=0|tl(0|l,0|A,52),E(),!(l&=15)){A=6;break}for(A=1;;){if(!(((T=0|tu(7,0,(15-A|0)*3|0))&e|0)==0&((0|E())&r|0)==0)){A=7;break l}if(A>>>0<l>>>0)A=A+1|0;else{A=6;break}}}else A=7;while(0)if((c+2|0)>>>0>A>>>0){w=42;break s}T=0|tu(0|h,0,56),r=0|E()|-117440513&r,i[(h=u)>>2]=0,i[h+4>>2]=0,e|=T}else s=(s+1|0)%(0|n)|0;if((0|(l=0|i[(A=u=b+(s<<3)|0)>>2]))==0&(0|(A=0|i[A+4>>2]))==0){s=u;break}d=d+1|0}i[(T=s)>>2]=e,i[T+4>>2]=r}if((0|(o=o+1|0))>=(0|n))break A;e=0|i[(r=M+(o<<3)|0)>>2],r=0|i[r+4>>2]}}while(0)if((n+5|0)>>>0<11){w=85;break}if(!(m=0|e9((0|n)/6|0,8))){w=49;break}u:do if(g){d=0,h=0;do{if(!((0|(o=0|i[(r=A=b+(d<<3)|0)>>2]))==0&(0|(r=0|i[r+4>>2]))==0)){l=0|tl(0|o,0|r,56),E(),l&=7,e=l+1|0,u=-117440513&r,T=0|tl(0|o,0|r,45),E();f:do if(0|F(127&T)){if(c=0|tl(0|o,0|r,52),E(),0|(c&=15))for(s=1;;){if(!((o&(T=0|tu(7,0,(15-s|0)*3|0))|0)==0&(u&(0|E())|0)==0))break f;if(s>>>0<c>>>0)s=s+1|0;else break}o|=r=0|tu(0|e,0,56),r=0|E()|u,i[(e=A)>>2]=o,i[e+4>>2]=r,e=l+2|0}while(0)(0|e)==7&&(i[(T=m+(h<<3)|0)>>2]=o,i[T+4>>2]=-117440513&r,h=h+1|0)}d=d+1|0}while((0|d)!=(0|n))if(g){if(d=((0|n)<0)<<31>>31,f=0|tu(0|y,0,52),p=0|E(),y>>>0>15){if(!((0|v)==0&(0|a)==0)){a=4,w=84;break s}for(a=0;;){if((0|(a=a+1|0))>=(0|n)){o=0,a=h;break u}if(!((0|i[(T=M+(a<<3)|0)>>2])==0&(0|i[T+4>>2])==0)){a=4,w=84;break s}}}for(c=0,o=0,u=v;;){do if(!((0|u)==0&(0|a)==0)){if(A=0|tl(0|u,0|a,52),E(),(0|(A&=15))<(0|y)){a=12,w=84;break s}do if((0|A)==(0|y))r=u,A=a;else{if(r=u|f,e=-15728641&a|p,A>>>0<_>>>0){A=e;break}s=y;do T=0|tu(7,0,(14-s|0)*3|0),s=s+1|0,r|=T,e=0|E()|e;while(s>>>0<A>>>0)A=e}while(0)for(s=0|ts(0|r,0|A,0|n,0|d),E(),e=0;;){if((0|e)>(0|n)){w=77;break s}if((-117440513&(l=0|i[(T=b+(s<<3)|0)+4>>2])|0)==(0|A)?(0|i[T>>2])==(0|r):0){w=79;break}if((0|i[(T=b+((s=(s+1|0)%(0|n)|0)<<3)|0)>>2])==(0|r)?(0|i[T+4>>2])==(0|A):0)break;e=e+1|0}if((0|w)==79?(w=0,!0&(117440512&l|0)==100663296):0)break;i[(T=t+(o<<3)|0)>>2]=u,i[T+4>>2]=a,o=o+1|0}while(0)if((0|(a=c+1|0))>=(0|n)){a=h;break u}T=M+(a<<3)|0,c=a,u=0|i[T>>2],a=0|i[T+4>>2]}}else o=0,a=h}else o=0,a=0;while(0)if(tp(0|b,0,0|x),tf(0|M,0|m,a<<3|0),e7(m),a)t=t+(o<<3)|0,n=a;else break o}if((0|w)==17)!0&(117440512&a|0)==0?(a=4,w=28):w=22;else if((0|w)==32)S(23313,22674,362,22684);else if((0|w)==42)return e7(M),e7(b),0|(T=10);else if((0|w)==49)return e7(M),e7(b),0|(T=13);else if((0|w)==77)S(23313,22674,462,22684);else if((0|w)==84)return e7(m),e7(M),e7(b),0|(T=a);else if((0|w)==85){tf(0|t,0|M,n<<3|0);break}if((0|w)==22)return e7(M),e7(b),0|(T=5);if((0|w)==28)return e7(M),e7(b),0|(T=a)}while(0)return e7(M),e7(b),0|(T=0)},_destroyLinkedMultiPolygon:eV,_directedEdgeToBoundary:ed,_directedEdgeToCells:function(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0,s=0;return(a=D,D=D+16|0,r=a,!0&(2013265920&t|0)==268435456)?(o=-2130706433&t|134217728,i[(s=n)>>2]=e,i[s+4>>2]=o,i[r>>2]=0,t=0|tl(0|e,0|t,56),E(),r=0|N(e,o,7&t,r,n+8|0)):r=6,D=a,0|r},_edgeLengthKm:function(e,t,n){e|=0,t|=0,n|=0;var r=0,o=0,s=0,A=0,l=0,c=0,f=0,p=0;if(l=D,D=D+176|0,0|(e=0|ed(e,t,A=l)))return A=e,s=6371.007180918475*+a[n>>3],a[n>>3]=s,D=l,0|A;if(a[n>>3]=0,(0|(e=0|i[A>>2]))<=1)return A=0,s=0,a[n>>3]=s,D=l,0|A;t=e+-1|0,e=0,r=+a[A+8>>3],o=+a[A+16>>3],s=0;do e=e+1|0,f=r,p=+d(+(((r=+a[A+8+(e<<4)>>3])-f)*.5)),c=o,s+=2*+v(+ +u(+(c=p*p+(c=+d(+(((o=+a[A+8+(e<<4)+8>>3])-c)*.5)))*(+h(+f)*+h(+r)*c))),+ +u(+(1-c)));while((0|e)!=(0|t))return a[n>>3]=s,A=0,p=6371.007180918475*s,a[n>>3]=p,D=l,0|A},_edgeLengthM:function(e,t,n){e|=0,t|=0,n|=0;var r=0,o=0,s=0,A=0,l=0,c=0,f=0,p=0;if(l=D,D=D+176|0,0|(e=0|ed(e,t,A=l)))return A=e,s=6371007.180918475*+a[n>>3],a[n>>3]=s,D=l,0|A;if(a[n>>3]=0,(0|(e=0|i[A>>2]))<=1)return A=0,s=0,a[n>>3]=s,D=l,0|A;t=e+-1|0,e=0,r=+a[A+8>>3],o=+a[A+16>>3],s=0;do e=e+1|0,f=r,p=+d(+(((r=+a[A+8+(e<<4)>>3])-f)*.5)),c=o,s+=2*+v(+ +u(+(c=p*p+(c=+d(+(((o=+a[A+8+(e<<4)+8>>3])-c)*.5)))*(+h(+f)*+h(+r)*c))),+ +u(+(1-c)));while((0|e)!=(0|t))return a[n>>3]=s,A=0,p=6371007.180918475*s,a[n>>3]=p,D=l,0|A},_edgeLengthRads:function(e,t,n){e|=0,t|=0,n|=0;var r=0,o=0,s=0,A=0,l=0,c=0,f=0,p=0;if(l=D,D=D+176|0,0|(e=0|ed(e,t,A=l)))return A=e,D=l,0|A;if(a[n>>3]=0,(0|(e=0|i[A>>2]))<=1)return A=0,D=l,0|A;t=e+-1|0,e=0,r=+a[A+8>>3],o=+a[A+16>>3],s=0;do e=e+1|0,f=r,p=+d(+(((r=+a[A+8+(e<<4)>>3])-f)*.5)),c=o,s+=2*+v(+ +u(+(c=p*p+(c=+d(+(((o=+a[A+8+(e<<4)+8>>3])-c)*.5)))*(+h(+r)*+h(+f)*c))),+ +u(+(1-c)));while((0|e)<(0|t))return a[n>>3]=s,A=0,D=l,0|A},_emscripten_replace_memory:function(e){return r=new Int8Array(e),new Uint8Array(e),i=new Int32Array(e),new Float32Array(e),a=new Float64Array(e),n=e,!0}// EMSCRIPTEN_START_FUNCS
,_free:e7,_getBaseCellNumber:ey,_getDirectedEdgeDestination:function(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0;return(a=D,D=D+16|0,i[(r=a)>>2]=0,!0&(2013265920&t|0)==268435456)?(o=0|tl(0|e,0|t,56),E(),r=0|N(e,-2130706433&t|134217728,7&o,r,n)):r=6,D=a,0|r},_getDirectedEdgeOrigin:function(e,t,n){return(e|=0,n|=0,!0&(2013265920&(t|=0)|0)==268435456)?(i[n>>2]=e,i[n+4>>2]=-2130706433&t|134217728,0|(n=0)):0|(n=6)},_getHexagonAreaAvgKm2:function(e,t){return(t|=0,(e|=0)>>>0>15)?0|(t=4):(a[t>>3]=+a[20528+(e<<3)>>3],0|(t=0))},_getHexagonAreaAvgM2:function(e,t){return(t|=0,(e|=0)>>>0>15)?0|(t=4):(a[t>>3]=+a[20656+(e<<3)>>3],0|(t=0))},_getHexagonEdgeLengthAvgKm:function(e,t){return(t|=0,(e|=0)>>>0>15)?0|(t=4):(a[t>>3]=+a[20784+(e<<3)>>3],0|(t=0))},_getHexagonEdgeLengthAvgM:function(e,t){return(t|=0,(e|=0)>>>0>15)?0|(t=4):(a[t>>3]=+a[20912+(e<<3)>>3],0|(t=0))},_getIcosahedronFaces:function e(t,n,r){t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0;d=D,D=D+128|0,c=d+112|0,s=d+96|0,h=d,o=0|tl(0|t,0|n,52),E(),l=15&o,i[c>>2]=l,A=0|tl(0|t,0|n,45),E(),A&=127;o:do if(0|F(A)){if(0|l)for(a=1;;){if(!(((u=0|tu(7,0,(15-a|0)*3|0))&t|0)==0&((0|E())&n|0)==0)){o=0;break o}if(a>>>0<l>>>0)a=a+1|0;else break}if(!(1&o))return u=0|tu(l+1|0,0,52),h=0|E()|-15728641&n,h=0|e((u|t)&~(c=0|tu(7,0,(14-l|0)*3|0)),h&~(0|E()),r),D=d,0|h;o=1}else o=0;while(0)if(!(a=0|eD(t,n,s))){o?(em(s,c,h),u=5):(e_(s,c,h),u=6);s:do if(0|F(A)){if(l)for(a=1;;){if(!(((A=0|tu(7,0,(15-a|0)*3|0))&t|0)==0&((0|E())&n|0)==0)){t=2;break s}if(a>>>0<l>>>0)a=a+1|0;else{t=5;break}}else t=5}else t=2;while(0)tp(0|r,-1,t<<2|0);A:do if(o)for(s=0;;){if(!function(e,t){e|=0,t|=0;var n=0;do n=0|eg(e,t,0,1);while((0|n)==2)}(A=h+(s<<4)|0,0|i[c>>2]),A=0|i[A>>2],(0|(l=0|i[r>>2]))==-1|(0|l)==(0|A))a=r;else{o=0;do{if((o=o+1|0)>>>0>=t>>>0){a=1;break A}l=0|i[(a=r+(o<<2)|0)>>2]}while(!((0|l)==-1|(0|l)==(0|A)))}if(i[a>>2]=A,(s=s+1|0)>>>0>=u>>>0){a=0;break}}else for(s=0;;){if(eg(A=h+(s<<4)|0,0|i[c>>2],0,1),A=0|i[A>>2],(0|(l=0|i[r>>2]))==-1|(0|l)==(0|A))a=r;else{o=0;do{if((o=o+1|0)>>>0>=t>>>0){a=1;break A}l=0|i[(a=r+(o<<2)|0)>>2]}while(!((0|l)==-1|(0|l)==(0|A)))}if(i[a>>2]=A,(s=s+1|0)>>>0>=u>>>0){a=0;break}}while(0)}return h=a,D=d,0|h},_getNumCells:ez,_getPentagons:eq,_getRes0Cells:function(e){e|=0;var t=0,n=0,r=0;t=0;do tu(0|t,0,45),r=134225919|E(),i[(n=e+(t<<3)|0)>>2]=-1,i[n+4>>2]=r,t=t+1|0;while((0|t)!=122)return 0},_getResolution:function(e,t){return e|=0,t|=0,t=0|tl(0|e,0|t,52),E(),15&t|0},_greatCircleDistanceKm:eF,_greatCircleDistanceM:function(e,t){e|=0,t|=0;var n=0,r=0,i=0,o=0;return+(12742014.36183695*+v(+ +u(+(n=(o=+d(+(((i=+a[t>>3])-(r=+a[e>>3]))*.5)))*o+(n=+d(+((+a[t+8>>3]-+a[e+8>>3])*.5)))*(+h(+i)*+h(+r)*n))),+ +u(+(1-n))))},_greatCircleDistanceRads:function(e,t){e|=0,t|=0;var n=0,r=0,i=0,o=0;return+(2*+v(+ +u(+(n=(o=+d(+(((i=+a[t>>3])-(r=+a[e>>3]))*.5)))*o+(n=+d(+((+a[t+8>>3]-+a[e+8>>3])*.5)))*(+h(+i)*+h(+r)*n))),+ +u(+(1-n))))},_gridDisk:O,_gridDiskDistances:I,_gridDistance:function(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0,A=0,l=0;return(l=D,D=D+32|0,s=l+12|0,A=l,0|(o=0|eW(e,t,e,t,s)))?A=o:0|(e=0|eW(e,t,n,r,A))?A=e:(s=0|ec(s,A),i[(A=a)>>2]=s,i[A+4>>2]=((0|s)<0)<<31>>31,A=0),D=l,0|A},_gridPathCells:function(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0,A=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0,b=0,M=0,w=0,T=0,C=0;if(T=D,D=D+48|0,s=T+24|0,A=T+12|0,w=T,!(o=0|eW(e,t,e,t,s))&&!(o=0|eW(e,t,n,r,A))){M=((0|(b=0|ec(s,A)))<0)<<31>>31,i[s>>2]=0,i[s+4>>2]=0,i[s+8>>2]=0,i[A>>2]=0,i[A+4>>2]=0,i[A+8>>2]=0,0|eW(e,t,e,t,s)&&S(23313,23090,691,23299),0|eW(e,t,n,r,A)&&S(23313,23090,696,23299),eh(s),eh(A),b?(d=0|i[s>>2],m=+(0|b),f=0|i[(_=s+4|0)>>2],p=0|i[(y=s+8|0)>>2],x=s,r=d,o=f,n=p,g=+((0|i[A>>2])-d|0)/m,v=+((0|i[A+4>>2])-f|0)/m,m=+((0|i[A+8>>2])-p|0)/m):(o=s+4|0,n=s+8|0,_=o,y=n,x=s,r=0|i[s>>2],o=0|i[o>>2],n=0|i[n>>2],g=0,v=0,m=0),i[w>>2]=r,i[(p=w+4|0)>>2]=o,i[(f=w+8|0)>>2]=n;o:do if((0|b)<0)o=0;else for(h=0,d=0,o=r;;){C=g*(c=+(d>>>0)+4294967296*+(0|h))+ +(0|o),u=v*c+ +(0|i[_>>2]),c=m*c+ +(0|i[y>>2]),n=~~+td(+C),s=~~+td(+u),o=~~+td(+c),C=+l(+(+(0|n)-C)),u=+l(+(+(0|s)-u)),c=+l(+(+(0|o)-c));do if(C>u&C>c)n=0-(s+o)|0,r=s;else{if(A=0-n|0,u>c){r=A-o|0;break}r=s,o=A-s|0;break}while(0)if(i[w>>2]=n,i[p>>2]=r,i[f>>2]=o,!function(e){e|=0;var t=0,n=0,r=0,a=0,o=0,s=0,A=0;t=0-(n=0|i[e>>2])|0,i[e>>2]=t,i[(s=e+8|0)>>2]=0,a=(r=0|i[(A=e+4|0)>>2])+n|0,(0|n)>0?(i[A>>2]=a,i[s>>2]=n,i[e>>2]=0,t=0,r=a):n=0,(0|r)<0?(o=t-r|0,i[e>>2]=o,n=n-r|0,i[s>>2]=n,i[A>>2]=0,a=o-n|0,t=0-n|0,(0|n)<0?(i[e>>2]=a,i[A>>2]=t,i[s>>2]=0,r=t,n=0):(r=0,a=o)):a=t,(0|(t=(0|n)<(0|(t=(0|r)<(0|a)?r:a))?n:t))<=0||(i[e>>2]=a-t,i[A>>2]=r-t,i[s>>2]=n-t)}(w),0|(o=0|eX(e,t,w,a+(d<<3)|0)))break o;if(!((0|h)<(0|M)|(0|h)==(0|M)&d>>>0<b>>>0)){o=0;break o}o=0|te(0|d,0|h,1,0),h=A=0|E(),d=o,o=0|i[x>>2]}while(0)}return w=o,D=T,0|w},_gridPathCellsSize:function(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0,A=0,l=0;return(l=D,D=D+32|0,s=l+12|0,A=l,(o=0|eW(e,t,e,t,s))||(o=0|eW(e,t,n,r,A)))?A=o:(r=0|te(0|(r=0|ec(s,A)),((0|r)<0)<<31>>31|0,1,0),s=0|E(),i[(A=a)>>2]=r,i[A+4>>2]=s,A=0),D=l,0|A},_gridRingUnsafe:function(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0;if(p=D,D=D+16|0,d=p,f=p+8|0,i[(h=d)>>2]=e,i[h+4>>2]=t,!n)return i[(f=r)>>2]=e,i[f+4>>2]=t,f=0,D=p,0|f;i[f>>2]=0;o:do if(0|ew(e,t))e=9;else{if(o=(0|n)>0){a=0,h=e;do{if(0|(e=0|N(h,t,4,f,d)))break o;if(h=0|i[(t=d)>>2],t=0|i[t+4>>2],a=a+1|0,0|ew(h,t)){e=9;break o}}while((0|a)<(0|n))if(i[(c=r)>>2]=h,i[c+4>>2]=t,c=n+-1|0,o){u=0,e=1;do{if(a=22384+(u<<2)|0,(0|u)==5)for(s=0|i[a>>2],o=0,a=e;;){if(0|(e=0|N(0|i[(e=d)>>2],0|i[e+4>>2],s,f,d)))break o;if((0|o)!=(0|c)){if(A=0|i[(l=d)>>2],l=0|i[l+4>>2],i[(e=r+(a<<3)|0)>>2]=A,i[e+4>>2]=l,0|ew(A,l)){e=9;break o}e=a+1|0}else e=a;if((0|(o=o+1|0))>=(0|n))break;a=e}else for(s=d,l=0|i[a>>2],A=0,a=e,o=0|i[s>>2],s=0|i[s+4>>2];;){if(0|(e=0|N(o,s,l,f,d)))break o;if(o=0|i[(s=d)>>2],s=0|i[s+4>>2],i[(e=r+(a<<3)|0)>>2]=o,i[e+4>>2]=s,e=a+1|0,0|ew(o,s)){e=9;break o}if((0|(A=A+1|0))>=(0|n))break;a=e}u=u+1|0}while(u>>>0<6)e=d,s=h,a=0|i[e>>2],o=t,e=0|i[e+4>>2]}else s=h,a=h,o=t,e=t}else i[(s=r)>>2]=e,i[s+4>>2]=t,s=e,a=e,o=t,e=t;e=(0|s)==(0|a)&(0|o)==(0|e)?0:9}while(0)return f=e,D=p,0|f},_i64Add:te,_i64Subtract:tt,_isPentagon:ew,_isResClassIII:function(e,t){return e|=0,t|=0,t=0|tl(0|e,0|t,52),E(),1&t|0},_isValidCell:ex,_isValidDirectedEdge:function(e,t){e|=0,t|=0;var n=0;switch(n=0|tl(0|e,0|t,56),E(),7&n){case 0:case 7:return 0|(n=0)}return(n=-2130706433&t|134217728,!(!0&(2013265920&t|0)==268435456)||!0&(117440512&t|0)==16777216&(0|ew(e,n))!=0)?0|(n=0):0|(n=0|ex(e,n))},_isValidVertex:function(e,t){e|=0,t|=0;var n=0,r=0,a=0,o=0;return(a=D,D=D+16|0,n=a,!0&(2013265920&t|0)==536870912&&0|ex(e,r=-2130706433&t|134217728))?(o=0|tl(0|e,0|t,56),E(),r=(o=(0|e1(e,r,7&o,n))==0)&((0|i[(r=n)>>2])==(0|e)?(0|i[r+4>>2])==(0|t):0)&1):r=0,D=a,0|r},_latLngToCell:eP,_llvm_maxnum_f64:tc,_llvm_minnum_f64:th,_llvm_round_f64:td,_localIjToCell:function(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0;return s=D,D=D+16|0,o=s,r?n=15:(n=0|function(e,t){e|=0,t|=0;var n=0,r=0,a=0,o=0,s=0,A=0;r=0|i[e>>2],i[t>>2]=r,a=0|i[e+4>>2],i[(s=t+4|0)>>2]=a,i[(A=t+8|0)>>2]=0,e=(n=(0|a)<(0|r))?r:a,n=n?a:r;do if((0|n)<0){if((0|e)>0){if((-2147483648|e)<(0|n)&((0|n)!=-2147483648&(2147483647-e|0)>=(0|n)))break;return 0|(e=1)}if((0|n)==-2147483648|(-2147483648-e|0)>(0|n))return 0|(t=1);if((0|e)>-1){if((-2147483648|e)<(0|n))break;return 0|(e=1)}if((-2147483648^e|0)<(0|n))e=1;else break;return 0|e}while(0)return e=a-r|0,(0|r)<0?(n=0-r|0,i[s>>2]=e,i[A>>2]=n,i[t>>2]=0,r=0):(e=a,n=0),(0|e)<0&&(r=r-e|0,i[t>>2]=r,n=n-e|0,i[A>>2]=n,i[s>>2]=0,e=0),o=r-n|0,a=e-n|0,(0|n)<0?(i[t>>2]=o,i[s>>2]=a,i[A>>2]=0,e=a,a=o,n=0):a=r,(0|(r=(0|n)<(0|(r=(0|e)<(0|a)?e:a))?n:r))<=0||(i[t>>2]=a-r,i[s>>2]=e-r,i[A>>2]=n-r),0|(t=0)}(n,o))||(n=0|eX(e,t,o,a)),D=s,0|n},_malloc:e8,_maxFaceCount:function(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0;if(a=0|tl(0|e,0|t,45),E(),!(0|F(127&a)))return a=2,i[n>>2]=a,0;if(a=0|tl(0|e,0|t,52),E(),!(a&=15))return a=5,i[n>>2]=a,0;for(r=1;;){if(!(((0|tu(7,0,(15-r|0)*3|0))&e|0)==0&((0|E())&t|0)==0)){r=2,e=6;break}if(r>>>0<a>>>0)r=r+1|0;else{r=5,e=6;break}}return(0|e)==6&&(i[n>>2]=r),0},_maxGridDiskSize:function(e,t){t|=0;var n=0,r=0,a=0;return(0|(e|=0))<0?0|(t=2):(0|e)>13780509?0|(t=0|ez(15,t)):(n=((0|e)<0)<<31>>31,a=0|ta(0|e,0|n,3,0),n=0|ta(0|a,0|(0|E()),0|(n=0|te(0|e,0|n,1,0)),0|E()),n=0|te(0|n,0|E(),1,0),e=0|E(),i[t>>2]=n,i[t+4>>2]=e,0|(t=0))},_maxPolygonToCellsSize:function(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var a=0,o=0,s=0,A=0,l=0,u=0;if(A=D,D=D+48|0,a=A+16|0,o=A+8|0,s=A,0|n)return s=15,D=A,0|s;if(l=0|i[(u=e)+4>>2],i[(n=o)>>2]=i[u>>2],i[n+4>>2]=l,eZ(o,a),!(t=0|Q(a,t,s))){if(n=0|i[o>>2],(0|(o=0|i[e+8>>2]))>0){a=0|i[e+12>>2],t=0;do n=(0|i[a+(t<<3)>>2])+n|0,t=t+1|0;while((0|t)<(0|o))}a=0|i[(t=s)>>2],(0|(t=0|i[t+4>>2]))<(0|(o=((0|n)<0)<<31>>31))|(0|t)==(0|o)&a>>>0<n>>>0?(i[(t=s)>>2]=n,i[t+4>>2]=o,t=o):n=a,l=0|te(0|n,0|t,12,0),u=0|E(),i[(t=s)>>2]=l,i[t+4>>2]=u,i[(t=r)>>2]=l,i[t+4>>2]=u,t=0}return u=t,D=A,0|u},_memcpy:tf,_memset:tp,_originToDirectedEdges:function(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0;return a=(0|ew(e,t))==0,t&=-2130706433,i[(r=n)>>2]=a?e:0,i[r+4>>2]=a?285212672|t:0,i[(r=n+8|0)>>2]=e,i[r+4>>2]=301989888|t,i[(r=n+16|0)>>2]=e,i[r+4>>2]=318767104|t,i[(r=n+24|0)>>2]=e,i[r+4>>2]=335544320|t,i[(r=n+32|0)>>2]=e,i[r+4>>2]=352321536|t,i[(n=n+40|0)>>2]=e,i[n+4>>2]=369098752|t,0},_pentagonCount:function(){return 12},_polygonToCells:function(e,t,n,r){e|=0,t|=0,n|=0,r|=0;var o=0,s=0,A=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0,b=0,M=0,w=0,S=0,T=0,C=0,R=0,P=0,L=0,O=0,I=0,N=0,B=0,F=0,z=0,G=0;if(G=D,D=D+112|0,N=G+80|0,c=G+72|0,B=G,F=G+56|0,0|n)return z=15,D=G,0|z;if(!(z=0|e8((i[(h=e+8|0)>>2]<<5)+32|0)))return z=13,D=G,0|z;if(function(e,t){e|=0,t|=0;var n=0,r=0,o=0,s=0,A=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0,g=0,v=0,_=0,y=0,x=0,b=0,M=0,w=0,E=0,S=0;if(g=0|i[e>>2]){if(a[(v=t+8|0)>>3]=17976931348623157e292,a[(_=t+24|0)>>3]=17976931348623157e292,a[t>>3]=-17976931348623157e292,a[(y=t+16|0)>>3]=-17976931348623157e292,(0|g)>0){for(o=0|i[e+4>>2],p=17976931348623157e292,m=-17976931348623157e292,r=0,n=-1,c=17976931348623157e292,h=17976931348623157e292,f=-17976931348623157e292,A=-17976931348623157e292,x=0;s=+a[o+(x<<4)>>3],d=+a[o+(x<<4)+8>>3],u=+a[o+(((0|(E=n+2|0))==(0|g)?0:E)<<4)+8>>3],s<c&&(a[v>>3]=s,c=s),d<h&&(a[_>>3]=d,h=d),s>f?a[t>>3]=s:s=f,d>A&&(a[y>>3]=d,A=d),p=d>0&d<p?d:p,m=d<0&d>m?d:m,r|=+l(+(d-u))>3.141592653589793,(0|(n=x+1|0))!=(0|g);)E=x,f=s,x=n,n=E;r&&(a[y>>3]=m,a[_>>3]=p)}}else i[t>>2]=0,i[t+4>>2]=0,i[t+8>>2]=0,i[t+12>>2]=0,i[t+16>>2]=0,i[t+20>>2]=0,i[t+24>>2]=0,i[t+28>>2]=0;if(!((0|(n=0|i[(E=e+8|0)>>2]))<=0)){w=e+12|0,M=0;do if(o=0|i[w>>2],r=M,_=t+((M=M+1|0)<<5)|0,y=0|i[o+(r<<3)>>2]){if(a[(x=t+(M<<5)+8|0)>>3]=17976931348623157e292,a[(e=t+(M<<5)+24|0)>>3]=17976931348623157e292,a[_>>3]=-17976931348623157e292,a[(b=t+(M<<5)+16|0)>>3]=-17976931348623157e292,(0|y)>0){for(g=0|i[o+(r<<3)+4>>2],p=17976931348623157e292,m=-17976931348623157e292,o=0,r=-1,v=0,c=17976931348623157e292,h=17976931348623157e292,d=-17976931348623157e292,A=-17976931348623157e292;s=+a[g+(v<<4)>>3],f=+a[g+(v<<4)+8>>3],u=+a[g+(((0|(r=r+2|0))==(0|y)?0:r)<<4)+8>>3],s<c&&(a[x>>3]=s,c=s),f<h&&(a[e>>3]=f,h=f),s>d?a[_>>3]=s:s=d,f>A&&(a[b>>3]=f,A=f),p=f>0&f<p?f:p,m=f<0&f>m?f:m,o|=+l(+(f-u))>3.141592653589793,(0|(r=v+1|0))!=(0|y);)S=v,v=r,d=s,r=S;o&&(a[b>>3]=m,a[e>>3]=p)}}else i[_>>2]=0,i[_+4>>2]=0,i[_+8>>2]=0,i[_+12>>2]=0,i[_+16>>2]=0,i[_+20>>2]=0,i[_+24>>2]=0,i[_+28>>2]=0,n=0|i[E>>2];while((0|M)<(0|n))}}(e,z),I=0|i[(O=e)+4>>2],i[(n=c)>>2]=i[O>>2],i[n+4>>2]=I,eZ(c,N),n=0|Q(N,t,B))O=0,I=0;else{if(n=0|i[c>>2],(0|(s=0|i[h>>2]))>0){A=0|i[e+12>>2],o=0;do n=(0|i[A+(o<<3)>>2])+n|0,o=o+1|0;while((0|o)!=(0|s))o=n}else o=n;s=0|i[(n=B)>>2],(0|(n=0|i[n+4>>2]))<(0|(A=((0|o)<0)<<31>>31))|(0|n)==(0|A)&s>>>0<o>>>0?(i[(n=B)>>2]=o,i[n+4>>2]=A,n=A):o=s,O=0|te(0|o,0|n,12,0),I=0|E(),i[(n=B)>>2]=O,i[n+4>>2]=I,n=0}if(0|n)return e7(z),z=n,D=G,0|z;if(!(o=0|e9(O,8)))return e7(z),z=13,D=G,0|z;if(!(u=0|e9(O,8)))return e7(z),e7(o),z=13,D=G,0|z;i[(P=N)>>2]=0,i[P+4>>2]=0,L=0|i[(P=e)+4>>2],i[(n=c)>>2]=i[P>>2],i[n+4>>2]=L,n=0|k(c,O,I,t,N,o,u);o:do if(n)e7(o),e7(u),e7(z);else{s:if((0|i[h>>2])>0){for(A=e+12|0,s=0;n=0|k((0|i[A>>2])+(s<<3)|0,O,I,t,N,o,u),s=s+1|0,!(0|n);)if((0|s)>=(0|i[h>>2]))break s;e7(o),e7(u),e7(z);break}(0|I)>0|(0|I)==0&O>>>0>0&&tp(0|u,0,O<<3|0),P=0|i[(L=N)+4>>2];A:do if((0|P)>0|(0|P)==0&(0|i[L>>2])>>>0>0){T=o,C=u,R=o,P=u,L=o,n=o,M=o,w=u,S=u,o=u;l:for(;;){for(_=0,y=0,x=0,b=0,s=0,A=0;;){c=(u=B)+56|0;do i[u>>2]=0,u=u+4|0;while((0|u)<(0|c))if(0|q(h=0|i[(t=T+(_<<3)|0)>>2],t=0|i[t+4>>2],1,B,0)){c=(u=B)+56|0;do i[u>>2]=0,u=u+4|0;while((0|u)<(0|c))0|(u=0|e9(7,4))&&(U(h,t,1,B,u,7,0,0),e7(u))}for(v=0;;){m=0|i[(g=B+(v<<3)|0)>>2],g=0|i[g+4>>2];u:if((0|m)==0&(0|g)==0)u=s,c=A;else{if(d=0|ts(0|m,0|g,0|O,0|I),h=0|E(),!((0|(c=0|i[(t=u=r+(d<<3)|0)>>2]))==0&(0|(t=0|i[t+4>>2]))==0)){f=0,p=0;do{if((0|f)>(0|I)|(0|f)==(0|I)&p>>>0>O>>>0)break l;if((0|c)==(0|m)&(0|t)==(0|g)){u=s,c=A;break u}d=0|to(0|(u=0|te(0|d,0|h,1,0)),0|E(),0|O,0|I),h=0|E(),p=0|te(0|p,0|f,1,0),f=0|E(),c=0|i[(t=u=r+(d<<3)|0)>>2],t=0|i[t+4>>2]}while(!((0|c)==0&(0|t)==0))}(0|m)==0&(0|g)==0||(eO(m,g,F),0|function(e,t,n){var r=0,a=0,o=0;if(!(0|eY(e|=0,t|=0,n|=0)))return 0|(a=0);if((0|i[(a=e+8|0)>>2])<=0)return 0|(a=1);for(r=e+12|0,e=0;;){if(o=e,e=e+1|0,0|eY((0|i[r>>2])+(o<<3)|0,t+(e<<5)|0,n)){e=0,r=6;break}if((0|e)>=(0|i[a>>2])){e=1,r=6;break}}return(0|r)==6?0|e:0}(e,z,F)&&(p=0|te(0|s,0|A,1,0),A=0|E(),i[(f=u)>>2]=m,i[f+4>>2]=g,i[(s=C+(s<<3)|0)>>2]=m,i[s+4>>2]=g,s=p)),u=s,c=A}if((v=v+1|0)>>>0>=7)break;s=u,A=c}if(_=0|te(0|_,0|y,1,0),y=0|E(),x=0|te(0|x,0|b,1,0),b=0|E(),s=0|i[(A=N)>>2],(0|b)<(0|(A=0|i[A+4>>2]))|(0|b)==(0|A)&x>>>0<s>>>0)s=u,A=c;else break}if((0|A)>0|(0|A)==0&s>>>0>0){s=0,A=0;do i[(b=T+(s<<3)|0)>>2]=0,i[b+4>>2]=0,s=0|te(0|s,0|A,1,0),A=0|E(),x=0|i[(b=N)+4>>2];while((0|A)<(0|x)|((0|A)==(0|x)?s>>>0<(0|i[b>>2])>>>0:0))}if(i[(b=N)>>2]=u,i[b+4>>2]=c,(0|c)>0|(0|c)==0&u>>>0>0)v=o,_=S,y=L,x=w,b=C,o=M,S=n,w=R,M=v,n=_,L=P,P=y,R=x,C=T,T=b;else break A}e7(R),e7(P),e7(z),n=1;break o}else n=u;while(0)e7(z),e7(o),e7(n),n=0}while(0)return z=n,D=G,0|z},_readInt64AsDoubleFromPointer:function(e){return+(+((0|i[(e|=0)>>2])>>>0)+4294967296*+(0|i[e+4>>2]))},_res0CellCount:function(){return 122},_round:tm,_sbrk:tg,_sizeOfCellBoundary:function(){return 168},_sizeOfCoordIJ:function(){return 8},_sizeOfGeoLoop:function(){return 8},_sizeOfGeoPolygon:function(){return 16},_sizeOfH3Index:function(){return 8},_sizeOfLatLng:function(){return 16},_sizeOfLinkedGeoPolygon:function(){return 12},_uncompactCells:function(e,t,n,r,a,o,s){e|=0,t|=0,n|=0,r|=0,a|=0,o|=0,s|=0;var A=0,l=0,u=0,c=0,h=0,d=0,f=0,p=0,m=0;if(m=D,D=D+16|0,p=m,!((0|n)>0|(0|n)==0&t>>>0>0))return p=0,D=m,0|p;if((0|s)>=16)return p=12,D=m,0|p;d=0,f=0,h=0,A=0;o:for(;;){if(c=0|tl(0|(l=0|i[(u=e+(d<<3)|0)>>2]),0|(u=0|i[u+4>>2]),52),E(),(15&c|0)>(0|s)){A=12,l=11;break}if(eU(p,l,u,s),(0|(u=0|i[(c=p)>>2]))==0&(0|(c=0|i[c+4>>2]))==0)l=h;else{l=h;do{if(!((0|A)<(0|o)|(0|A)==(0|o)&l>>>0<a>>>0)){l=10;break o}i[(h=r+(l<<3)|0)>>2]=u,i[h+4>>2]=c,l=0|te(0|l,0|A,1,0),A=0|E(),eN(p),u=0|i[(h=p)>>2],c=0|i[h+4>>2]}while(!((0|u)==0&(0|c)==0))}if(d=0|te(0|d,0|f,1,0),(0|(f=0|E()))<(0|n)|(0|f)==(0|n)&d>>>0<t>>>0)h=l;else{A=0,l=11;break}}return(0|l)==10?(p=14,D=m,0|p):(0|l)==11?(D=m,0|A):0},_uncompactCellsSize:function(e,t,n,r,a){e|=0,t|=0,n|=0,r|=0,a|=0;var o=0,s=0,A=0,l=0,u=0,c=0,h=0,d=0;d=D,D=D+16|0,h=d;o:do if((0|n)>0|(0|n)==0&t>>>0>0){for(u=0,s=0,o=0,c=0;;){if(!((0|(A=0|i[(l=e+(u<<3)|0)>>2]))==0&(0|(l=0|i[l+4>>2]))==0)&&(l=(0|eM(A,l,r,h))==0,s=0|te(0|i[(A=h)>>2],0|i[A+4>>2],0|s,0|o),o=0|E(),!l)){o=12;break}if(u=0|te(0|u,0|c,1,0),!((0|(c=0|E()))<(0|n)|(0|c)==(0|n)&u>>>0<t>>>0))break o}return D=d,0|o}else s=0,o=0;while(0)return i[a>>2]=s,i[a+4>>2]=o,a=0,D=d,0|a},_vertexToLatLng:function(e,t,n){e|=0,t|=0,n|=0;var r=0,a=0,o=0,s=0,A=0,l=0;return(l=D,D=D+192|0,a=l,o=l+168|0,s=0|tl(0|e,0|t,56),E(),s&=7,0|(r=0|eD(e,A=-2130706433&t|134217728,o)))?A=r:(t=0|tl(0|e,0|t,52),E(),t&=15,0|ew(e,A)?ep(o,t,s,1,a):ev(o,t,s,1,a),A=a+8|0,i[n>>2]=i[A>>2],i[n+4>>2]=i[A+4>>2],i[n+8>>2]=i[A+8>>2],i[n+12>>2]=i[A+12>>2],A=0),D=l,0|A},establishStackSpace:function(e,t){e|=0,D=e},stackAlloc:function(e){e|=0;var t=0;return t=D,D=(D=D+e|0)+15&-16,0|t},stackRestore:function(e){e|=0,D=e},stackSave:function(){return 0|D}}}({Math:Math,Int8Array:Int8Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Float32Array:Float32Array,Float64Array:Float64Array},{a:ea,b:function(e){_=e},c:function(){return _},d:function(e,t,n,r){ea("Assertion failed: "+M(e)+", at: "+[t?M(t):"unknown filename",n,r?M(r):"unknown function"])},e:function(e){return d.___errno_location&&(s[d.___errno_location()>>2]=e),e},f:V,g:function(e,t,n){a.set(a.subarray(t,t+n),e)},h:function(e){var t=V();if(e>2130706432)return!1;for(var n=Math.max(t,16777216);n<e;)n=n<=536870912?w(2*n,16777216):Math.min(w((3*n+2147483648)/4,16777216),2130706432);return!!j(n)},i:function(e){ea("OOM")},j:function(e){return e},k:G,l:j,m:H,n:function(){var e=H();return d.extraStackTrace&&(e+="\n"+d.extraStackTrace()),G(e)},o:24144,p:24128},r);d.___divdi3=Q.___divdi3,d.___muldi3=Q.___muldi3,d.___remdi3=Q.___remdi3,d.___uremdi3=Q.___uremdi3,d._areNeighborCells=Q._areNeighborCells,d._bitshift64Ashr=Q._bitshift64Ashr,d._bitshift64Lshr=Q._bitshift64Lshr,d._bitshift64Shl=Q._bitshift64Shl,d._calloc=Q._calloc,d._cellAreaKm2=Q._cellAreaKm2,d._cellAreaM2=Q._cellAreaM2,d._cellAreaRads2=Q._cellAreaRads2,d._cellToBoundary=Q._cellToBoundary,d._cellToCenterChild=Q._cellToCenterChild,d._cellToChildPos=Q._cellToChildPos,d._cellToChildren=Q._cellToChildren,d._cellToChildrenSize=Q._cellToChildrenSize,d._cellToLatLng=Q._cellToLatLng,d._cellToLocalIj=Q._cellToLocalIj,d._cellToParent=Q._cellToParent,d._cellToVertex=Q._cellToVertex,d._cellToVertexes=Q._cellToVertexes,d._cellsToDirectedEdge=Q._cellsToDirectedEdge,d._cellsToLinkedMultiPolygon=Q._cellsToLinkedMultiPolygon,d._childPosToCell=Q._childPosToCell,d._compactCells=Q._compactCells,d._destroyLinkedMultiPolygon=Q._destroyLinkedMultiPolygon,d._directedEdgeToBoundary=Q._directedEdgeToBoundary,d._directedEdgeToCells=Q._directedEdgeToCells,d._edgeLengthKm=Q._edgeLengthKm,d._edgeLengthM=Q._edgeLengthM,d._edgeLengthRads=Q._edgeLengthRads;var Y=d._emscripten_replace_memory=Q._emscripten_replace_memory;d._free=Q._free,d._getBaseCellNumber=Q._getBaseCellNumber,d._getDirectedEdgeDestination=Q._getDirectedEdgeDestination,d._getDirectedEdgeOrigin=Q._getDirectedEdgeOrigin,d._getHexagonAreaAvgKm2=Q._getHexagonAreaAvgKm2,d._getHexagonAreaAvgM2=Q._getHexagonAreaAvgM2,d._getHexagonEdgeLengthAvgKm=Q._getHexagonEdgeLengthAvgKm,d._getHexagonEdgeLengthAvgM=Q._getHexagonEdgeLengthAvgM,d._getIcosahedronFaces=Q._getIcosahedronFaces,d._getNumCells=Q._getNumCells,d._getPentagons=Q._getPentagons,d._getRes0Cells=Q._getRes0Cells,d._getResolution=Q._getResolution,d._greatCircleDistanceKm=Q._greatCircleDistanceKm,d._greatCircleDistanceM=Q._greatCircleDistanceM,d._greatCircleDistanceRads=Q._greatCircleDistanceRads,d._gridDisk=Q._gridDisk,d._gridDiskDistances=Q._gridDiskDistances,d._gridDistance=Q._gridDistance,d._gridPathCells=Q._gridPathCells,d._gridPathCellsSize=Q._gridPathCellsSize,d._gridRingUnsafe=Q._gridRingUnsafe,d._i64Add=Q._i64Add,d._i64Subtract=Q._i64Subtract,d._isPentagon=Q._isPentagon,d._isResClassIII=Q._isResClassIII,d._isValidCell=Q._isValidCell,d._isValidDirectedEdge=Q._isValidDirectedEdge,d._isValidVertex=Q._isValidVertex,d._latLngToCell=Q._latLngToCell,d._llvm_maxnum_f64=Q._llvm_maxnum_f64,d._llvm_minnum_f64=Q._llvm_minnum_f64,d._llvm_round_f64=Q._llvm_round_f64,d._localIjToCell=Q._localIjToCell,d._malloc=Q._malloc,d._maxFaceCount=Q._maxFaceCount,d._maxGridDiskSize=Q._maxGridDiskSize,d._maxPolygonToCellsSize=Q._maxPolygonToCellsSize,d._memcpy=Q._memcpy,d._memset=Q._memset,d._originToDirectedEdges=Q._originToDirectedEdges,d._pentagonCount=Q._pentagonCount,d._polygonToCells=Q._polygonToCells,d._readInt64AsDoubleFromPointer=Q._readInt64AsDoubleFromPointer,d._res0CellCount=Q._res0CellCount,d._round=Q._round,d._sbrk=Q._sbrk,d._sizeOfCellBoundary=Q._sizeOfCellBoundary,d._sizeOfCoordIJ=Q._sizeOfCoordIJ,d._sizeOfGeoLoop=Q._sizeOfGeoLoop,d._sizeOfGeoPolygon=Q._sizeOfGeoPolygon,d._sizeOfH3Index=Q._sizeOfH3Index,d._sizeOfLatLng=Q._sizeOfLatLng,d._sizeOfLinkedGeoPolygon=Q._sizeOfLinkedGeoPolygon,d._uncompactCells=Q._uncompactCells,d._uncompactCellsSize=Q._uncompactCellsSize,d._vertexToLatLng=Q._vertexToLatLng,d.establishStackSpace=Q.establishStackSpace;var Z=d.stackAlloc=Q.stackAlloc,K=d.stackRestore=Q.stackRestore,J=d.stackSave=Q.stackSave;if(d.asm=Q,d.cwrap=function(e,t,n,r){var o=(n=n||[]).every(function(e){return"number"===e});return"string"!==t&&o&&!r?x(e):function(){return function(e,t,n,r,o){var s,A={string:function(e){var t=0;if(null!=e&&0!==e){var n,r=(e.length<<2)+1;n=t=Z(r),function(e,t,n,r){if(r>0){for(var i=n+r-1,a=0;a<e.length;++a){var o=e.charCodeAt(a);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),o<=127){if(n>=i)break;t[n++]=o}else if(o<=2047){if(n+1>=i)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=i)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=i)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}t[n]=0}}(e,a,n,r)}return t},array:function(e){var t=Z(e.length);return i.set(e,t),t}},l=x(e),u=[],c=0;if(r)for(var h=0;h<r.length;h++){var d=A[n[h]];d?(0===c&&(c=J()),u[h]=d(r[h])):u[h]=r[h]}var f=l.apply(null,u);return s=f,f="string"===t?M(s):"boolean"===t?!!s:s,0!==c&&K(c),f}(e,t,n,arguments,0)}},d.setValue=function(e,t,n,r){switch("*"===(n=n||"i8").charAt(n.length-1)&&(n="i32"),n){case"i1":case"i8":i[e>>0]=t;break;case"i16":o[e>>1]=t;break;case"i32":s[e>>2]=t;break;case"i64":c=[t>>>0,+D(u=t)>=1?u>0?(0|q(+I(u/4294967296),4294967295))>>>0:~~+O((u-+(~~u>>>0))/4294967296)>>>0:0],s[e>>2]=c[0],s[e+4>>2]=c[1];break;case"float":A[e>>2]=t;break;case"double":l[e>>3]=t;break;default:ea("invalid type for setValue: "+n)}},d.getValue=function(e,t,n){switch("*"===(t=t||"i8").charAt(t.length-1)&&(t="i32"),t){case"i1":case"i8":return i[e>>0];case"i16":return o[e>>1];case"i32":case"i64":return s[e>>2];case"float":return A[e>>2];case"double":return l[e>>3];default:ea("invalid type for getValue: "+t)}return null},k){z(k)||($=k,k=d.locateFile?d.locateFile($,m):m+$),U++,d.monitorRunDependencies&&d.monitorRunDependencies(U);var $,ee=function(e){e.byteLength&&(e=new Uint8Array(e)),a.set(e,8),d.memoryInitializerRequest&&delete d.memoryInitializerRequest.response,function(e){if(U--,d.monitorRunDependencies&&d.monitorRunDependencies(U),0==U&&(null!==N&&(clearInterval(N),N=null),B)){var t=B;B=null,t()}}(0)},et=function(){n(k,ee,function(){throw"could not load memory initializer "+k})},en=X(k);if(en)ee(en.buffer);else if(d.memoryInitializerRequest){var er=function(){var e=d.memoryInitializerRequest,t=e.response;if(200!==e.status&&0!==e.status){var n=X(d.memoryInitializerRequestURL);if(n)t=n.buffer;else{console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+e.status+", retrying "+k),et();return}}ee(t)};d.memoryInitializerRequest.response?setTimeout(er,0):d.memoryInitializerRequest.addEventListener("load",er)}else et()}function ei(e){e=e||p,!(U>0)&&(function(){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;){var e;e=d.preRun.shift(),C.unshift(e)}T(C)}(),U>0||(d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),t()},1)):t()));function t(){!h&&(h=!0,y||(T(R),T(P),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function(){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var e;e=d.postRun.shift(),L.unshift(e)}T(L)}()))}}function ea(e){throw d.onAbort&&d.onAbort(e),g(e+=""),v(e),y=!0,"abort("+e+"). Build with -s ASSERTIONS=1 for more info."}if(B=function e(){h||ei(),h||(B=e)},d.run=ei,d.abort=ea,d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();return ei(),e}("object"==typeof cN?cN:{}),cB="number",ck={};ck[0]="Success",ck[1]="The operation failed but a more specific error is not available",ck[2]="Argument was outside of acceptable range",ck[3]="Latitude or longitude arguments were outside of acceptable range",ck[4]="Resolution argument was outside of acceptable range",ck[5]="Cell argument was not valid",ck[6]="Directed edge argument was not valid",ck[7]="Undirected edge argument was not valid",ck[8]="Vertex argument was not valid",ck[9]="Pentagon distortion was encountered",ck[10]="Duplicate input",ck[11]="Cell arguments were not neighbors",ck[12]="Cell arguments had incompatible resolutions",ck[13]="Memory allocation failed",ck[14]="Bounds of provided memory were insufficient",ck[15]="Mode or flags argument was not valid";/**
 * Error messages for errors thrown in the binding code. These don't strictly
 * need error codes, but it's simpler to treat all of the errors consistently
 * @private
 */var cF={};/**
 * Create an error with an attached code
 * @private
 * @param {Record<number, string>} messages  Map of code-to-messages to use
 * @param {number} errCode                   Numeric error code
 * @param {{value: unknown} | {}} [meta]     Metadata with value to associate with the error
 */function cz(e,t,n){var r=Error((e[t]||"Unknown error")+" (code: "+t+(n&&"value"in n?", value: "+n.value:"")+")");// @ts-expect-error - TS doesn't like extending Error
return r.code=t,r}/**
 * Custom error for H3Error codes
 * @private
 * @param {number} errCode     Error code from the H3 library
 * @param {unknown} [value]    Value to associate with the error, if any
 * @returns {Error}
 */function cG(e,t){// The error value may be "undefined", so check if the argument was provided
var n=2==arguments.length?{value:t}:{};return cz(ck,e,n)}/**
 * Custom errors thrown from the JS bindings.
 * @private
 * @param {number} errCode     Error code from the H3 library
 * @param {unknown} [value]    Value to associate with the error, if any
 * @returns {Error}
 */function cH(e,t){// The error value may be "undefined", so check if the argument was provided
var n=2==arguments.length?{value:t}:{};return cz(cF,e,n)}/**
 * Throw a JavaScript error if the C library return code is an error
 * @private
 * @param {number} errCode     Error code from the H3 library
 * @throws {Error} Error if err is not E_SUCCESS (0)
 */function cV(e){if(0!==e)throw cG(e)}cF[1e3]="Unknown unit",cF[1001]="Array length out of bounds",cF[1002]="Got unexpected null value for H3 index";/*
 * Copyright 2018-2019, 2022 Uber Technologies, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Map of C-defined functions
 * @type {any}
 * @private
 */var cj={};// Create the bound functions themselves
[["sizeOfH3Index",cB],["sizeOfLatLng",cB],["sizeOfCellBoundary",cB],["sizeOfGeoLoop",cB],["sizeOfGeoPolygon",cB],["sizeOfLinkedGeoPolygon",cB],["sizeOfCoordIJ",cB],["readInt64AsDoubleFromPointer",cB],["isValidCell",cB,[cB,cB]],["latLngToCell",cB,[cB,cB,cB,cB]],["cellToLatLng",cB,[cB,cB,cB]],["cellToBoundary",cB,[cB,cB,cB]],["maxGridDiskSize",cB,[cB,cB]],["gridDisk",cB,[cB,cB,cB,cB]],["gridDiskDistances",cB,[cB,cB,cB,cB,cB]],["gridRingUnsafe",cB,[cB,cB,cB,cB]],["maxPolygonToCellsSize",cB,[cB,cB,cB,cB]],["polygonToCells",cB,[cB,cB,cB,cB]],["cellsToLinkedMultiPolygon",cB,[cB,cB,cB]],["destroyLinkedMultiPolygon",null,[cB]],["compactCells",cB,[cB,cB,cB,cB]],["uncompactCells",cB,[cB,cB,cB,cB,cB,cB]],["uncompactCellsSize",cB,[cB,cB,cB,cB,cB]],["isPentagon",cB,[cB,cB]],["isResClassIII",cB,[cB,cB]],["getBaseCellNumber",cB,[cB,cB]],["getResolution",cB,[cB,cB]],["maxFaceCount",cB,[cB,cB,cB]],["getIcosahedronFaces",cB,[cB,cB,cB]],["cellToParent",cB,[cB,cB,cB,cB]],["cellToChildren",cB,[cB,cB,cB,cB]],["cellToCenterChild",cB,[cB,cB,cB,cB]],["cellToChildrenSize",cB,[cB,cB,cB,cB]],["cellToChildPos",cB,[cB,cB,cB,cB]],["childPosToCell",cB,[cB,cB,cB,cB,cB,cB]],["areNeighborCells",cB,[cB,cB,cB,cB,cB]],["cellsToDirectedEdge",cB,[cB,cB,cB,cB,cB]],["getDirectedEdgeOrigin",cB,[cB,cB,cB]],["getDirectedEdgeDestination",cB,[cB,cB,cB]],["isValidDirectedEdge",cB,[cB,cB]],["directedEdgeToCells",cB,[cB,cB,cB]],["originToDirectedEdges",cB,[cB,cB,cB]],["directedEdgeToBoundary",cB,[cB,cB,cB]],["gridDistance",cB,[cB,cB,cB,cB,cB]],["gridPathCells",cB,[cB,cB,cB,cB,cB]],["gridPathCellsSize",cB,[cB,cB,cB,cB,cB]],["cellToLocalIj",cB,[cB,cB,cB,cB,cB,cB]],["localIjToCell",cB,[cB,cB,cB,cB,cB]],["getHexagonAreaAvgM2",cB,[cB,cB]],["getHexagonAreaAvgKm2",cB,[cB,cB]],["getHexagonEdgeLengthAvgM",cB,[cB,cB]],["getHexagonEdgeLengthAvgKm",cB,[cB,cB]],["greatCircleDistanceM",cB,[cB,cB]],["greatCircleDistanceKm",cB,[cB,cB]],["greatCircleDistanceRads",cB,[cB,cB]],["cellAreaM2",cB,[cB,cB,cB]],["cellAreaKm2",cB,[cB,cB,cB]],["cellAreaRads2",cB,[cB,cB,cB]],["edgeLengthM",cB,[cB,cB,cB]],["edgeLengthKm",cB,[cB,cB,cB]],["edgeLengthRads",cB,[cB,cB,cB]],["getNumCells",cB,[cB,cB]],["getRes0Cells",cB,[cB]],["res0CellCount",cB],["getPentagons",cB,[cB,cB]],["pentagonCount",cB],["cellToVertex",cB,[cB,cB,cB,cB]],["cellToVertexes",cB,[cB,cB,cB]],["vertexToLatLng",cB,[cB,cB,cB]],["isValidVertex",cB,[cB,cB]]].forEach(function(e){cj[e[0]]=cN.cwrap.apply(cN,e)});var cW=cj.sizeOfH3Index(),cX=cj.sizeOfLatLng(),cQ=cj.sizeOfCellBoundary(),cY=cj.sizeOfGeoPolygon(),cZ=cj.sizeOfGeoLoop();cj.sizeOfLinkedGeoPolygon(),cj.sizeOfCoordIJ();var cK=/[^0-9a-fA-F]/;/**
 * Convert an H3 index (64-bit hexidecimal string) into a "split long" - a pair of 32-bit ints
 * @param  {H3IndexInput} h3Index  H3 index to check
 * @return {SplitLong}             A two-element array with 32 lower bits and 32 upper bits
 */function cJ(e){if(Array.isArray(e)&&2===e.length&&Number.isInteger(e[0])&&Number.isInteger(e[1]))return e;if("string"!=typeof e||cK.test(e))return[0,0];var t=parseInt(e.substring(0,e.length-8),16);return[parseInt(e.substring(e.length-8),16),t]}/**
 * Convert a 32-bit int to a hexdecimal string
 * @private
 * @param  {number} num  Integer to convert
 * @return {H3Index}     Hexidecimal string
 */function c$(e){if(e>=0)return e.toString(16);var t=c0(8,// Handle negative numbers
(e&=2147483647).toString(16));return(parseInt(t[0],16)+8).toString(16)+t.substring(1)}/**
 * Zero-pad a string to a given length
 * @private
 * @param  {number} fullLen Target length
 * @param  {string} numStr  String to zero-pad
 * @return {string}         Zero-padded string
 */function c0(e,t){for(var n=e-t.length,r="",i=0;i<n;i++)r+="0";return r+t}// One more than the max size of an unsigned 32-bit int.
/**
 * Populate a C-appropriate GeoLoop struct from a polygon array
 * @private
 * @param  {number[][]} polygonArray  Polygon, as an array of coordinate pairs
 * @param  {number}  geoLoop          C pointer to a GeoLoop struct
 * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec
 * @return {number}                   C pointer to populated GeoLoop struct
 */function c1(e,t,n){for(var r=e.length,i=cN._calloc(r,cX),a=n?1:0,o=n?0:1,s=0;s<2*r;s+=2)cN.HEAPF64.set([e[s/2][a],e[s/2][o]].map(c9),i/8+s);return cN.HEAPU32.set([r,i],t/4),t}/**
 * Read an H3 index from a pointer to C memory.
 * @private
 * @param  {number} cAddress  Pointer to allocated C memory
 * @param {number} offset     Offset, in number of H3 indexes, in case we're
 *                            reading an array
 * @return {H3Index | null}   H3 index, or null if index was invalid
 */function c2(e,t){void 0===t&&(t=0);var n=cN.getValue(e+cW*t,"i32"),r=cN.getValue(e+cW*t+4,"i32");// this represents an invalid H3 index
return r?c$(r)+c0(8,c$(n)):null}/**
 * Read a single lat or lng value
 * @private
 * @param  {number} cAddress Pointer to C value
 * @return {number}
 */function c3(e){return 180*cN.getValue(e,"double")/Math.PI}/**
 * Read a LatLng from C and return a [lat, lng] pair.
 * @private
 * @param  {number} cAddress    Pointer to C struct
 * @return {CoordPair}          [lat, lng] pair
 */function c4(e){return[c3(e),c3(e+8)]}/**
 * Read a LatLng from C and return a GeoJSON-style [lng, lat] pair.
 * @private
 * @param  {number} cAddress    Pointer to C struct
 * @return {CoordPair}          [lng, lat] pair
 */function c5(e){return[c3(e+8),c3(e)]}/**
 * Get the lat,lon center of a given hexagon
 * @static
 * @param  {H3IndexInput} h3Index  H3 index
 * @return {CoordPair}             Point as a [lat, lng] pair
 * @throws {H3Error}               If input is invalid
 */function c6(e){var t=cN._malloc(cX),n=cJ(e),r=n[0],i=n[1];try{return cV(cj.cellToLatLng(r,i,t)),c4(t)}finally{cN._free(t)}}/**
 * Get the vertices of a given hexagon (or pentagon), as an array of [lat, lng]
 * points. For pentagons and hexagons on the edge of an icosahedron face, this
 * function may return up to 10 vertices.
 * @static
 * @param  {H3IndexInput} h3Index          H3 index
 * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops
 * @return {CoordPair[]}              Array of [lat, lng] pairs
 * @throws {H3Error}                  If input is invalid
 */function c8(e,t){var n=cN._malloc(cQ),r=cJ(e),i=r[0],a=r[1];try{return cV(cj.cellToBoundary(i,a,n)),/**
 * Read the CellBoundary structure into a list of geo coordinate pairs
 * @private
 * @param {number}  cellBoundary       C pointer to CellBoundary struct
 * @param {boolean} [geoJsonCoords]    Whether to provide GeoJSON coordinate order: [lng, lat]
 * @param {boolean} [closedLoop]       Whether to close the loop
 * @return {CoordPair[]}               Array of geo coordinate pairs
 */function(e,t,n){for(var r=cN.getValue(e,"i32"),i=e+8,a=[],o=t?c5:c4,s=0;s<2*r;s+=2)a.push(o(i+8*s));return n&&a.push(a[0]),a}(n,t,t)}finally{cN._free(n)}}// ----------------------------------------------------------------------------
/**
 * Get all hexagons with centers contained in a given polygon. The polygon
 * is specified with GeoJson semantics as an array of loops. Each loop is
 * an array of [lat, lng] pairs (or [lng, lat] if isGeoJson is specified).
 * The first loop is the perimeter of the polygon, and subsequent loops are
 * expected to be holes.
 * @static
 * @param  {number[][] | number[][][]} coordinates
 *                                  Array of loops, or a single loop
 * @param  {number} res             Resolution of hexagons to return
 * @param  {boolean} [isGeoJson]    Whether to expect GeoJson-style [lng, lat]
 *                                  pairs instead of [lat, lng]
 * @return {H3Index[]}              H3 indexes for all hexagons in polygon
 * @throws {H3Error}                If input is invalid or output is too large for JS
 */function c7(e,t,n){if(!// Utilities and helpers
/**
 * Validate a resolution, throwing an error if invalid
 * @private
 * @param  {unknown} res Value to validate
 * @return {number}      Valid res
 * @throws {H3Error}     If invalid
 */function(e){if("number"!=typeof e||e<0||e>15||Math.floor(e)!==e)throw cG(4,e)}(t),n=!!n,0===e.length||0===e[0].length)return[];var r=/**
 * Create a C-appropriate GeoPolygon struct from an array of polygons
 * @private
 * @param  {number[][][]} coordinates Array of polygons, each an array of coordinate pairs
 * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec
 * @return {number}                   C pointer to populated GeoPolygon struct
 */function(e,t){// Any loops beyond the first loop are holes
var n,r=e.length-1,i=cN._calloc(cY),a=0+cZ;if(c1(e[0],i+0,t),r>0){n=cN._calloc(r,cZ);for(var o=0;o<r;o++)c1(e[o+1],n+cZ*o,t)}return cN.setValue(i+a,r,"i32"),cN.setValue(i+(a+4),n,"i32"),i}("number"==typeof e[0][0]?[e]:e,n),i=cN._malloc(8);try{cV(cj.maxPolygonToCellsSize(r,t,0,i));var a=/**
 * Validate an array length. JS will throw its own error if you try
 * to create an array larger than 2^32 - 1, but validating beforehand
 * allows us to exit early before we try to process large amounts
 * of data that won't even fit in an output array
 * @private
 * @param  {number} length  Length to validate
 * @return {number}         Valid array length
 * @throws {H3Error}        If invalid
 */function(e){if(e>4294967295)throw cH(1001,e);return e}(cj.readInt64AsDoubleFromPointer(i)),o=cN._calloc(a,cW);try{return cV(cj.polygonToCells(r,t,0,o)),/**
 * Read an array of 64-bit H3 indexes from C and convert to a JS array of
 * H3 index strings
 * @private
 * @param  {number} cAddress    Pointer to C ouput array
 * @param  {number} maxCount    Max number of hexagons in array. Hexagons with
 *                              the value 0 will be skipped, so this isn't
 *                              necessarily the length of the output array.
 * @return {H3Index[]}          Array of H3 indexes
 */function(e,t){for(var n=[],r=0;r<t;r++){var i=c2(e,r);null!==i&&n.push(i)}return n}(o,a)}finally{cN._free(o)}}finally{cN._free(i),/**
 * Free memory allocated for a GeoPolygon struct. It is an error to access the struct
 * after passing it to this method.
 * @private
 * @param {number} geoPolygon     C pointer to GeoPolygon struct
 * @return {void}
 */function(e){var t=0+cZ;cN._free(cN.getValue(e+0+4,"i8*"));// Free the vertex array for the holes, if any
var n=cN.getValue(e+t,"i32");if(n>0){for(var r=cN.getValue(e+(t+4),"i32"),i=0;i<n;i++)cN._free(cN.getValue(r+cZ*i+4,"i8*"));cN._free(r)}cN._free(e)}(r)}}/**
 * Convert degrees to radians
 * @static
 * @param  {number} deg Value in degrees
 * @return {number}     Value in radians
 */function c9(e){return e*Math.PI/180}var he={},ht={};function hn(e,t,n,r){this.x="number"==typeof e?e:0,this.y="number"==typeof t?t:0,this.z="number"==typeof n?n:0,this.half="number"==typeof r?r:0}ht=hn,hn.prototype.contains=function(e,t,n){var r=this.half;return this.x-r<=e&&e<this.x+r&&this.y-r<=t&&t<this.y+r&&this.z-r<=n&&n<this.z+r};var hr={};function hi(e){this.bounds=e,this.q0=null,this.q1=null,this.q2=null,this.q3=null,this.q4=null,this.q5=null,this.q6=null,this.q7=null,this.items=null}hr=hi,hi.prototype.subdivide=function(){var e=this.bounds,t=e.half/2;this.q0=new hi(new ht(e.x-t,e.y-t,e.z-t,t)),this.q1=new hi(new ht(e.x+t,e.y-t,e.z-t,t)),this.q2=new hi(new ht(e.x-t,e.y+t,e.z-t,t)),this.q3=new hi(new ht(e.x+t,e.y+t,e.z-t,t)),this.q4=new hi(new ht(e.x-t,e.y-t,e.z+t,t)),this.q5=new hi(new ht(e.x+t,e.y-t,e.z+t,t)),this.q6=new hi(new ht(e.x-t,e.y+t,e.z+t,t)),this.q7=new hi(new ht(e.x+t,e.y+t,e.z+t,t))},hi.prototype.insert=function(e,t,n){if(null===this.q0){if(null===this.items?this.items=[e]:this.items.push(e),this.items.length>=4&&n<16){this.subdivide();for(var r=0;r<this.items.length;++r)this.insert(this.items[r],t,n+1);this.items=null}}else{var i,a=t[e],o=t[e+1],s=t[e+2],A=this.bounds,l=0;a>A.x&&(l+=1),o>A.y&&(l+=2),s>A.z&&(l+=4),(0===(i=l)?this.q0:1===i?this.q1:2===i?this.q2:3===i?this.q3:4===i?this.q4:5===i?this.q5:6===i?this.q6:7===i?this.q7:void 0).insert(e,t,n+1)}},hi.prototype.query=function(e,t,n,r){if(n(this.bounds)){var i=this.items,a="function"==typeof r;if(i)for(var o=0;o<i.length;++o){var s=i[o];a?r(t[s],t[s+1],t[s+2])&&e.push(s):e.push(s)}this.q0&&(this.q0.query(e,t,n,r),this.q1.query(e,t,n,r),this.q2.query(e,t,n,r),this.q3.query(e,t,n,r),this.q4.query(e,t,n,r),this.q5.query(e,t,n,r),this.q6.query(e,t,n,r),this.q7.query(e,t,n,r))}};var ha=new ht,ho={};ho=/**
 * Iterates over array in async manner. This function attempts to maximize
 * number of elements visited within single event loop cycle, while at the
 * same time tries to not exceed a time threshold allowed to stay within
 * event loop.
 *
 * @param {Array} array which needs to be iterated. Array-like objects are OK too.
 * @param {VisitCalback} visitCallback called for every element within for loop.
 * @param {DoneCallback} doneCallback called when iterator has reached end of array.
 * @param {Object=} options - additional configuration:
 * @param {number} [options.step=1] - default iteration step
 * @param {number} [options.maxTimeMS=8] - maximum time (in milliseconds) which
 *   iterator should spend within single event loop.
 * @param {number} [options.probeElements=5000] - how many elements should iterator
 *   visit to measure its iteration speed.
 */function(e,t,n,r){var i=0,a=0,o=(r=r||{}).step||1,s=r.maxTimeMS||8,A=r.probeElements||5e3;// we should never block main thread for too long...
setTimeout(function r(){var l=Math.min(e.length,i+A),u=i,c=new Date;for(u=i;u<l;u+=o)t(e[u],u,e);u<e.length?(a+=new Date-c,A=Math.round((i=u)*s/a),setTimeout(r,0)):n(e)},0)},he=function(e){e=e||{};var t,n,r=[],i={/**
     * Initializes tree asynchronously. Very useful when you have millions
     * of points and do not want to block rendering thread for too long.
     *
     * @param {number[]} points array of points for which we are building the
     * tree. Flat sequence of (x, y, z) coordinates. Array length should be
     * multiple of 3.
     *
     * @param {Function=} doneCallback called when tree is initialized. The
     * callback will be called with single argument which represent current
     * tree.
     */initAsync:function(e,r){a(e);var s=o(e);ho(e,function(t,n){s.insert(n,e,0)},function(){n=e,t=s,"function"==typeof r&&r(i)},{step:3})},/**
     * Synchronous version of `initAsync()`. Should only be used for small
     * trees (less than 50-70k of points).
     *
     * @param {number[]} points array of points for which we are building the
     * tree. Flat sequence of (x, y, z) coordinates. Array length should be
     * multiple of 3.
     */init:function(e){a(e),n=e,t=o(e);for(var r=0;r<e.length;r+=3)t.insert(r,n,0)},/**
     * Gets bounds of the root node. Bounds are represented by center of the
     * node (x, y, z) and `half` attribute - distance from the center to an
     * edge of the root node.
     */bounds:function(){return t?t.bounds:ha},/**
     * Fires a ray from `rayOrigin` into `rayDirection` and collects all points
     * that lie in the octants intersected by the ray.
     *
     * This method implements An Efficient Parametric Algorithm for Octree Traversal
     * described in http://wscg.zcu.cz/wscg2000/Papers_2000/X31.pdf
     *
     * @param {Vector3} rayOrigin x,y,z coordinates where ray starts
     * @param {Vector3} rayDirection normalized x,y,z direction where ray shoots.
     * @param {number+} near minimum distance from the ray origin. 0 by default.
     * @param {number+} far maximum length of the ray. POSITIVE_INFINITY by default
     *
     * @return {Array} of indices in the source array. Each index represnts a start
     * of the x,y,z triplet of a point, that lies in the intersected octant.
     */intersectRay:function(e,i,a,o){if(!t)return r;void 0===a&&(a=0),void 0===o&&(o=Number.POSITIVE_INFINITY),// we save as squar, to avoid expensive sqrt() operation
a*=a,o*=o;var s=[];return t.query(s,n,function(t){// using http://wscg.zcu.cz/wscg2000/Papers_2000/X31.pdf
var n,r=t.half,a=(t.x-r-e.x)/i.x,s=(t.x+r-e.x)/i.x,A=(t.y+r-e.y)/i.y,l=(t.y-r-e.y)/i.y,u=(t.z-r-e.z)/i.z,c=(t.z+r-e.z)/i.z,h=Math.min(Math.min(Math.max(a,s),Math.max(A,l)),Math.max(u,c));return!(h<0)&&(n=Math.max(Math.max(Math.min(a,s),Math.min(A,l)),Math.min(u,c)))<=h&&n<=o},function(t,n,r){var i=(t-e.x)*(t-e.x)+(n-e.y)*(n-e.y)+(r-e.z)*(r-e.z);return a<=i&&i<=o}),s.sort(function(t,n){var r=e[t],i=e[t+1],a=e[t+2],o=(r-e.x)*(r-e.x)+(i-e.y)*(i-e.y)+(a-e.z)*(a-e.z),s=e[n],A=e[n+1],l=e[n+2];return o-((s-e.x)*(s-e.x)+(A-e.y)*(A-e.y)+(l-e.z)*(l-e.z))})},/**
     * Once you have collected points from the octants intersected by a ray
     * (`intersectRay()` method), it may be worth to query points from the surrouning
     * area.
     */intersectSphere:function(e,i,a,o){if(!t)return r;var s=[],A=o*o;return t.query(s,n,// http://stackoverflow.com/questions/4578967/cube-sphere-intersection-test
function(t){var n,r,o,s,l,u,c=A,h=t.half;return e<t.x-h?c-=(n=e-(t.x-h))*n:e>t.x+h&&(c-=(r=e-(t.x+h))*r),i<t.y-h?c-=(o=i-(t.y-h))*o:i>t.y+h&&(c-=(s=i-(t.y+h))*s),a<t.z-h?c-=(l=a-(t.z-h))*l:a>t.z+h&&(c-=(u=a-(t.z+h))*u),c>0},function(t,n,r){var o,s,l;return(o=t-e)*o+(s=n-i)*s+(l=r-a)*l<A}),s},/**
     * Gets root node of the tree
     */getRoot:function(){return t}};return i;function a(e){if(!e)throw Error("Points array is required for quadtree to work");if("number"!=typeof e.length)throw Error("Points should be array-like object");if(e.length%3!=0)throw Error("Points array should consist of series of x,y,z coordinates and be multiple of 3")}function o(e){// Edge case deserves empty region:
if(0===e.length){var t=new ht;return new hr(t)}for(var n=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY,i=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,o=Number.NEGATIVE_INFINITY,s=Number.NEGATIVE_INFINITY,A=0;A<e.length;A+=3){var l=e[A],u=e[A+1],c=e[A+2];l<n&&(n=l),l>a&&(a=l),u<r&&(r=u),u>o&&(o=u),c<i&&(i=c),c>s&&(s=c)}// Otherwise let's figure out how big should be the root region
var h=Math.max(Math.max(a-n,o-r),s-i);n-=1,r-=1,i-=1;var d=// since we need to have both sides inside the area, let's artificially
// grow the root region:
(h+=2)/2,f=new ht(n+d,r+d,i+d,d);return new hr(f)}};const hs=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Box3:eI,BufferGeometry:t3,Float32BufferAttribute:tY,InstancedBufferGeometry:class extends t3{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){let e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}},InstancedInterleavedBuffer:ow,InterleavedBufferAttribute:iX,Sphere:eJ,Vector3:eL,WireframeGeometry:class extends t3{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){// buffer
let t=[],n=new Set,r=new eL,i=new eL;if(null!==e.index){// indexed BufferGeometry
let a=e.attributes.position,o=e.index,s=e.groups;0===s.length&&(s=[{start:0,count:o.count,materialIndex:0}]);// create a data structure that contains all edges without duplicates
for(let e=0,A=s.length;e<A;++e){let A=s[e],l=A.start,u=A.count;for(let e=l,s=l+u;e<s;e+=3)for(let s=0;s<3;s++){let A=o.getX(e+s),l=o.getX(e+(s+1)%3);r.fromBufferAttribute(a,A),i.fromBufferAttribute(a,l),!0===aJ(r,i,n)&&(t.push(r.x,r.y,r.z),t.push(i.x,i.y,i.z))}}}else{// non-indexed BufferGeometry
let a=e.attributes.position;for(let e=0,o=a.count/3;e<o;e++)for(let o=0;o<3;o++){// three edges per triangle, an edge is represented as (index1, index2)
// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)
let s=3*e+o,A=3*e+(o+1)%3;r.fromBufferAttribute(a,s),i.fromBufferAttribute(a,A),!0===aJ(r,i,n)&&(t.push(r.x,r.y,r.z),t.push(i.x,i.y,i.z))}}// build geometry
this.setAttribute("position",new tY(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}};// support multiple method names for backwards threejs compatibility
var hA=new hs.BufferGeometry().setAttribute?"setAttribute":"addAttribute";const hl=new hs.Box3,hu=new hs.Vector3;class hc extends hs.InstancedBufferGeometry{constructor(){super(),this.type="LineSegmentsGeometry",this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this[hA]("position",new hs.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this[hA]("uv",new hs.Float32BufferAttribute([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(e){let t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==t&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));let n=new hs.InstancedInterleavedBuffer(t,6,1);// xyz, xyz
return this[hA]("instanceStart",new hs.InterleavedBufferAttribute(n,3,0)),this[hA]("instanceEnd",new hs.InterleavedBufferAttribute(n,3,3)),//
this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));let n=new hs.InstancedInterleavedBuffer(t,6,1);// rgb, rgb
return this[hA]("instanceColorStart",new hs.InterleavedBufferAttribute(n,3,0)),this[hA]("instanceColorEnd",new hs.InterleavedBufferAttribute(n,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new hs.WireframeGeometry(e.geometry)),this}fromLineSegments(e){let t=e.geometry;if(t.isGeometry){console.error("LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.");return}// assumes non-indexed
return t.isBufferGeometry&&this.setPositions(t.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new hs.Box3);let e=this.attributes.instanceStart,t=this.attributes.instanceEnd;void 0!==e&&void 0!==t&&(this.boundingBox.setFromBufferAttribute(e),hl.setFromBufferAttribute(t),this.boundingBox.union(hl))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new hs.Sphere),null===this.boundingBox&&this.computeBoundingBox();let e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(void 0!==e&&void 0!==t){let n=this.boundingSphere.center;this.boundingBox.getCenter(n);let r=0;for(let i=0,a=e.count;i<a;i++)hu.fromBufferAttribute(e,i),r=Math.max(r,n.distanceToSquared(hu)),hu.fromBufferAttribute(t,i),r=Math.max(r,n.distanceToSquared(hu));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}hc.prototype.isLineSegmentsGeometry=!0;/**
 * parameters = {
 *  color: <hex>,
 *  linewidth: <float>,
 *  dashed: <boolean>,
 *  dashScale: <float>,
 *  dashSize: <float>,
 *  dashOffset: <float>,
 *  gapSize: <float>,
 *  resolution: <Vector2>, // to be set by renderer
 * }
 */const hh=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{ShaderLib:nU,ShaderMaterial:nv,UniformsLib:nq,UniformsUtils:ng,Vector2:eo};hh.UniformsLib.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new hh.Vector2(1,1)},dashScale:{value:1},dashSize:{value:1},dashOffset:{value:0},gapSize:{value:1}// todo FIX - maybe change to totalSize
},hh.ShaderLib.line={uniforms:hh.UniformsUtils.merge([hh.UniformsLib.common,hh.UniformsLib.fog,hh.UniformsLib.line]),vertexShader:/* glsl */`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		varying vec2 vUv;
		varying vec4 worldPos;
		varying vec3 worldStart;
		varying vec3 worldEnd;

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;

			#endif

			float aspect = resolution.x / resolution.y;

			vUv = uv;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			worldStart = start.xyz;
			worldEnd = end.xyz;

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				// get the offset direction as perpendicular to the view vector
				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 offset;
				if ( position.y < 0.5 ) {

					offset = normalize( cross( start.xyz, worldDir ) );

				} else {

					offset = normalize( cross( end.xyz, worldDir ) );

				}

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// extend the line bounds to encompass  endcaps
					start.xyz += - worldDir * linewidth * 0.5;
					end.xyz += worldDir * linewidth * 0.5;

					// shift the position of the quad so it hugs the forward edge of the line
					offset.xy -= dir * forwardOffset;
					offset.z += 0.5;

				#endif

				// endcaps
				if ( position.y > 1.0 || position.y < 0.0 ) {

					offset.xy += dir * 2.0 * forwardOffset;

				}

				// adjust for linewidth
				offset *= linewidth * 0.5;

				// set the world position
				worldPos = ( position.y < 0.5 ) ? start : end;
				worldPos.xyz += offset;

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segements overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

			vec2 offset = vec2( dir.y, - dir.x );
			// undo aspect ratio adjustment
			dir.x /= aspect;
			offset.x /= aspect;

			// sign flip
			if ( position.x < 0.0 ) offset *= - 1.0;

			// endcaps
			if ( position.y < 0.0 ) {

				offset += - dir;

			} else if ( position.y > 1.0 ) {

				offset += dir;

			}

			// adjust for linewidth
			offset *= linewidth;

			// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
			offset /= resolution.y;

			// select end
			vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

			// back to clip space
			offset *= clip.w;

			clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:/* glsl */`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;
		varying vec4 worldPos;
		varying vec3 worldStart;
		varying vec3 worldEnd;

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		varying vec2 vUv;

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

			#endif

			#else

				#ifdef ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

			if ( abs( vUv.y ) > 1.0 ) {

				float a = vUv.x;
				float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
				float len2 = a * a + b * b;

				if ( len2 > 1.0 ) discard;

			}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <encodings_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class hd extends hh.ShaderMaterial{constructor(e){super({type:"LineMaterial",uniforms:hh.UniformsUtils.clone(hh.ShaderLib.line.uniforms),vertexShader:hh.ShaderLib.line.vertexShader,fragmentShader:hh.ShaderLib.line.fragmentShader,clipping:!0// required for clipping support
}),Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(e){!0===e?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},dashed:{enumerable:!0,get:function(){return"USE_DASH"in this.defines},set(e){!!e!="USE_DASH"in this.defines&&(this.needsUpdate=!0),!0===e?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(e){this.uniforms.dashOffset.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}},alphaToCoverage:{enumerable:!0,get:function(){return"ALPHA_TO_COVERAGE"in this.defines},set:function(e){!!e!="ALPHA_TO_COVERAGE"in this.defines&&(this.needsUpdate=!0),!0===e?(this.defines.ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(e)}}hd.prototype.isLineMaterial=!0;const hf=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Box3:eI,BufferGeometry:t3,InstancedInterleavedBuffer:ow,InterleavedBufferAttribute:iX,Line3:class{constructor(e=new eL,t=new eL){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){oC.subVectors(e,this.start),oR.subVectors(this.end,this.start);let n=oR.dot(oR),r=oR.dot(oC),i=r/n;return t&&(i=J(i,0,1)),i}closestPointToPoint(e,t,n){let r=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}},MathUtils:ea,Matrix4:e8,Mesh:nc,Sphere:eJ,Vector3:eL,Vector4:eS};// support both modes for backwards threejs compatibility
var hp=new hf.BufferGeometry().setAttribute?"setAttribute":"addAttribute";const hm=new hf.Vector3,hg=new hf.Vector3,hv=new hf.Vector4,h_=new hf.Vector4,hy=new hf.Vector4,hx=new hf.Vector3,hb=new hf.Matrix4,hM=new hf.Line3,hw=new hf.Vector3,hE=new hf.Box3,hS=new hf.Sphere,hT=new hf.Vector4;class hC extends hf.Mesh{constructor(e=new hc,t=new hd({color:16777215*Math.random()})){super(e,t),this.type="LineSegments2"}computeLineDistances(){let e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,r=new Float32Array(2*t.count);for(let e=0,i=0,a=t.count;e<a;e++,i+=2)hm.fromBufferAttribute(t,e),hg.fromBufferAttribute(n,e),r[i]=0===i?0:r[i-1],r[i+1]=r[i]+hm.distanceTo(hg);let i=new hf.InstancedInterleavedBuffer(r,2,1);// d0, d1
return e[hp]("instanceDistanceStart",new hf.InterleavedBufferAttribute(i,1,0)),e[hp]("instanceDistanceEnd",new hf.InterleavedBufferAttribute(i,1,1)),this}raycast(e,t){null===e.camera&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');let n=void 0!==e.params.Line2&&e.params.Line2.threshold||0,r=e.ray,i=e.camera,a=i.projectionMatrix,o=this.matrixWorld,s=this.geometry,A=this.material,l=A.resolution,u=A.linewidth+n,c=s.attributes.instanceStart,h=s.attributes.instanceEnd,d=-i.near,f=2*Math.max(u/l.width,u/l.height);null===s.boundingSphere&&s.computeBoundingSphere(),hS.copy(s.boundingSphere).applyMatrix4(o);let p=Math.max(i.near,hS.distanceToPoint(r.origin));// get the w component to scale the world space line width
hT.set(0,0,-p,1).applyMatrix4(i.projectionMatrix),hT.multiplyScalar(1/hT.w),hT.applyMatrix4(i.projectionMatrixInverse);let m=.5*Math.abs(f/hT.w);if(hS.radius+=m,!1===e.ray.intersectsSphere(hS))return;null===s.boundingBox&&s.computeBoundingBox(),hE.copy(s.boundingBox).applyMatrix4(o);let g=Math.max(i.near,hE.distanceToPoint(r.origin));// get the w component to scale the world space line width
hT.set(0,0,-g,1).applyMatrix4(i.projectionMatrix),hT.multiplyScalar(1/hT.w),hT.applyMatrix4(i.projectionMatrixInverse);let v=.5*Math.abs(f/hT.w);if(hE.max.x+=v,hE.max.y+=v,hE.max.z+=v,hE.min.x-=v,hE.min.y-=v,hE.min.z-=v,!1!==e.ray.intersectsBox(hE)){//
// pick a point 1 unit out along the ray to avoid the ray origin
// sitting at the camera origin which will cause "w" to be 0 when
// applying the projection matrix.
r.at(1,hy),hy.w=1,hy.applyMatrix4(i.matrixWorldInverse),hy.applyMatrix4(a),hy.multiplyScalar(1/hy.w),hy.x*=l.x/2,hy.y*=l.y/2,hy.z=0,hx.copy(hy),hb.multiplyMatrices(i.matrixWorldInverse,o);for(let e=0,n=c.count;e<n;e++){if(hv.fromBufferAttribute(c,e),h_.fromBufferAttribute(h,e),hv.w=1,h_.w=1,hv.applyMatrix4(hb),h_.applyMatrix4(hb),hv.z>d&&h_.z>d)continue;// trim the segment if it extends behind camera near
if(hv.z>d){let e=hv.z-h_.z,t=(hv.z-d)/e;hv.lerp(h_,t)}else if(h_.z>d){let e=h_.z-hv.z,t=(h_.z-d)/e;h_.lerp(hv,t)}// clip space
hv.applyMatrix4(a),h_.applyMatrix4(a),hv.multiplyScalar(1/hv.w),h_.multiplyScalar(1/h_.w),hv.x*=l.x/2,hv.y*=l.y/2,h_.x*=l.x/2,h_.y*=l.y/2,hM.start.copy(hv),hM.start.z=0,hM.end.copy(h_),hM.end.z=0;let n=hM.closestPointToPointParameter(hx,!0);hM.at(n,hw);let i=hf.MathUtils.lerp(hv.z,h_.z,n),s=i>=-1&&i<=1,A=hx.distanceTo(hw)<.5*u;if(s&&A){hM.start.fromBufferAttribute(c,e),hM.end.fromBufferAttribute(h,e),hM.start.applyMatrix4(o),hM.end.applyMatrix4(o);let n=new hf.Vector3,i=new hf.Vector3;r.distanceSqToSegment(hM.start,hM.end,i,n),t.push({point:i,pointOnLine:n,distance:r.origin.distanceTo(i),object:this,face:null,faceIndex:e,uv:null,uv2:null})}}}}}hC.prototype.LineSegments2=!0;class hR extends hc{constructor(){super(),this.type="LineGeometry"}setPositions(e){for(var t=e.length-3,n=new Float32Array(2*t),r=0;r<t;r+=3)n[2*r]=e[r],n[2*r+1]=e[r+1],n[2*r+2]=e[r+2],n[2*r+3]=e[r+3],n[2*r+4]=e[r+4],n[2*r+5]=e[r+5];return super.setPositions(n),this}setColors(e){for(var t=e.length-3,n=new Float32Array(2*t),r=0;r<t;r+=3)n[2*r]=e[r],n[2*r+1]=e[r+1],n[2*r+2]=e[r+2],n[2*r+3]=e[r+3],n[2*r+4]=e[r+4],n[2*r+5]=e[r+5];return super.setColors(n),this}fromLine(e){var t=e.geometry;if(t.isGeometry){console.error("THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.");return}// assumes non-indexed
return t.isBufferGeometry&&this.setPositions(t.attributes.position.array),this}}hR.prototype.isLineGeometry=!0;class hP extends hC{constructor(e=new hR,t=new hd({color:16777215*Math.random()})){super(e,t),this.type="Line2"}}hP.prototype.isLine2=!0;/**
 * Text = 3D Text
 *
 * parameters = {
 *  font: <THREE.Font>, // font
 *
 *  size: <float>, // size of the text
 *  height: <float>, // thickness to extrude text
 *  curveSegments: <int>, // number of points on the curves
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into text bevel goes
 *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel
 *  bevelOffset: <float> // how far from text outline does bevel start
 * }
 */class hL extends az{constructor(e,t={}){let n=t.font;if(void 0===n)super();// generate default extrude geometry
else{let r=n.generateShapes(e,t.size);// translate parameters to ExtrudeGeometry API
t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(r,t)}this.type="TextGeometry"}}function hD(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function hO(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?hD(Object(n),!0).forEach(function(t){hN(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):hD(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function hI(e,t){if(!(e instanceof t))throw TypeError("Cannot call a class as a function")}function hq(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,hY(r.key),r)}}function hU(e,t,n){return t&&hq(e.prototype,t),n&&hq(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function hN(e,t,n){return(t=hY(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function hB(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&hF(e,t)}function hk(e){return(hk=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function hF(e,t){return(hF=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function hz(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function hG(e,t,n){return(hG=hz()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&hF(i,n.prototype),i}).apply(null,arguments)}function hH(e){if(void 0===e)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function hV(e){var t=hz();return function(){var n,r=hk(e);if(t){var i=hk(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return function(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw TypeError("Derived constructors may only return object or undefined");return hH(e)}(this,n)}}function hj(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a,o,s=[],A=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;A=!1}else for(;!(A=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);A=!0);}catch(e){l=!0,i=e}finally{try{if(!A&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(l)throw i}}return s}}(e,t)||hX(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function hW(e){return function(e){if(Array.isArray(e))return hQ(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||hX(e)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function hX(e,t){if(e){if("string"==typeof e)return hQ(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return hQ(e,t)}}function hQ(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function hY(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}function hZ(e,t){var n=hJ(e,t,"get");return n.get?n.get.call(e):n.value}function hK(e,t,n){var r=hJ(e,t,"set");return function(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw TypeError("attempted to set read only private field");t.value=n}}(e,r,n),n}function hJ(e,t,n){if(!t.has(e))throw TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function h$(e,t){if(t.has(e))throw TypeError("Cannot initialize the same private elements twice on an object")}function h0(e,t,n){h$(e,t),t.set(e,n)}var h1=function e(t){t instanceof Array?t.forEach(e):(t.map&&t.map.dispose(),t.dispose())},h2=function e(t){t.geometry&&t.geometry.dispose(),t.material&&h1(t.material),t.texture&&t.texture.dispose(),t.children&&t.children.forEach(e)},h3=function(e){if(e&&e.children)for(;e.children.length;){var t=e.children[0];e.remove(t),h2(t)}};function h4(e,t){var n=new t;// To extract defaults
return{linkProp:function(t){// link property config
return{default:n[t](),onChange:function(n,r){r[e][t](n)},triggerUpdate:!1}},linkMethod:function(t){// link method pass-through
return function(n){for(var r=n[e],i=arguments.length,a=Array(i>1?i-1:0),o=1;o<i;o++)a[o-1]=arguments[o];var s=r[t].apply(r,a);return s===r?this// chain based on the parent object, not the inner kapsule
:s}}}}function h5(){return 100}function h6(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=(90-e)*Math.PI/180,i=(90-t)*Math.PI/180,a=100*(1+n);return{x:a*Math.sin(r)*Math.cos(i),y:a*Math.cos(r),z:a*Math.sin(r)*Math.sin(i)}}function h8(e){var t=e.x,n=e.y,r=e.z,i=Math.sqrt(t*t+n*n+r*r),a=Math.atan2(r,t);return{lat:90-180*Math.acos(n/i)/Math.PI,lng:90-180*a/Math.PI-(a<-Math.PI/2?360:0),// keep within [-180, 180] boundaries
altitude:i/100-1}}function h7(e){return e*Math.PI/180}var h9=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BackSide:1,BufferAttribute:tW,Color:tk,Mesh:nc,ShaderMaterial:nv},de={backside:!0,coefficient:.5,color:"gold",size:2,power:1},dt=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Color:tk,LineBasicMaterial:iY,LineSegments:i4,Mesh:nc,MeshPhongMaterial:class extends tG{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new tk(16777215),this.specular=new tk(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new tk(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new eo(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},SphereGeometry:aX,SRGBColorSpace:B,TextureLoader:oi},dn=st({props:{globeImageUrl:{},bumpImageUrl:{},showGlobe:{default:!0,onChange:function(e,t){t.globeObj.visible=!!e},triggerUpdate:!1},showGraticules:{default:!1,onChange:function(e,t){t.graticulesObj.visible=!!e},triggerUpdate:!1},showAtmosphere:{default:!0,onChange:function(e,t){t.atmosphereObj&&(t.atmosphereObj.visible=!!e)},triggerUpdate:!1},atmosphereColor:{default:"lightskyblue"},atmosphereAltitude:{default:.15},onReady:{default:function(){},triggerUpdate:!1}},methods:{globeMaterial:function(e,t){return void 0!==t?(e.globeObj.material=t||e.defaultGlobeMaterial,this):e.globeObj.material},_destructor:function(e){h3(e.globeObj),h3(e.graticulesObj)}},stateInit:function(){// create globe
var e=new dt.SphereGeometry(100,75,75),t=new dt.MeshPhongMaterial({color:0}),n=new dt.Mesh(e,t);return n.rotation.y=-Math.PI/2,n.__globeObjType="globe",{globeObj:n,graticulesObj:new dt.LineSegments(new s7((function(){var e,t,n,r,i,a,o,s,A,l,u,c,h=10,d=10,f=90,p=360,m=2.5;function g(){return{type:"MultiLineString",coordinates:v()}}function v(){return An(sD(r/f)*f,n,f).map(u).concat(An(sD(s/p)*p,o,p).map(c)).concat(An(sD(t/h)*h,e,h).filter(function(e){return sC(e%f)>1e-6}).map(A)).concat(An(sD(a/d)*d,i,d).filter(function(e){return sC(e%p)>1e-6}).map(l))}return g.lines=function(){return v().map(function(e){return{type:"LineString",coordinates:e}})},g.outline=function(){return{type:"Polygon",coordinates:[u(r).concat(c(o).slice(1),u(n).reverse().slice(1),c(s).reverse().slice(1))]}},g.extent=function(e){return arguments.length?g.extentMajor(e).extentMinor(e):g.extentMinor()},g.extentMajor=function(e){return arguments.length?(r=+e[0][0],n=+e[1][0],s=+e[0][1],o=+e[1][1],r>n&&(e=r,r=n,n=e),s>o&&(e=s,s=o,o=e),g.precision(m)):[[r,s],[n,o]]},g.extentMinor=function(n){return arguments.length?(t=+n[0][0],e=+n[1][0],a=+n[0][1],i=+n[1][1],t>e&&(n=t,t=e,e=n),a>i&&(n=a,a=i,i=n),g.precision(m)):[[t,a],[e,i]]},g.step=function(e){return arguments.length?g.stepMajor(e).stepMinor(e):g.stepMinor()},g.stepMajor=function(e){return arguments.length?(f=+e[0],p=+e[1],g):[f,p]},g.stepMinor=function(e){return arguments.length?(h=+e[0],d=+e[1],g):[h,d]},g.precision=function(h){return arguments.length?(m=+h,A=Ar(a,i,90),l=Ai(t,e,m),u=Ar(s,o,90),c=Ai(r,n,m),g):m},g.extentMajor([[-180,-89.999999],[180,89.999999]]).extentMinor([[-180,-80.000001],[180,80.000001]])})()(),100,2),new dt.LineBasicMaterial({color:"lightgrey",transparent:!0,opacity:.1})),defaultGlobeMaterial:t}},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e,t.scene.add(t.globeObj),t.scene.add(t.graticulesObj),t.ready=!1},update:function(e,t){var n=e.globeObj.material;if(t.hasOwnProperty("globeImageUrl")&&(e.globeImageUrl?new dt.TextureLoader().load(e.globeImageUrl,function(t){t.colorSpace=dt.SRGBColorSpace,n.map=t,n.color=null,n.needsUpdate=!0,// ready when first globe image finishes loading (asynchronously to allow 1 frame to load texture)
!e.ready&&(e.ready=!0)&&setTimeout(e.onReady)}):n.color||(n.color=new dt.Color(0))),t.hasOwnProperty("bumpImageUrl")&&(e.bumpImageUrl?e.bumpImageUrl&&new dt.TextureLoader().load(e.bumpImageUrl,function(e){n.bumpMap=e,n.needsUpdate=!0}):(n.bumpMap=null,n.needsUpdate=!0)),(t.hasOwnProperty("atmosphereColor")||t.hasOwnProperty("atmosphereAltitude"))&&(e.atmosphereObj&&(// recycle previous atmosphere object
e.scene.remove(e.atmosphereObj),h3(e.atmosphereObj)),e.atmosphereColor&&e.atmosphereAltitude)){var r=e.atmosphereObj=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:de,n=t.backside,r=t.coefficient,i=t.color,a=t.size,o=t.power,s=function(e,t){for(var n=e.clone(),r=new Float32Array(3*e.attributes.position.count),i=0,a=r.length;i<a;i++){var o=e.attributes.normal.array[i],s=e.attributes.position.array[i];r[i]=s+o*t}return n.setAttribute("position",new h9.BufferAttribute(r,3)),n}(e,a),A=new h9.ShaderMaterial({depthWrite:!1,fragmentShader:"\nuniform vec3 color;\nuniform float coefficient;\nuniform float power;\nvarying vec3 vVertexNormal;\nvarying vec3 vVertexWorldPosition;\nvoid main() {\n  vec3 worldCameraToVertex = vVertexWorldPosition - cameraPosition;\n  vec3 viewCameraToVertex	= (viewMatrix * vec4(worldCameraToVertex, 0.0)).xyz;\n  viewCameraToVertex = normalize(viewCameraToVertex);\n  float intensity	= pow(\n    coefficient + dot(vVertexNormal, viewCameraToVertex),\n    power\n  );\n  gl_FragColor = vec4(color, intensity);\n}",transparent:!0,uniforms:{coefficient:{value:r},color:{value:new h9.Color(i)},power:{value:o}},vertexShader:"\nvarying vec3 vVertexWorldPosition;\nvarying vec3 vVertexNormal;\nvoid main() {\n  vVertexNormal	= normalize(normalMatrix * normal);\n  vVertexWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n  gl_Position	= projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"});return n&&(A.side=h9.BackSide),new h9.Mesh(s,A)}(e.globeObj.geometry,{backside:!0,color:e.atmosphereColor,size:100*e.atmosphereAltitude,power:3.5,// dispersion
coefficient:.1});r.visible=!!e.showAtmosphere,r.__globeObjType="atmosphere",e.scene.add(r)}e.ready||e.globeImageUrl||(// ready immediately if there's no globe image
e.ready=!0,e.onReady())}}),dr=function(e){return isNaN(e)?parseInt(/*@__PURE__*/n(AM)(e).toHex(),16):e},di=function(e){return e&&isNaN(e)?(0,Ab.default)(e).opacity:1},da=function(e){var t,n=!(arguments.length>1)||void 0===arguments[1]||arguments[1],r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=1,a=/^rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d.eE+-]+)\s*\)$/.exec(e.trim().toLowerCase());if(a){var o=hj(a.slice(1),4),s=o[0],A=o[1],l=o[2],u=o[3];t=new tk("rgb(".concat(+s,",").concat(+A,",").concat(+l,")")),i=Math.min(+u,1)}else t=new tk(e);r&&t.convertLinearToSRGB();// vertexColors expects linear, but shaders expect sRGB
var c=t.toArray();return n?[].concat(hW(c),[i]):c},ds=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Float32BufferAttribute:tY};function dA(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ds.Float32BufferAttribute,r=new n(e.length*t,t);return 1===t?e.forEach(function(e,t){return r.setX(t,e)}):e.forEach(function(e,n){return r.set(e,n*t)}),r}function dl(e,t){var n,r,i,a,o,s,A,l,u,c,h,d,f,p,m,g,v,_,y,x,b,M,w,E,S,T,C,R=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},P=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},L=P.removeDelay,D=void 0===L?0:L;return r=t.children,i=function(e){var n=function(){t.remove(e),h3(e),e&&e.hasOwnProperty("__data")&&delete e.__data.__currentTargetD};D?setTimeout(n,D):n()},s=void 0===(o=(a=hO({objBindAttr:"__threeObj"},R)).createObj)?function(e){return{}}:o,l=void 0===(A=a.updateObj)?function(e,t){}:A,c=void 0===(u=a.exitObj)?function(e){}:u,d=void 0===(h=a.objBindAttr)?"__obj":h,T=(v=void 0===(g=(m=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?AC(Object(n),!0).forEach(function(t){AR(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):AC(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}({objBindAttr:d,dataBindAttr:p=void 0===(f=a.dataBindAttr)?"__data":f},function(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}(a,AI))).objBindAttr)?"__obj":g,y=void 0===(_=m.dataBindAttr)?"__data":_,x=m.idAccessor,b=m.purge,M=function(e){return e.hasOwnProperty(y)},w=r.filter(function(e){return!M(e)}),E=r.filter(M).map(function(e){return e[y]}),(S=void 0!==b&&b?{enter:e,exit:E,update:[]}// don't diff data in purge mode
:function(e,t,n){var r={enter:[],update:[],exit:[]};if(n){// compare by id (duplicate keys are ignored)
var i=AT(e,n,!1),a=AT(t,n,!1);Object.entries(Object.assign({},i,a)).forEach(function(e){var t=AP(e,2),n=t[0],o=t[1],s=i.hasOwnProperty(n)?a.hasOwnProperty(n)?"update":"exit":"enter";r[s].push("update"===s?[i[n],a[n]]:o)})}else{// use object references for comparison
var o=new Set(e),s=new Set(t);new Set([].concat(AL(o),AL(s))).forEach(function(e){var t=o.has(e)?s.has(e)?"update":"exit":"enter";r[t].push("update"===t?[e,e]:e)})}return r}(E,e,x)).update=S.update.map(function(e){var t=AP(e,2),n=t[0],r=t[1];return n!==r&&(// transfer obj to new data point (if different)
r[v]=n[v],r[v][y]=r),r}),S.exit=S.exit.concat(w.map(function(e){return AR({},v,e)})),S).enter,C=S.update,// Remove exiting points
S.exit.forEach(function(e){var t=e[d];delete e[d],c(t),i(t)}),n=[],T.forEach(function(e){var t=s(e);t&&(t[p]=e,e[d]=t,n.push(t))}),void(function(e){e.forEach(function(e){var t=e[d];t&&(t[p]=e,l(t,e))})}([].concat(AL(T),AL(C))),// Add new points
n.forEach(function(e){return t.add(e)}))}var du=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BufferGeometry:t3,Color:tk,CylinderGeometry:ag,Matrix4:e8,Mesh:nc,MeshLambertMaterial:a$,Object3D:tb,Vector3:eL},dc=Object.assign({},Aa),dh=dc.BufferGeometryUtils||dc,dd=st({props:{pointsData:{default:[]},pointLat:{default:"lat"},pointLng:{default:"lng"},pointColor:{default:function(){return"#ffffaa"}},pointAltitude:{default:.1},// in units of globe radius
pointRadius:{default:.25},// in deg
pointResolution:{default:12,triggerUpdate:!1},// how many slice segments in the cylinder's circumference
pointsMerge:{default:!1},// boolean. Whether to merge all points into a single mesh for rendering performance
pointsTransitionDuration:{default:1e3,triggerUpdate:!1}// ms
},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e){// Data accessors
var t=Ax(e.pointLat),n=Ax(e.pointLng),r=Ax(e.pointAltitude),i=Ax(e.pointRadius),a=Ax(e.pointColor),o=new du.CylinderGeometry(1,1,1,e.pointResolution);o.applyMatrix4(new du.Matrix4().makeRotationX(Math.PI/2)),o.applyMatrix4(new du.Matrix4().makeTranslation(0,0,-.5));var s=2*Math.PI*100/360,A={},l=e.pointsMerge?new du.Object3D:e.scene;if(dl(e.pointsData,l,{createObj://
function(){var e=new du.Mesh(o);return e.__globeObjType="point",e},updateObj:function(o,l){var u=function(t){var n=o.__currentTargetD=t,r=n.r,i=n.alt,a=n.lat,A=n.lng;// position cylinder ground
Object.assign(o.position,h6(a,A));// orientate outwards
var l=e.pointsMerge?new du.Vector3(0,0,0):e.scene.localToWorld(new du.Vector3(0,0,0));// translate from local to world coords
o.lookAt(l),// scale radius and altitude
o.scale.x=o.scale.y=Math.min(30,r)*s,o.scale.z=Math.max(100*i,.1)},c={alt:+r(l),r:+i(l),lat:+t(l),lng:+n(l)},h=o.__currentTargetD||Object.assign({},c,{alt:-.001});if(Object.keys(c).some(function(e){return h[e]!==c[e]})&&(e.pointsMerge||!e.pointsTransitionDuration||e.pointsTransitionDuration<0?u(c):new sn.Tween(h).to(c,e.pointsTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(u).start()),!e.pointsMerge){// Update materials on individual points
var d=a(l),f=d?di(d):0,p=!!f;o.visible=p,p&&(A.hasOwnProperty(d)||(A[d]=new du.MeshLambertMaterial({color:dr(d),transparent:f<1,opacity:f})),o.material=A[d])}}}),e.pointsMerge){// merge points into a single mesh
var u=e.pointsData.length?(dh.mergeGeometries||dh.mergeBufferGeometries)(e.pointsData.map(function(e){var t=e.__threeObj;e.__threeObj=void 0;var n=t.geometry.clone();// apply mesh world transform to vertices
t.updateMatrix(),n.applyMatrix4(t.matrix);// color vertices
var r=da(a(e));return n.setAttribute("color",dA(hW(Array(n.getAttribute("position").count)).map(function(){return r}),4)),n})):new du.BufferGeometry,c=new du.Mesh(u,new du.MeshLambertMaterial({color:16777215,transparent:!0,vertexColors:!0}));c.__globeObjType="points",c.__data=e.pointsData,h3(e.scene),e.scene.add(c)}}}),df=["stroke"],dp=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BufferGeometry:t3,CubicBezierCurve3:ao,Curve:i5,Group:iN,Line:i1,Mesh:nc,NormalBlending:1,QuadraticBezierCurve3:al,ShaderMaterial:nv,TubeGeometry:aK,Vector3:eL},dm=/*@__PURE__*/n(Aq).default||/*@__PURE__*/n(Aq),dg={uniforms:{// dash param defaults, all relative to full length
dashOffset:{value:0},dashSize:{value:1},gapSize:{value:0},dashTranslate:{value:0}// used for animating the dash
},vertexShader:"\n    uniform float dashTranslate; \n\n    attribute vec4 vertexColor;\n    varying vec4 vColor;\n    \n    attribute float vertexRelDistance;\n    varying float vRelDistance;\n\n    void main() {\n      // pass through colors and distances\n      vColor = vertexColor;\n      vRelDistance = vertexRelDistance + dashTranslate;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    uniform float dashOffset; \n    uniform float dashSize;\n    uniform float gapSize; \n    \n    varying vec4 vColor;\n    varying float vRelDistance;\n    \n    void main() {\n      // ignore pixels in the gap\n      if (vRelDistance < dashOffset) discard;\n      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;\n    \n      // set px color: [r, g, b, a], interpolated between vertices \n      gl_FragColor = vColor; \n    }\n  "},dv=st({props:{arcsData:{default:[]},arcStartLat:{default:"startLat"},arcStartLng:{default:"startLng"},arcEndLat:{default:"endLat"},arcEndLng:{default:"endLng"},arcColor:{default:function(){return"#ffffaa"}},// single color, array of colors or color interpolation fn
arcAltitude:{},// in units of globe radius
arcAltitudeAutoScale:{default:.5},// scale altitude proportional to great-arc distance between the two points
arcStroke:{},// in deg
arcCurveResolution:{default:64,triggerUpdate:!1},// how many straight segments in the curve
arcCircularResolution:{default:6,triggerUpdate:!1},// how many slice segments in the tube's circumference
arcDashLength:{default:1},// in units of line length
arcDashGap:{default:0},arcDashInitialGap:{default:0},arcDashAnimateTime:{default:0},// ms
arcsTransitionDuration:{default:1e3,triggerUpdate:!1}// ms
},methods:{pauseAnimation:function(e){var t;null===(t=e.ticker)||void 0===t||t.pause()},resumeAnimation:function(e){var t;null===(t=e.ticker)||void 0===t||t.resume()},_destructor:function(e){var t;null===(t=e.ticker)||void 0===t||t.dispose()}},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e,// Kick-off dash animations
t.ticker=new dm,t.ticker.onTick.add(function(e,n){t.arcsData.filter(function(e){return e.__threeObj&&e.__threeObj.children.length&&e.__threeObj.children[0].material&&e.__threeObj.children[0].__dashAnimateStep}).forEach(function(e){var t=e.__threeObj.children[0],r=t.__dashAnimateStep*n,i=t.material.uniforms.dashTranslate.value%1e9;t.material.uniforms.dashTranslate.value=i+r})})},update:function(e){// Data accessors
var t=Ax(e.arcStartLat),n=Ax(e.arcStartLng),r=Ax(e.arcEndLat),i=Ax(e.arcEndLng),a=Ax(e.arcAltitude),o=Ax(e.arcAltitudeAutoScale),s=Ax(e.arcStroke),A=Ax(e.arcColor),l=Ax(e.arcDashLength),u=Ax(e.arcDashGap),c=Ax(e.arcDashInitialGap),h=Ax(e.arcDashAnimateTime),d=new dp.ShaderMaterial(hO(hO({},dg),{},{transparent:!0,blending:dp.NormalBlending}));dl(e.arcsData,e.scene,{createObj:function(){var e=new dp.Group;// populated in updateObj
return e.__globeObjType="arc",e},updateObj:function(f,p){var m=s(p),g=null!=m;if(!f.children.length||g!==("Mesh"===f.children[0].type)){// create or swap object types
h3(f);var v=g?new dp.Mesh:new dp.Line(new dp.BufferGeometry);v.material=d.clone(),f.add(v)}var _=f.children[0];// set dash uniforms
Object.assign(_.material.uniforms,{dashSize:{value:l(p)},gapSize:{value:u(p)},dashOffset:{value:c(p)}});// set dash animation step
var y=h(p);_.__dashAnimateStep=y>0?1e3/y:0;// calculate vertex colors (to create gradient)
var x=function(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(e instanceof Array||e instanceof Function){var i=e instanceof Array?lf()// array of colors, interpolate at each step
.domain(e.map(function(t,n){return n/(e.length-1)}))// same number of stops as colors
.range(e):e;// already interpolator fn
n=function(e){return da(i(e),!0,!0)}}else{// single color, use constant
var a=da(e,!0,!0);n=function(){return a}}for(var o=[],s=0,A=t+1;s<A;s++)for(var l=n(s/(A-1)),u=0;u<r;u++)o.push(l);return dA(o,4)}(A(p),e.arcCurveResolution,g?e.arcCircularResolution+1:1// num vertices per segment
),b=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=[],i=0,a=e+1;i<a;i++)for(var o=i/(a-1),s=0;s<t;s++)r.push(o);return n&&r.reverse(),dA(r,1)}(e.arcCurveResolution,g?e.arcCircularResolution+1:1,!0// run from end to start, to animate in the correct direction
);_.geometry.setAttribute("vertexColor",x),_.geometry.setAttribute("vertexRelDistance",b);var M=function(t){var n=p.__currentTargetD=t,r=n.stroke,i=//
function(e){var t=e.alt,n=e.altAutoScale,r=e.startLat,i=e.startLng,a=e.endLat,o=e.endLng,s=function(e){var t=hj(e,3),n=t[0],r=h6(t[1],n,t[2]),i=r.x,a=r.y,o=r.z;return new dp.Vector3(i,a,o)},A=[i,r],l=[o,a],u=t;if(null==u&&// by default set altitude proportional to the great-arc distance
(u=sK(A,l)/2*n),!u)return(//
(function(e,t){var n=e.angleTo(t),r=0===n?function(){return e.clone()}// points exactly overlap
:function(r){return new dp.Vector3().addVectors(e.clone().multiplyScalar(Math.sin((1-r)*n)),t.clone().multiplyScalar(Math.sin(r*n))).divideScalar(Math.sin(n))},i=new dp.Curve;return i.getPoint=r,i}).apply(void 0,hW([[].concat(A,[.001]),[].concat(l,[.001])].map(s))));var c=sJ(A,l),h=hj([.25,.75].map(function(e){return[].concat(hW(c(e)),[1.5*u])}),2),d=h[0],f=h[1];//const mPnt = [...interpolate(0.5), altitude * 2];
//curve = new THREE.QuadraticBezierCurve3(...[startPnt, mPnt, endPnt].map(getVec));
return hG(dp.CubicBezierCurve3,hW([A,d,f,l].map(s)))}(function(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}(n,df));g?(_.geometry&&_.geometry.dispose(),_.geometry=new dp.TubeGeometry(i,e.arcCurveResolution,r/2,e.arcCircularResolution),_.geometry.setAttribute("vertexColor",x),_.geometry.setAttribute("vertexRelDistance",b)):_.geometry.setFromPoints(i.getPoints(e.arcCurveResolution))},w={stroke:m,alt:a(p),altAutoScale:+o(p),startLat:+t(p),startLng:+n(p),endLat:+r(p),endLng:+i(p)},E=p.__currentTargetD||Object.assign({},w,{altAutoScale:-.001});Object.keys(w).some(function(e){return E[e]!==w[e]})&&(!e.arcsTransitionDuration||e.arcsTransitionDuration<0?M(w):new sn.Tween(E).to(w,e.arcsTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(M).start())}})}}),d_=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BufferGeometry:t3,Color:tk,DoubleSide:2,Mesh:nc,MeshLambertMaterial:a$,Object3D:tb},dy=Object.assign({},Aa),dx=dy.BufferGeometryUtils||dy,db=st({props:{hexBinPointsData:{default:[]},hexBinPointLat:{default:"lat"},hexBinPointLng:{default:"lng"},hexBinPointWeight:{default:1},hexBinResolution:{default:4},// 0-15. Level 0 partitions the earth in 122 (mostly) hexagonal cells. Each subsequent level sub-divides the previous in roughly 7 hexagons.
hexMargin:{default:.2},// in fraction of diameter
hexTopCurvatureResolution:{default:5},// in angular degrees
hexTopColor:{default:function(){return"#ffffaa"}},hexSideColor:{default:function(){return"#ffffaa"}},hexAltitude:{default:function(e){return .01*e.sumWeight}},// in units of globe radius
hexBinMerge:{default:!1},// boolean. Whether to merge all hex geometries into a single mesh for rendering performance
hexTransitionDuration:{default:1e3,triggerUpdate:!1}// ms
},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e){// Accessors
var t=Ax(e.hexBinPointLat),n=Ax(e.hexBinPointLng),r=Ax(e.hexBinPointWeight),i=Ax(e.hexAltitude),a=Ax(e.hexTopColor),o=Ax(e.hexSideColor),s=Ax(e.hexMargin),A=Object.entries(AT(e.hexBinPointsData.map(function(r){return hO(hO({},r),{},{h3Idx:/**
 * Get the hexagon containing a lat,lon point
 * @static
 * @param  {number} lat Latitude of point
 * @param  {number} lng Longtitude of point
 * @param  {number} res Resolution of hexagons to return
 * @return {H3Index}    H3 index
 * @throws {H3Error}    If input is invalid
 */function(e,t,n){var r=cN._malloc(cX);// Slightly more efficient way to set the memory
cN.HEAPF64.set([e,t].map(c9),r/8);// Read value as a split long
var i=cN._malloc(cW);try{return cV(cj.latLngToCell(r,n,i)),/**
 * Assert H3 index output, throwing an error if null
 * @private
 * @param {H3Index | null} h3Index    Index to validate
 * @return {H3Index}
 * @throws {H3Error}     If invalid
 */function(e){if(!e)throw cH(1002);return e}(c2(i))}finally{cN._free(i),cN._free(r)}}(t(r),n(r),e.hexBinResolution)})}),"h3Idx")).map(function(e){var t=hj(e,2),n=t[0],i=t[1];return{h3Idx:n,points:i,sumWeight:i.reduce(function(e,t){return e+ +r(t)},0)}}),l={};if(dl(A,e.hexBinMerge?new d_.Object3D:e.scene,{createObj://
function(e){var t=new d_.Mesh;t.__hexCenter=c6(e.h3Idx),t.__hexGeoJson=c8(e.h3Idx,!0).reverse();// stitch longitudes at the anti-meridian
var n=t.__hexCenter[1];return t.__hexGeoJson.forEach(function(e){var t=e[0];Math.abs(n-t)>170&&(e[0]+=n>t?360:-360)}),t.__globeObjType="hexbin",t},updateObj:function(t,n){var r=Math.max(0,Math.min(1,+s(n))),A=hj(t.__hexCenter,2),u=A[0],c=A[1],h=0===r?t.__hexGeoJson:t.__hexGeoJson.map(function(e){var t=hj(e,2);return[[t[0],c],[t[1],u]].map(function(e){var t=hj(e,2),n=t[0];return n-(n-t[1])*r})}),d=e.hexTopCurvatureResolution;t.geometry&&t.geometry.dispose(),t.geometry=new cU([h],0,100,!1,!0,!0,d);var f={alt:+i(n)},p=function(e){var n=(t.__currentTargetD=e).alt;t.scale.x=t.scale.y=t.scale.z=1+n;// scale according to altitude
},m=t.__currentTargetD||Object.assign({},f,{alt:-.001});if(Object.keys(f).some(function(e){return m[e]!==f[e]})&&(e.hexBinMerge||!e.hexTransitionDuration||e.hexTransitionDuration<0?p(f):new sn.Tween(m).to(f,e.hexTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(p).start()),!e.hexBinMerge){// Update materials on individual hex points
var g=o(n),v=a(n);[g,v].forEach(function(e){if(!l.hasOwnProperty(e)){var t=di(e);l[e]=new d_.MeshLambertMaterial({color:dr(e),transparent:t<1,opacity:t,side:d_.DoubleSide})}}),t.material=[g,v].map(function(e){return l[e]})}},idAccessor:function(e){return e.h3Idx}}),e.hexBinMerge){// merge points into a single mesh
var u=A.length?(dx.mergeGeometries||dx.mergeBufferGeometries)(A.map(function(e){var t=e.__threeObj;e.__threeObj=void 0;// use non-indexed geometry so that groups can be colored separately, otherwise different groups share vertices
var n=t.geometry.toNonIndexed();// apply mesh world transform to vertices
t.updateMatrix(),n.applyMatrix4(t.matrix);// color vertices
var r=da(a(e)),i=da(o(e)),s=n.getAttribute("position").count,A=n.groups[0].count;return n.setAttribute("color",dA(hW(Array(s)).map(function(e,t){return t>=A?r:i}),4)),n})):new d_.BufferGeometry,c=new d_.Mesh(u,new d_.MeshLambertMaterial({color:16777215,transparent:!0,vertexColors:!0,side:d_.DoubleSide}));c.__globeObjType="hexBinPoints",c.__data=A,h3(e.scene),e.scene.add(c)}}}),dM=function(e){return e*e},dw=Math.sqrt(2*Math.PI),dE=function(e){var t=hj(e,2),n=t[0],r=t[1],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=a.lngAccessor,s=void 0===o?function(e){return e[0]}:o,A=a.latAccessor,l=void 0===A?function(e){return e[1]}:A,u=a.weightAccessor,c=void 0===u?function(){return 1}:u,h=a.bandwidth,d=[n,r],f=h*Math.PI/180;return function(e,t){let n=0;if(void 0===t)for(let t of e)(t=+t)&&(n+=t);else{let r=-1;for(let i of e)(i=+t(i,++r,e))&&(n+=i)}return n}(i.map(function(e){var t,n,r,i,a,o,A,u,h,p=c(e);if(!p)return 0;var m=(t=[s(e),l(e)],n=Math.sqrt,r=Math.cos,i=function(e){return e*Math.PI/180},a=function(e){return dM(Math.sin(e/2))},o=i(d[1]),A=i(t[1]),u=i(d[0]),h=i(t[0]),2*Math.asin(n(a(A-o)+r(o)*r(A)*a(h-u))));return Math.exp(-dM(m/f)/2)/(f*dw)*p}))},dS=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Mesh:nc,MeshLambertMaterial:a$,SphereGeometry:aX},dT=/*#__PURE__*/new WeakSet,dC=/*#__PURE__*/new WeakMap,dR=/*#__PURE__*/new WeakMap,dP=/*#__PURE__*/new WeakMap,dL=/*#__PURE__*/function(){function e(t,r){hI(this,e),h$(this,dT),dT.add(this),h0(this,dC,{writable:!0,value:void 0}),h0(this,dR,{writable:!0,value:void 0}),h0(this,dP,{writable:!0,value:void 0}),hK(this,dC,t),hK(this,dR,/*@__PURE__*/n(he)()),hZ(this,dR).init(t.map(function(e){return[e.x,e.y,e.z]}).flat()),hK(this,dP,(function(e,t,n){if(!t.has(e))throw TypeError("attempted to get private field on non-instance");return n})(this,dT,dD).call(this,h6(0,0),h6(0,Math.min(180,r))))}return hU(e,[{key:"getNearPoints",value:function(e,t,n){var r=this;return hZ(this,dR).intersectSphere(e,t,n,hZ(this,dP)).map(function(e){return hZ(r,dC)[e/3]})}}]),e}();function dD(e,t){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)+Math.pow(e.z-t.z,2))}var dO=function(e){var t,n=(0,Ab.default)("rgb("+Math.max(0,Math.min(255,Math.round(34.61+(t=Math.max(0,Math.min(1,t=e)))*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-14825.05*t)))))))+", "+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+707.56*t)))))))+", "+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-6838.66*t)))))))+")");// turbo, inferno
return n.opacity=Math.cbrt(e),n.formatRgb()},dI=st({props:{heatmapsData:{default:[]},heatmapPoints:{default:function(e){return e}},heatmapPointLat:{default:function(e){return e[0]}},heatmapPointLng:{default:function(e){return e[1]}},heatmapPointWeight:{default:1},heatmapBandwidth:{default:4},// Gaussian kernel bandwidth, in angular degrees
heatmapColorFn:{default:function(){return dO}},heatmapColorSaturation:{default:1.5},// multiplier for color scale max
heatmapBaseAltitude:{default:.01},// in units of globe radius
heatmapTopAltitude:{},// in units of globe radius
heatmapsTransitionDuration:{default:0,triggerUpdate:!1}// ms
},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e){// Accessors
var t=Ax(e.heatmapPoints),n=Ax(e.heatmapPointLat),r=Ax(e.heatmapPointLng),i=Ax(e.heatmapPointWeight),a=Ax(e.heatmapBandwidth),o=Ax(e.heatmapColorFn),s=Ax(e.heatmapColorSaturation),A=Ax(e.heatmapBaseAltitude),l=Ax(e.heatmapTopAltitude);dl(e.heatmapsData,e.scene,{createObj:function(e){var t=new dS.Mesh(new dS.SphereGeometry(100),new dS.MeshLambertMaterial({vertexColors:!0,transparent:!0}));return t.__globeObjType="heatmap",t},updateObj:function(u,c){// Accessors
var h=a(c),d=o(c),f=s(c),p=A(c),m=l(c),g=t(c).map(function(e){var t=n(e),a=r(e),o=h6(t,a);return{x:o.x,y:o.y,z:o.z,lat:t,lng:a,weight:i(e)}}),v=Math.ceil(360/(Math.max(.1,h/3.5)||-1));u.geometry.parameters.widthSegments!==v&&(u.geometry.dispose(),u.geometry=new dS.SphereGeometry(100,v,v/2));// Get vertex polar coordinates
var _=function(e){for(var t=e.itemSize,n=[],r=0;r<e.count;r++)n.push(e.array.slice(r*t,(r+1)*t));return n}(u.geometry.getAttribute("position")),y=_.map(function(e){var t=hj(e,3),n=h8({x:t[0],y:t[1],z:t[2]});return[n.lng,n.lat]}),x=new dL(g,3.5*h),b=y.map(function(e,t){var n=hj(_[t],3),r=n[0],i=n[1],a=n[2];return dE(e,x.getNearPoints(r,i,a),{latAccessor:function(e){return e.lat},lngAccessor:function(e){return e.lng},weightAccessor:function(e){return e.weight},bandwidth:h})}),M=function(e){var t=u.__currentTargetD=e,n=t.kdeVals,r=t.topAlt,i=t.saturation,a=function(e,t){let n;if(void 0===t)for(let t of e)null!=t&&(n<t||void 0===n&&t>=t)&&(n=t);else{let r=-1;for(let i of e)null!=(i=t(i,++r,e))&&(n<i||void 0===n&&i>=i)&&(n=i)}return n}(n.map(Math.abs))||1e-15;// Set vertex colors
u.geometry.setAttribute("color",dA(n.map(function(e){return da(d(e/a*i))}),4));// Set altitudes
var o=lf([0,a],[p,r||p]);u.geometry.setAttribute("position",dA(n.map(function(e,t){var n=hj(y[t],2),r=n[0],i=h6(n[1],r,o(Math.abs(e)));return[i.x,i.y,i.z]}),3))},w={kdeVals:b,topAlt:m,saturation:f},E=u.__currentTargetD||Object.assign({},w,{kdeVals:b.map(function(){return 0}),topAlt:m?p:m,saturation:.5});// do not interpolate between different length arrays
E.kdeVals.length!==b.length&&(E.kdeVals=b.slice()),Object.keys(w).some(function(e){return E[e]!==w[e]})&&(!e.heatmapsTransitionDuration||e.heatmapsTransitionDuration<0?M(w):new sn.Tween(E).to(w,e.heatmapsTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(M).start())}})}}),dq=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{DoubleSide:2,Group:iN,LineBasicMaterial:iY,LineSegments:i4,Mesh:nc,MeshBasicMaterial:tH},dU=st({props:{polygonsData:{default:[]},polygonGeoJsonGeometry:{default:"geometry"},polygonSideColor:{default:function(){return"#ffffaa"}},polygonSideMaterial:{},polygonCapColor:{default:function(){return"#ffffaa"}},polygonCapMaterial:{},polygonStrokeColor:{},polygonAltitude:{default:.01},// in units of globe radius
polygonCapCurvatureResolution:{default:5},// in angular degrees
polygonsTransitionDuration:{default:1e3,triggerUpdate:!1}// ms
},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e){// Data accessors
var t=Ax(e.polygonGeoJsonGeometry),n=Ax(e.polygonAltitude),r=Ax(e.polygonCapCurvatureResolution),i=Ax(e.polygonCapColor),a=Ax(e.polygonCapMaterial),o=Ax(e.polygonSideColor),s=Ax(e.polygonSideMaterial),A=Ax(e.polygonStrokeColor),l=[];e.polygonsData.forEach(function(e){var u={data:e,capColor:i(e),capMaterial:a(e),sideColor:o(e),sideMaterial:s(e),strokeColor:A(e),altitude:+n(e),capCurvatureResolution:+r(e)},c=t(e),h=e.__id||"".concat(Math.round(1e9*Math.random()));e.__id=h,"Polygon"===c.type?l.push(hO({id:"".concat(h,"_0"),coords:c.coordinates},u)):"MultiPolygon"===c.type?l.push.apply(l,hW(c.coordinates.map(function(e,t){return hO({id:"".concat(h,"_").concat(t),coords:e},u)}))):console.warn("Unsupported GeoJson geometry type: ".concat(c.type,". Skipping geometry..."))}),dl(l,e.scene,{idAccessor:function(e){return e.id},createObj:function(){var e=new dq.Group;return e.__defaultSideMaterial=new dq.MeshBasicMaterial({side:dq.DoubleSide,depthWrite:!0}),e.__defaultCapMaterial=new dq.MeshBasicMaterial({side:dq.DoubleSide,depthWrite:!0}),// conic geometry
e.add(new dq.Mesh(void 0,[e.__defaultSideMaterial,// side material
e.__defaultCapMaterial// cap material
])),// polygon stroke
e.add(new dq.LineSegments(void 0,new dq.LineBasicMaterial)),e.__globeObjType="polygon",e},updateObj:function(t,n){var r=n.coords,i=n.capColor,a=n.capMaterial,o=n.sideColor,s=n.sideMaterial,A=n.strokeColor,l=n.altitude,u=n.capCurvatureResolution,c=hj(t.children,2),h=c[0],d=c[1],f=!!A;if(d.visible=f,!function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){return function(e,t){return e===t}};return Object.entries(t).every(function(t){var r=hj(t,2),i=r[0],a=r[1];return e.hasOwnProperty(i)&&n(i)(e[i],a)})}(h.geometry.parameters||{},{polygonGeoJson:r,curvatureResolution:u})&&(h.geometry&&h.geometry.dispose(),h.geometry=new cU(r,0,100,!1,!0,!0,u)),f&&(!d.geometry.parameters||d.geometry.parameters.geoJson.coordinates!==r||d.geometry.parameters.resolution!==u)&&(d.geometry&&d.geometry.dispose(),d.geometry=new s7({type:"Polygon",coordinates:r},100,u)),// replace side/cap materials if defined
h.material[0]=s||t.__defaultSideMaterial,h.material[1]=a||t.__defaultCapMaterial,// update default material colors
[!s&&o,!a&&i].forEach(function(e,t){if(e){// conic object
var n=h.material[t],r=di(e);n.color.set(dr(e)),n.transparent=r<1,n.opacity=r}// skip custom materials
}),f){// stroke object
var p=d.material,m=di(A);p.color.set(dr(A)),p.transparent=m<1,p.opacity=m}var g={alt:l},v=function(e){var n=(t.__currentTargetD=e).alt;h.scale.x=h.scale.y=h.scale.z=1+n,f&&(d.scale.x=d.scale.y=d.scale.z=1+n+1e-4)},_=t.__currentTargetD||Object.assign({},g,{alt:-.001});Object.keys(g).some(function(e){return _[e]!==g[e]})&&(!e.polygonsTransitionDuration||e.polygonsTransitionDuration<0||_.alt===g.alt?v(g):new sn.Tween(_).to(g,e.polygonsTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(v).start())}})}}),dN=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BufferGeometry:t3,CircleGeometry:am,DoubleSide:2,Mesh:nc,MeshLambertMaterial:a$,Vector3:eL},dB=Object.assign({},Aa),dk=dB.BufferGeometryUtils||dB,dF=st({props:{hexPolygonsData:{default:[]},hexPolygonGeoJsonGeometry:{default:"geometry"},hexPolygonColor:{default:function(){return"#ffffaa"}},hexPolygonAltitude:{default:.001},// in units of globe radius
hexPolygonResolution:{default:3},// 0-15. Level 0 partitions the earth in 122 (mostly) hexagonal cells. Each subsequent level sub-divides the previous in roughly 7 hexagons.
hexPolygonMargin:{default:.2},// in fraction of hex diameter
hexPolygonUseDots:{default:!1},// if points should be circular instead of hexagonal
hexPolygonCurvatureResolution:{default:5},// in angular degrees, only relevant for hex tops
hexPolygonDotResolution:{default:12},// how many slice segments in the dot circle's circumference
hexPolygonsTransitionDuration:{default:0,triggerUpdate:!1}// ms
},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e){// Accessors
var t=Ax(e.hexPolygonGeoJsonGeometry),n=Ax(e.hexPolygonColor),r=Ax(e.hexPolygonAltitude),i=Ax(e.hexPolygonResolution),a=Ax(e.hexPolygonMargin),o=Ax(e.hexPolygonUseDots),s=Ax(e.hexPolygonCurvatureResolution),A=Ax(e.hexPolygonDotResolution);dl(e.hexPolygonsData,e.scene,{createObj:function(e){var t=new dN.Mesh(void 0,new dN.MeshLambertMaterial({side:dN.DoubleSide}));return t.__globeObjType="hexPolygon",t},updateObj:function(l,u){var c=t(u),h=i(u),d=r(u),f=Math.max(0,Math.min(1,+a(u))),p=o(u),m=s(u),g=A(u),v=n(u),_=di(v);l.material.color.set(dr(v)),l.material.transparent=_<1,l.material.opacity=_;var y={alt:d,margin:f,curvatureResolution:m},x={geoJson:c,h3Res:h},b=l.__currentTargetD||Object.assign({},y,{alt:-.001}),M=l.__currentMemD||x;if(Object.keys(y).some(function(e){return b[e]!==y[e]})||Object.keys(x).some(function(e){return M[e]!==x[e]})){l.__currentMemD=x;var w=[];"Polygon"===c.type?c7(c.coordinates,h,!0).forEach(function(e){return w.push(e)}):"MultiPolygon"===c.type?c.coordinates.forEach(function(e){return c7(e,h,!0).forEach(function(e){return w.push(e)})}):console.warn("Unsupported GeoJson geometry type: ".concat(c.type,". Skipping geometry..."));var E=w.map(function(e){var t=c6(e),n=c8(e,!0).reverse(),r=t[1];return n.forEach(function(e){var t=e[0];Math.abs(r-t)>170&&(e[0]+=r>t?360:-360)}),{h3Idx:e,hexCenter:t,hexGeoJson:n}}),S=function(e){var t=l.__currentTargetD=e,n=t.alt,r=t.margin,i=t.curvatureResolution;l.geometry&&l.geometry.dispose(),l.geometry=E.length?(dk.mergeGeometries||dk.mergeBufferGeometries)(E.map(function(e){var t=hj(e.hexCenter,2),a=t[0],o=t[1];if(!p)return new cU([0===r?e.hexGeoJson:e.hexGeoJson.map(function(e){var t=hj(e,2);return[[t[0],o],[t[1],a]].map(function(e){var t=hj(e,2),n=t[0];return n-(n-t[1])*r})})],100,100*(1+n),!1,!0,!1,i);var s=h6(a,o,n),A=h6(e.hexGeoJson[0][1],e.hexGeoJson[0][0],n),l=new am(.85*(1-r)*new dN.Vector3(s.x,s.y,s.z).distanceTo(new dN.Vector3(A.x,A.y,A.z)),g);return l.rotateX(h7(-a)),l.rotateY(h7(o)),l.translate(s.x,s.y,s.z),l})):new dN.BufferGeometry};!e.hexPolygonsTransitionDuration||e.hexPolygonsTransitionDuration<0?S(y):new sn.Tween(b).to(y,e.hexPolygonsTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(S).start()}}})}}),dz=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Vector3:eL},dG=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BufferGeometry:t3,Color:tk,Group:iN,Line:i1,NormalBlending:1,ShaderMaterial:nv,Vector3:eL},dH=/*@__PURE__*/n(Aq).default||/*@__PURE__*/n(Aq),dV={uniforms:{// dash param defaults, all relative to full length
dashOffset:{value:0},dashSize:{value:1},gapSize:{value:0},dashTranslate:{value:0}// used for animating the dash
},vertexShader:"\n    uniform float dashTranslate;\n\n    attribute vec4 vertexColor;\n    varying vec4 vColor;\n\n    attribute float vertexRelDistance;\n    varying float vRelDistance;\n\n    void main() {\n      // pass through colors and distances\n      vColor = vertexColor;\n      vRelDistance = vertexRelDistance + dashTranslate;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  ",fragmentShader:"\n    uniform float dashOffset;\n    uniform float dashSize;\n    uniform float gapSize;\n\n    varying vec4 vColor;\n    varying float vRelDistance;\n\n    void main() {\n      // ignore pixels in the gap\n      if (vRelDistance < dashOffset) discard;\n      if (mod(vRelDistance - dashOffset, dashSize + gapSize) > dashSize) discard;\n\n      // set px color: [r, g, b, a], interpolated between vertices\n      gl_FragColor = vColor;\n    }\n  "},dj=st({props:{pathsData:{default:[]},pathPoints:{default:function(e){return e}},pathPointLat:{default:function(e){return e[0]}},pathPointLng:{default:function(e){return e[1]}},pathPointAlt:{default:.001},pathResolution:{default:2},// in deg
pathColor:{default:function(){return"#ffffaa"}},// single color, array of colors or color interpolation fn
pathStroke:{},// in deg
pathDashLength:{default:1},// in units of line length
pathDashGap:{default:0},pathDashInitialGap:{default:0},pathDashAnimateTime:{default:0},// ms
pathTransitionDuration:{default:1e3,triggerUpdate:!1},// ms
rendererSize:{}// necessary to set correct fatline proportions
},methods:{pauseAnimation:function(e){var t;null===(t=e.ticker)||void 0===t||t.pause()},resumeAnimation:function(e){var t;null===(t=e.ticker)||void 0===t||t.resume()},_destructor:function(e){var t;null===(t=e.ticker)||void 0===t||t.dispose()}},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e,// Kick-off dash animations
t.ticker=new dH,t.ticker.onTick.add(function(e,n){t.pathsData.filter(function(e){return e.__threeObj&&e.__threeObj.children.length&&e.__threeObj.children[0].material&&e.__threeObj.children[0].__dashAnimateStep}).forEach(function(e){var t=e.__threeObj.children[0],r=t.__dashAnimateStep*n;if("Line"===t.type){var i=t.material.uniforms.dashTranslate.value%1e9;// reset after 1B loops
t.material.uniforms.dashTranslate.value=i+r}else if("Line2"===t.type){for(// fatline
var a=t.material.dashOffset-r,o=t.material.dashSize+t.material.gapSize;a<=-o;)a+=o;// cycle within dash length
t.material.dashOffset=a}})})},update:function(e){// Data accessors
var t=Ax(e.pathPoints),n=Ax(e.pathPointLat),r=Ax(e.pathPointLng),i=Ax(e.pathPointAlt),a=Ax(e.pathStroke),o=Ax(e.pathColor),s=Ax(e.pathDashLength),A=Ax(e.pathDashGap),l=Ax(e.pathDashInitialGap),u=Ax(e.pathDashAnimateTime),c=new dG.ShaderMaterial(hO(hO({},dV),{},{transparent:!0,blending:dG.NormalBlending}));function h(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=!(arguments.length>3)||void 0===arguments[3]||arguments[3];if(e instanceof Array||e instanceof Function){var a=e instanceof Array?lf()// array of colors, interpolate at each step
.domain(e.map(function(t,n){return n/(e.length-1)}))// same number of stops as colors
.range(e):e;// already interpolator fn
n=function(e){return da(a(e),i,!0)}}else{// single color, use constant
var o=da(e,i,!0);n=function(){return o}}for(var s=[],A=0,l=t+1;A<l;A++)for(var u=n(A/(l-1)),c=0;c<r;c++)s.push(u);return dA(s,i?4:3)}dl(e.pathsData,e.scene,{createObj:function(){var e=new dG.Group;// populated in updateObj
return e.__globeObjType="path",e},updateObj:function(d,f){var p,m,g,v,_=a(f),y=null!=_;if(!d.children.length||y===("Line"===d.children[0].type)){// create or swap object types
h3(d);var x=y?new hP(new hR,new hd):new dG.Line(new dG.BufferGeometry,c.clone()// Separate material instance per object to have dedicated uniforms (but shared shaders)
);d.add(x)}var b=d.children[0],M=(E=t(f),S=e.pathResolution,T=function(e,t,n){for(var r=[],i=1;i<=n;i++)r.push(e+(t-e)*i/(n+1));return r},(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=[],r=null;return e.forEach(function(e){if(r){// cross the anti-meridian if that's the closest distance between points
for(;Math.abs(r[1]-e[1])>180;)r[1]+=360*(r[1]<e[1]?1:-1);var i=Math.sqrt(Math.pow(e[0]-r[0],2)+Math.pow(e[1]-r[1],2));if(i>t)for(var a=Math.floor(i/t),o=T(r[0],e[0],a),s=T(r[1],e[1],a),A=T(r[2],e[2],a),l=0,u=o.length;l<u;l++)n.push([o[l],s[l],A[l]])}n.push(r=e)}),n})(E.map(function(e){return[n(e),r(e),i(e)]}),S).map(function(e){var t=hj(e,3),n=h6(t[0],t[1],t[2]),r=n.x,i=n.y,a=n.z;return new dG.Vector3(r,i,a)})),w=u(f);if(b.__dashAnimateStep=w>0?1e3/w:0,y){// fat lines
b.material.resolution=e.rendererSize;// set dash styling
var E,S,T,C,R,P=s(f),L=A(f),D=l(f);b.material.dashed=L>0,// temp hack to activate line dashes
b.material.dashed?b.material.defines.USE_DASH="":delete b.material.defines.USE_DASH,b.material.dashed&&(b.material.dashScale=1/(R=0,M.forEach(function(e){C&&(R+=C.distanceTo(e)),C=e}),R),b.material.dashSize=P,b.material.gapSize=L,b.material.dashOffset=-D);// set line colors
var O=o(f);if(O instanceof Array){// calculate vertex colors (to create gradient)
var I=h(o(f),M.length-1,1,!1);b.geometry.setColors(I.array),b.material.vertexColors=!0}else{var q=di(O);b.material.color=new dG.Color(dr(O)),b.material.transparent=q<1,b.material.opacity=q,b.material.vertexColors=!1}b.material.needsUpdate=!0}else{// set dash uniforms
Object.assign(b.material.uniforms,{dashSize:{value:s(f)},gapSize:{value:A(f)},dashOffset:{value:l(f)}});// calculate vertex colors (to create gradient)
var U=h(o(f),M.length// numSegments
),N=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=[],i=0,a=e+1;i<a;i++)for(var o=i/(a-1),s=0;s<t;s++)r.push(o);return n&&r.reverse(),dA(r,1)}(M.length,1,!0// run from end to start, to animate in the correct direction
);b.geometry.setAttribute("vertexColor",U),b.geometry.setAttribute("vertexRelDistance",N)}// animate from start to finish by default
var B=(p=f.__currentTargetD&&f.__currentTargetD.points||[M[0]],m=function(e,t){var n=e[e.length-1];return[].concat(hW(e),hW(hW(Array(t-e.length)).map(function(){return n})))},g=Math.max(p.length,M.length),v=A0.apply(void 0,hW([p,M].map(function(e){return e.map(function(e){return[e.x,e.y,e.z]})}).map(function(e){return m(e,g)}))),function(e){return 0===e?p:1===e?M:v(e).map(function(e){var t=hj(e,3),n=t[0],r=t[1],i=t[2];return new dz.Vector3(n,r,i)})}),k=function(e){var t,n=f.__currentTargetD=e,r=n.stroke,i=n.interpolK,a=f.__currentTargetD.points=B(i);y?(b.geometry.setPositions((t=[]).concat.apply(t,hW(a.map(function(e){return[e.x,e.y,e.z]})))),b.material.linewidth=r,// necessary for dashed lines
b.material.dashed&&b.computeLineDistances()):(b.geometry.setFromPoints(a),b.geometry.computeBoundingSphere())},F={stroke:_,interpolK:1},z=Object.assign({},f.__currentTargetD||F,{interpolK:0});Object.keys(F).some(function(e){return z[e]!==F[e]})&&(!e.pathTransitionDuration||e.pathTransitionDuration<0?k(F):new sn.Tween(z).to(F,e.pathTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(k).start())}})}}),dW=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Euler:ts,Mesh:nc,MeshLambertMaterial:a$,SphereGeometry:aX},dX=st({props:{tilesData:{default:[]},tileLat:{default:"lat"},// tile centroid
tileLng:{default:"lng"},tileAltitude:{default:.01},// in units of globe radius
tileWidth:{default:1},// in lng degrees
tileHeight:{default:1},// in lat degrees
tileUseGlobeProjection:{default:!0},// whether to size tiles relative to the globe coordinate system, or independently
tileMaterial:{default:function(){return new dW.MeshLambertMaterial({color:"#ffbb88",opacity:.4,transparent:!0})}},tileCurvatureResolution:{default:5},// in angular degrees
tilesTransitionDuration:{default:1e3,triggerUpdate:!1}// ms
},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e){// Data accessors
var t=Ax(e.tileLat),n=Ax(e.tileLng),r=Ax(e.tileAltitude),i=Ax(e.tileWidth),a=Ax(e.tileHeight),o=Ax(e.tileUseGlobeProjection),s=Ax(e.tileMaterial),A=Ax(e.tileCurvatureResolution);dl(e.tilesData,e.scene,{createObj:function(){var e=new dW.Mesh;return e.__globeObjType="tile",e},updateObj:function(l,u){l.material=s(u);// set material
var c=o(u),h=A(u),d=function(e){var t=l.__currentTargetD=e,n=t.lat,r=t.lng,i=t.alt,a=t.width,o=t.height,s=dQ(r),A=dQ(-n);l.geometry&&l.geometry.dispose(),l.geometry=new dW.SphereGeometry(100*(1+i),Math.ceil(a/(h||-1)),Math.ceil(o/(h||-1)),dQ(90-a/2)+(c?s:0),dQ(a),dQ(90-o/2)+(c?A:0),dQ(o)),c||l.setRotationFromEuler(new dW.Euler(A,s,0,"YXZ"))},f={lat:+t(u),lng:+n(u),alt:+r(u),width:+i(u),height:+a(u)},p=l.__currentTargetD||Object.assign({},f,{width:0,height:0});Object.keys(f).some(function(e){return p[e]!==f[e]})&&(!e.tilesTransitionDuration||e.tilesTransitionDuration<0?d(f):new sn.Tween(p).to(f,e.tilesTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(d).start())}})}}),dQ=function(e){return e*Math.PI/180},dY=hO(hO({},window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{CircleGeometry:am,DoubleSide:2,Group:iN,Mesh:nc,MeshLambertMaterial:a$,TextGeometry:hL,Vector3:eL}),{},{Font://
class{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){let n=[],r=function(e,t,n){let r=Array.from(e),i=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,o=[],s=0,A=0;for(let e=0;e<r.length;e++){let t=r[e];if("\n"===t)s=0,A-=a;else{let e=function(e,t,n,r,i){let a,o,s,A,l,u,c,h;let d=i.glyphs[e]||i.glyphs["?"];if(!d){console.error('THREE.Font: character "'+e+'" does not exists in font family '+i.familyName+".");return}let f=new oP;if(d.o){let e=d._cachedOutline||(d._cachedOutline=d.o.split(" "));for(let i=0,d=e.length;i<d;){let d=e[i++];switch(d){case"m":a=e[i++]*t+n,o=e[i++]*t+r,f.moveTo(a,o);break;case"l":a=e[i++]*t+n,o=e[i++]*t+r,f.lineTo(a,o);break;case"q":s=e[i++]*t+n,A=e[i++]*t+r,l=e[i++]*t+n,u=e[i++]*t+r,f.quadraticCurveTo(l,u,s,A);break;case"b":s=e[i++]*t+n,A=e[i++]*t+r,l=e[i++]*t+n,u=e[i++]*t+r,c=e[i++]*t+n,h=e[i++]*t+r,f.bezierCurveTo(l,u,c,h,s,A)}}}return{offsetX:d.ha*t,path:f}}(t,i,s,A,n);s+=e.offsetX,o.push(e.path)}}return o}(e,t,this.data);for(let e=0,t=r.length;e<t;e++)n.push(...r[e].toShapes());return n}},TextGeometry:hL}),dZ=st({props:{labelsData:{default:[]},labelLat:{default:"lat"},labelLng:{default:"lng"},labelAltitude:{default:0},// in units of globe radius
labelText:{default:"text"},labelSize:{default:.5},// text height in deg
labelTypeFace:{default:{glyphs:{0:{x_min:73,x_max:715,ha:792,o:"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 "},1:{x_min:215.671875,x_max:574,ha:792,o:"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 "},2:{x_min:59,x_max:731,ha:792,o:"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 "},3:{x_min:54,x_max:737,ha:792,o:"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 "},4:{x_min:48,x_max:742.453125,ha:792,o:"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 "},5:{x_min:54.171875,x_max:738,ha:792,o:"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 "},6:{x_min:53,x_max:739,ha:792,o:"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 "},7:{x_min:58.71875,x_max:730.953125,ha:792,o:"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 "},8:{x_min:55,x_max:736,ha:792,o:"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 "},9:{x_min:53,x_max:739,ha:792,o:"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 "},ο:{x_min:0,x_max:712,ha:815,o:"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 "},S:{x_min:0,x_max:788,ha:890,o:"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 "},"\xa6":{x_min:343,x_max:449,ha:792,o:"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"/":{x_min:183.25,x_max:608.328125,ha:792,o:"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 "},Τ:{x_min:-.4375,x_max:777.453125,ha:839,o:"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 "},y:{x_min:0,x_max:684.78125,ha:771,o:"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 "},Π:{x_min:0,x_max:803,ha:917,o:"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 "},ΐ:{x_min:-111,x_max:339,ha:361,o:"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 "},g:{x_min:0,x_max:686,ha:838,o:"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 "},"\xb2":{x_min:0,x_max:442,ha:539,o:"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 "},"–":{x_min:0,x_max:705.5625,ha:803,o:"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},Κ:{x_min:0,x_max:819.5625,ha:893,o:"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},ƒ:{x_min:-46.265625,x_max:392,ha:513,o:"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 "},e:{x_min:0,x_max:714,ha:813,o:"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 "},ό:{x_min:0,x_max:712,ha:815,o:"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 "},J:{x_min:0,x_max:588,ha:699,o:"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 "},"\xbb":{x_min:-1,x_max:503,ha:601,o:"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 "},"\xa9":{x_min:-3,x_max:1008,ha:1106,o:"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 "},ώ:{x_min:0,x_max:922,ha:1030,o:"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 "},"^":{x_min:193.0625,x_max:598.609375,ha:792,o:"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 "},"\xab":{x_min:0,x_max:507.203125,ha:604,o:"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 "},D:{x_min:0,x_max:828,ha:935,o:"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 "},"∙":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},ÿ:{x_min:0,x_max:47,ha:125,o:"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 "},w:{x_min:0,x_max:1009.71875,ha:1100,o:"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 "},$:{x_min:0,x_max:700,ha:793,o:"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 "},"\\":{x_min:-.015625,x_max:425.0625,ha:522,o:"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 "},µ:{x_min:0,x_max:697.21875,ha:747,o:"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 "},Ι:{x_min:42,x_max:181,ha:297,o:"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 "},Ύ:{x_min:0,x_max:1144.5,ha:1214,o:"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"’":{x_min:0,x_max:139,ha:236,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},Ν:{x_min:0,x_max:801,ha:915,o:"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 "},"-":{x_min:8.71875,x_max:350.390625,ha:478,o:"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 "},Q:{x_min:0,x_max:968,ha:1072,o:"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 "},ς:{x_min:1,x_max:676.28125,ha:740,o:"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 "},M:{x_min:0,x_max:954,ha:1067,o:"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 "},Ψ:{x_min:0,x_max:1006,ha:1094,o:"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 "},C:{x_min:0,x_max:886,ha:944,o:"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 "},"!":{x_min:0,x_max:138,ha:236,o:"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 "},"{":{x_min:0,x_max:480.5625,ha:578,o:"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 "},X:{x_min:-.015625,x_max:854.15625,ha:940,o:"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 "},"#":{x_min:0,x_max:963.890625,ha:1061,o:"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 "},ι:{x_min:42,x_max:284,ha:361,o:"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 "},Ά:{x_min:0,x_max:906.953125,ha:982,o:"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},")":{x_min:0,x_max:318,ha:415,o:"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 "},ε:{x_min:0,x_max:634.71875,ha:714,o:"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 "},Δ:{x_min:0,x_max:952.78125,ha:1028,o:"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 "},"}":{x_min:0,x_max:481,ha:578,o:"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 "},"‰":{x_min:-3,x_max:1672,ha:1821,o:"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 "},a:{x_min:0,x_max:698.609375,ha:794,o:"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 "},"—":{x_min:0,x_max:941.671875,ha:1039,o:"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 "},"=":{x_min:8.71875,x_max:780.953125,ha:792,o:"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 "},N:{x_min:0,x_max:801,ha:914,o:"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 "},ρ:{x_min:0,x_max:712,ha:797,o:"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 "},"\xaf":{x_min:0,x_max:941.671875,ha:938,o:"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 "},Z:{x_min:0,x_max:779,ha:849,o:"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 "},u:{x_min:0,x_max:617,ha:729,o:"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 "},k:{x_min:0,x_max:612.484375,ha:697,o:"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 "},Η:{x_min:0,x_max:803,ha:917,o:"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},Α:{x_min:0,x_max:906.953125,ha:985,o:"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},s:{x_min:0,x_max:604,ha:697,o:"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 "},B:{x_min:0,x_max:778,ha:876,o:"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 "},"…":{x_min:0,x_max:614,ha:708,o:"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 "},"?":{x_min:0,x_max:607,ha:704,o:"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 "},H:{x_min:0,x_max:803,ha:915,o:"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},ν:{x_min:0,x_max:675,ha:761,o:"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 "},c:{x_min:1,x_max:701.390625,ha:775,o:"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 "},"\xb6":{x_min:0,x_max:566.671875,ha:678,o:"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 "},β:{x_min:0,x_max:660,ha:745,o:"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 "},Μ:{x_min:0,x_max:954,ha:1068,o:"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 "},Ό:{x_min:.109375,x_max:1120,ha:1217,o:"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},Ή:{x_min:0,x_max:1158,ha:1275,o:"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"•":{x_min:0,x_max:663.890625,ha:775,o:"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 "},"\xa5":{x_min:.1875,x_max:819.546875,ha:886,o:"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 "},"(":{x_min:0,x_max:318.0625,ha:415,o:"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 "},U:{x_min:0,x_max:796,ha:904,o:"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 "},γ:{x_min:.5,x_max:744.953125,ha:822,o:"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 "},α:{x_min:0,x_max:765.5625,ha:809,o:"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 "},F:{x_min:0,x_max:683.328125,ha:717,o:"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 "},"\xad":{x_min:0,x_max:705.5625,ha:803,o:"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},":":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},Χ:{x_min:0,x_max:854.171875,ha:935,o:"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 "},"*":{x_min:116,x_max:674,ha:792,o:"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 "},"†":{x_min:0,x_max:777,ha:835,o:"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 "},"\xb0":{x_min:0,x_max:347,ha:444,o:"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 "},V:{x_min:0,x_max:862.71875,ha:940,o:"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 "},Ξ:{x_min:0,x_max:734.71875,ha:763,o:"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 "},"\xa0":{x_min:0,x_max:0,ha:853},Ϋ:{x_min:.328125,x_max:819.515625,ha:889,o:"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 "},"”":{x_min:0,x_max:347,ha:454,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 "},"@":{x_min:0,x_max:1260,ha:1357,o:"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 "},Ί:{x_min:0,x_max:499,ha:613,o:"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 "},i:{x_min:14,x_max:136,ha:275,o:"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 "},Β:{x_min:0,x_max:778,ha:877,o:"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 "},υ:{x_min:0,x_max:617,ha:725,o:"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 "},"]":{x_min:0,x_max:275,ha:372,o:"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 "},m:{x_min:0,x_max:1019,ha:1128,o:"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 "},χ:{x_min:8.328125,x_max:780.5625,ha:815,o:"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 "},ί:{x_min:42,x_max:326.71875,ha:361,o:"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 "},Ζ:{x_min:0,x_max:779.171875,ha:850,o:"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 "},R:{x_min:0,x_max:781.953125,ha:907,o:"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 "},o:{x_min:0,x_max:713,ha:821,o:"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 "},K:{x_min:0,x_max:819.46875,ha:906,o:"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},",":{x_min:0,x_max:142,ha:239,o:"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 "},d:{x_min:0,x_max:683,ha:796,o:"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 "},"\xa8":{x_min:-109,x_max:247,ha:232,o:"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 "},E:{x_min:0,x_max:736.109375,ha:789,o:"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},Y:{x_min:0,x_max:820,ha:886,o:"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 "},'"':{x_min:0,x_max:299,ha:396,o:"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"‹":{x_min:17.984375,x_max:773.609375,ha:792,o:"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"„":{x_min:0,x_max:364,ha:467,o:"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 "},δ:{x_min:1,x_max:710,ha:810,o:"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 "},έ:{x_min:0,x_max:634.71875,ha:714,o:"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 "},ω:{x_min:0,x_max:922,ha:1031,o:"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 "},"\xb4":{x_min:0,x_max:96,ha:251,o:"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"\xb1":{x_min:11,x_max:781,ha:792,o:"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 "},"|":{x_min:343,x_max:449,ha:792,o:"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},ϋ:{x_min:0,x_max:617,ha:725,o:"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 "},"\xa7":{x_min:0,x_max:593,ha:690,o:"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 "},b:{x_min:0,x_max:685,ha:783,o:"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 "},q:{x_min:0,x_max:683,ha:876,o:"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 "},Ω:{x_min:-.171875,x_max:969.5625,ha:1068,o:"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 "},ύ:{x_min:0,x_max:617,ha:725,o:"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 "},z:{x_min:-.015625,x_max:613.890625,ha:697,o:"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 "},"™":{x_min:0,x_max:894,ha:1e3,o:"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 "},ή:{x_min:.78125,x_max:697,ha:810,o:"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 "},Θ:{x_min:0,x_max:960,ha:1056,o:"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 "},"\xae":{x_min:-3,x_max:1008,ha:1106,o:"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 "},"~":{x_min:0,x_max:833,ha:931,o:"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 "},Ε:{x_min:0,x_max:736.21875,ha:778,o:"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},"\xb3":{x_min:0,x_max:450,ha:547,o:"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 "},"[":{x_min:0,x_max:273.609375,ha:371,o:"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 "},L:{x_min:0,x_max:645.828125,ha:696,o:"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 "},σ:{x_min:0,x_max:803.390625,ha:894,o:"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 "},ζ:{x_min:0,x_max:573,ha:642,o:"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 "},θ:{x_min:0,x_max:674,ha:778,o:"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 "},Ο:{x_min:0,x_max:958,ha:1054,o:"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 "},Γ:{x_min:0,x_max:705.28125,ha:749,o:"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 "}," ":{x_min:0,x_max:0,ha:375},"%":{x_min:-3,x_max:1089,ha:1186,o:"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 "},P:{x_min:0,x_max:726,ha:806,o:"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 "},Έ:{x_min:0,x_max:1078.21875,ha:1118,o:"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},Ώ:{x_min:.125,x_max:1136.546875,ha:1235,o:"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 "},_:{x_min:0,x_max:705.5625,ha:803,o:"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 "},Ϊ:{x_min:-110,x_max:246,ha:275,o:"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 "},"+":{x_min:23,x_max:768,ha:792,o:"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 "},"\xbd":{x_min:0,x_max:1050,ha:1149,o:"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 "},Ρ:{x_min:0,x_max:720,ha:783,o:"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 "},"'":{x_min:0,x_max:139,ha:236,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},ª:{x_min:0,x_max:350,ha:397,o:"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 "},"΅":{x_min:0,x_max:450,ha:553,o:"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 "},T:{x_min:0,x_max:777,ha:835,o:"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 "},Φ:{x_min:0,x_max:915,ha:997,o:"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 "},"⁋":{x_min:0,x_max:0,ha:694},j:{x_min:-77.78125,x_max:167,ha:349,o:"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 "},Σ:{x_min:0,x_max:756.953125,ha:819,o:"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 "},"›":{x_min:18.0625,x_max:774,ha:792,o:"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},"<":{x_min:17.984375,x_max:773.609375,ha:792,o:"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"\xa3":{x_min:0,x_max:704.484375,ha:801,o:"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 "},t:{x_min:0,x_max:367,ha:458,o:"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 "},"\xac":{x_min:0,x_max:706,ha:803,o:"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 "},λ:{x_min:0,x_max:750,ha:803,o:"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 "},W:{x_min:0,x_max:1263.890625,ha:1351,o:"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 "},">":{x_min:18.0625,x_max:774,ha:792,o:"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},v:{x_min:0,x_max:675.15625,ha:761,o:"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 "},τ:{x_min:.28125,x_max:644.5,ha:703,o:"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 "},ξ:{x_min:0,x_max:624.9375,ha:699,o:"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 "},"&":{x_min:-3,x_max:894.25,ha:992,o:"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 "},Λ:{x_min:0,x_max:862.5,ha:942,o:"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 "},I:{x_min:41,x_max:180,ha:293,o:"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 "},G:{x_min:0,x_max:921,ha:1011,o:"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 "},ΰ:{x_min:0,x_max:617,ha:725,o:"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 "},"`":{x_min:0,x_max:138.890625,ha:236,o:"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 "},"\xb7":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},Υ:{x_min:.328125,x_max:819.515625,ha:889,o:"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 "},r:{x_min:0,x_max:355.5625,ha:432,o:"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 "},x:{x_min:0,x_max:675,ha:764,o:"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 "},μ:{x_min:0,x_max:696.609375,ha:747,o:"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 "},h:{x_min:0,x_max:615,ha:724,o:"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 "},".":{x_min:0,x_max:142,ha:239,o:"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},φ:{x_min:-2,x_max:878,ha:974,o:"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 "},";":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 "},f:{x_min:0,x_max:378,ha:472,o:"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 "},"“":{x_min:1,x_max:348.21875,ha:454,o:"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 "},A:{x_min:.03125,x_max:906.953125,ha:1008,o:"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 "},"‘":{x_min:1,x_max:139.890625,ha:236,o:"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 "},ϊ:{x_min:-70,x_max:283,ha:361,o:"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 "},π:{x_min:-.21875,x_max:773.21875,ha:857,o:"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 "},ά:{x_min:0,x_max:765.5625,ha:809,o:"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 "},O:{x_min:0,x_max:958,ha:1057,o:"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 "},n:{x_min:0,x_max:615,ha:724,o:"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 "},l:{x_min:41,x_max:166,ha:279,o:"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 "},"\xa4":{x_min:40.09375,x_max:728.796875,ha:825,o:"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 "},κ:{x_min:0,x_max:632.328125,ha:679,o:"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 "},p:{x_min:0,x_max:685,ha:786,o:"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 "},"‡":{x_min:0,x_max:777,ha:835,o:"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 "},ψ:{x_min:0,x_max:808,ha:907,o:"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 "},η:{x_min:.78125,x_max:697,ha:810,o:"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 "}},cssFontWeight:"normal",ascender:1189,underlinePosition:-100,cssFontStyle:"normal",boundingBox:{yMin:-334,xMin:-111,yMax:1189,xMax:1672},resolution:1e3,original_font_information:{postscript_name:"Helvetiker-Regular",version_string:"Version 1.00 2004 initial release",vendor_url:"http://www.magenta.gr/",full_font_name:"Helvetiker",font_family_name:"Helvetiker",copyright:"Copyright (c) Μagenta ltd, 2004",description:"",trademark:"",designer:"",designer_url:"",unique_font_identifier:"Μagenta ltd:Helvetiker:22-10-104",license_url:"http://www.ellak.gr/fonts/MgOpen/license.html",license_description:'Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license ("Fonts") and associated documentation files (the "Font Software"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \r\n\r\nThe above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\r\n\r\nThe Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word "MgOpen", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\r\n\r\nThis License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the "MgOpen" name.\r\n\r\nThe Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \r\n\r\nTHE FONT SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.',manufacturer_name:"Μagenta ltd",font_sub_family_name:"Regular"},descender:-334,familyName:"Helvetiker",lineHeight:1522,underlineThickness:50},onChange:function(e,t){t.font=new dY.Font(e)}},labelColor:{default:function(){return"lightgrey"}},labelRotation:{default:0},// clockwise degrees, relative to the latitute parallel plane
labelResolution:{default:3},// how many segments in the text's curves
labelIncludeDot:{default:!0},labelDotRadius:{default:.1},// in deg
labelDotOrientation:{default:function(){return"bottom"}},// right, top, bottom
labelsTransitionDuration:{default:1e3,triggerUpdate:!1}// ms
},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e){// Data accessors
var t=Ax(e.labelLat),n=Ax(e.labelLng),r=Ax(e.labelAltitude),i=Ax(e.labelText),a=Ax(e.labelSize),o=Ax(e.labelRotation),s=Ax(e.labelColor),A=Ax(e.labelIncludeDot),l=Ax(e.labelDotRadius),u=Ax(e.labelDotOrientation),c=new Set(["right","top","bottom"]),h=2*Math.PI*100/360,d=new dY.CircleGeometry(1,16);dl(e.labelsData,e.scene,{createObj:function(){var e=new dY.MeshLambertMaterial;e.side=2;var t=new dY.Group;// container
return t.add(new dY.Mesh(d,e)),t.add(new dY.Mesh(void 0,e)),t.__globeObjType="label",t},updateObj:function(d,f){var p=hj(d.children,2),m=p[0],g=p[1],v=s(f),_=di(v);g.material.color.set(dr(v)),g.material.transparent=_<1,g.material.opacity=_;// update dot
var y=A(f),x=u(f);y&&(c.has(x)||(x="bottom"));// size dot
var b=y?+l(f)*h:1e-12;m.scale.x=m.scale.y=b;// create text geometry
var M=+a(f)*h;if(g.geometry&&g.geometry.dispose(),g.geometry=new dY.TextGeometry(i(f),{font:e.font,size:M,height:0,curveSegments:e.labelResolution}),// center text (otherwise anchor is on bottom-left)
"right"!==x&&g.geometry.center(),y){// translate text
var w=b+M/2;"right"===x&&(g.position.x=w),g.position.y=({right:-M/2,// center vertically
top:w+M/2,bottom:-w-M/2})[x]}// animations
var E=function(t){var n=d.__currentTargetD=t,r=n.lat,i=n.lng,a=n.alt,o=n.rot,s=n.scale;// position center
Object.assign(d.position,h6(r,i,a)),// rotate
d.lookAt(e.scene.localToWorld(new dY.Vector3(0,0,0))),d.rotateY(Math.PI),// rotate clockwise relative to lat parallel
d.rotateZ(-o*Math.PI/180),// scale it
d.scale.x=d.scale.y=d.scale.z=s},S={lat:+t(f),lng:+n(f),alt:+r(f),rot:+o(f),scale:1},T=d.__currentTargetD||Object.assign({},S,{scale:1e-12});Object.keys(S).some(function(e){return T[e]!==S[e]})&&(!e.labelsTransitionDuration||e.labelsTransitionDuration<0?E(S):new sn.Tween(T).to(S,e.labelsTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(E).start())}})}}),dK=/*#__PURE__*/function(e){hB(n,e);var t=hV(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32;hI(this,n),(e=t.call(this)).type="CircleLineGeometry",e.parameters={radius:r,segmentCount:i};for(var a=[],o=0;o<=i;o++){var s=(o/i-.25)*Math.PI*2;a.push({x:Math.cos(s)*r,y:Math.sin(s)*r,z:0})}return e.setFromPoints(a),e}return hU(n)}((window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{BufferGeometry:t3}).BufferGeometry),dJ=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Color:tk,Group:iN,Line:i1,LineBasicMaterial:iY,Vector3:eL},d$=/*@__PURE__*/n(Aq).default||/*@__PURE__*/n(Aq),d0=st({props:{ringsData:{default:[]},ringLat:{default:"lat"},ringLng:{default:"lng"},ringAltitude:{default:.0015},ringColor:{default:function(){return"#ffffaa"},triggerUpdate:!1},// single color, array of colors or color interpolation fn
ringResolution:{default:64,triggerUpdate:!1},// how many slice segments in each circle's circumference
ringMaxRadius:{default:2,triggerUpdate:!1},// degrees
ringPropagationSpeed:{default:1,triggerUpdate:!1},// degrees/s
ringRepeatPeriod:{default:700,triggerUpdate:!1}// ms
},methods:{pauseAnimation:function(e){var t;null===(t=e.ticker)||void 0===t||t.pause()},resumeAnimation:function(e){var t;null===(t=e.ticker)||void 0===t||t.resume()},_destructor:function(e){var t;null===(t=e.ticker)||void 0===t||t.dispose()}},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e,t.ticker=new d$,t.ticker.onTick.add(function(e){if(t.ringsData.length){// Data accessors
var n=Ax(t.ringColor),r=Ax(t.ringAltitude),i=Ax(t.ringMaxRadius),a=Ax(t.ringPropagationSpeed),o=Ax(t.ringRepeatPeriod);t.ringsData.filter(function(e){return e.__threeObj}).forEach(function(s){var A=s.__threeObj;if((A.__nextRingTime||0)<=e){// time to add a new ring
var l,u,c,h,d=o(s)/1e3;A.__nextRingTime=e+(d<=0?1/0:d);var f=new dJ.Line(new dK(1,t.ringResolution),new dJ.LineBasicMaterial),p=n(s),m=p instanceof Array||p instanceof Function;m?p instanceof Array?(h=lf().domain(p.map(function(e,t){return t/(p.length-1)}))// same number of stops as colors
.range(p),f.material.transparent=p.some(function(e){return 1>di(e)})):(h=p,f.material.transparent=!0):(// set only once
f.material.color=new dJ.Color(dr(p)),l=f.material,u=di(p),l.opacity=u,l.transparent=u<1,l.depthWrite=void 0===c?u>=1:c);var g=100*(1+r(s)),v=i(s),_=v*Math.PI/180,y=a(s),x=y<=0,b=function(e){var t=e.t,n=(x?1-t:t)*_;if(f.scale.x=f.scale.y=g*Math.sin(n),f.position.z=g*(1-Math.cos(n)),m){var r=h(t);f.material.color=new dJ.Color(dr(r)),f.material.transparent&&(f.material.opacity=di(r))}};if(0===y)b({t:0}),A.add(f);else{var M=1e3*Math.abs(v/y);new sn.Tween({t:0}).to({t:1},M).onUpdate(b).onStart(function(){return A.add(f)}).onComplete(function(){A.remove(f),h2(f)}).start()}}})}})},update:function(e){// Data accessors
var t=Ax(e.ringLat),n=Ax(e.ringLng),r=Ax(e.ringAltitude),i=e.scene.localToWorld(new dJ.Vector3(0,0,0));dl(e.ringsData,e.scene,{createObj:function(){var e=new dJ.Group;return e.__globeObjType="ring",e},updateObj:function(e,a){var o=t(a),s=n(a),A=r(a);// position & orientate inwards
Object.assign(e.position,h6(o,s,A)),e.lookAt(i)}},{removeDelay:3e4}// wait until all rings are gone
)}}),d1=hO(hO({},window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{}),{},{CSS2DObject:class extends tb{constructor(e=document.createElement("div")){super(),this.isCSS2DObject=!0,this.element=e,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.center=new eo(.5,.5),this.addEventListener("removed",function(){this.traverse(function(e){e.element instanceof Element&&null!==e.element.parentNode&&e.element.parentNode.removeChild(e.element)})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this.center=e.center,this}}}),d2=st({props:{htmlElementsData:{default:[]},htmlLat:{default:"lat"},htmlLng:{default:"lng"},htmlAltitude:{default:0},// in units of globe radius
htmlElement:{},htmlTransitionDuration:{default:1e3,triggerUpdate:!1},// ms
isBehindGlobe:{onChange:function(){this.updateObjVisibility()},triggerUpdate:!1}},methods:{updateObjVisibility:function(e,t){// Hide elements on the far side of the globe
(t?[t]:e.htmlElementsData.map(function(e){return e.__threeObj}).filter(function(e){return e})).forEach(function(t){return t.visible=!e.isBehindGlobe||!e.isBehindGlobe(t.position)})}},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e,t){var n=this,r=Ax(e.htmlLat),i=Ax(e.htmlLng),a=Ax(e.htmlAltitude),o=Ax(e.htmlElement);dl(e.htmlElementsData,e.scene,{// objs need to be recreated if this prop has changed
purge:t.hasOwnProperty("htmlElement"),createObj:function(e){var t=o(e),n=new d1.CSS2DObject(t);return n.__globeObjType="html",n},updateObj:function(t,o){var s=function(e){var r=t.__currentTargetD=e,i=r.alt,a=r.lat,o=r.lng;Object.assign(t.position,h6(a,o,i)),n.updateObjVisibility(t)},A={lat:+r(o),lng:+i(o),alt:+a(o)};e.htmlTransitionDuration&&!(e.htmlTransitionDuration<0)&&t.__currentTargetD?new sn.Tween(t.__currentTargetD).to(A,e.pointsTransitionDuration).easing(sn.Easing.Quadratic.InOut).onUpdate(s).start():s(A)}})}}),d3=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Euler:ts,Group:iN,Mesh:nc,MeshLambertMaterial:a$,SphereGeometry:aX},d4=st({props:{objectsData:{default:[]},objectLat:{default:"lat"},objectLng:{default:"lng"},objectAltitude:{default:.01},// in units of globe radius
objectFacesSurface:{default:!0},objectRotation:{},objectThreeObject:{default:new d3.Mesh(new d3.SphereGeometry(1,16,8),new d3.MeshLambertMaterial({color:"#ffffaa",transparent:!0,opacity:.7}))}},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e,t){// Data accessors
var n=Ax(e.objectLat),r=Ax(e.objectLng),i=Ax(e.objectAltitude),a=Ax(e.objectFacesSurface),o=Ax(e.objectRotation),s=Ax(e.objectThreeObject);dl(e.objectsData,e.scene,{// objs need to be recreated if this prop has changed
purge:t.hasOwnProperty("objectThreeObject"),createObj:function(t){var n=s(t);e.objectThreeObject===n&&(n=n.clone());var r=new d3.Group;return r.add(n),r.__globeObjType="object",r},updateObj:function(e,t){var s=+n(t),A=+r(t),l=+i(t);Object.assign(e.position,h6(s,A,l)),a(t)?e.setRotationFromEuler(new ts(h7(-s),h7(A),0,"YXZ")):e.rotation.set(0,0,0);var u=e.children[0],c=o(t);c&&u.setRotationFromEuler(new ts(h7(c.x||0),h7(c.y||0),h7(c.z||0)))}})}}),d5=st({props:{customLayerData:{default:[]},customThreeObject:{},customThreeObjectUpdate:{triggerUpdate:!1}},init:function(e,t){// Clear the scene
h3(e),// Main three object to manipulate
t.scene=e},update:function(e,t){e.customThreeObjectUpdate||h3(e.scene);// Clear the existing objects to create all new, if there's no update method (brute-force)
var n=Ax(e.customThreeObject),r=Ax(e.customThreeObjectUpdate);dl(e.customLayerData,e.scene,{// objs need to be recreated if this prop has changed
purge:t.hasOwnProperty("customThreeObject"),createObj:function(t){var r=n(t,100);return r&&(e.customThreeObject===r&&(r=r.clone()),r.__globeObjType="custom"),r},updateObj:function(e,t){return r(e,t,100)}})}}),d6=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{Group:iN,Vector2:eo,Vector3:eL},d8=["globeLayer","pointsLayer","arcsLayer","hexBinLayer","heatmapsLayer","polygonsLayer","hexedPolygonsLayer","pathsLayer","tilesLayer","labelsLayer","ringsLayer","htmlElementsLayer","objectsLayer","customLayer"],d7=h4("globeLayer",dn),d9=Object.assign.apply(Object,hW(["globeImageUrl","bumpImageUrl","showGlobe","showGraticules","showAtmosphere","atmosphereColor","atmosphereAltitude"].map(function(e){return hN({},e,d7.linkProp(e))}))),fe=Object.assign.apply(Object,hW(["globeMaterial"].map(function(e){return hN({},e,d7.linkMethod(e))}))),ft=h4("pointsLayer",dd),fn=Object.assign.apply(Object,hW(["pointsData","pointLat","pointLng","pointColor","pointAltitude","pointRadius","pointResolution","pointsMerge","pointsTransitionDuration"].map(function(e){return hN({},e,ft.linkProp(e))}))),fr=h4("arcsLayer",dv),fi=Object.assign.apply(Object,hW(["arcsData","arcStartLat","arcStartLng","arcEndLat","arcEndLng","arcColor","arcAltitude","arcAltitudeAutoScale","arcStroke","arcCurveResolution","arcCircularResolution","arcDashLength","arcDashGap","arcDashInitialGap","arcDashAnimateTime","arcsTransitionDuration"].map(function(e){return hN({},e,fr.linkProp(e))}))),fa=h4("hexBinLayer",db),fo=Object.assign.apply(Object,hW(["hexBinPointsData","hexBinPointLat","hexBinPointLng","hexBinPointWeight","hexBinResolution","hexMargin","hexTopCurvatureResolution","hexTopColor","hexSideColor","hexAltitude","hexBinMerge","hexTransitionDuration"].map(function(e){return hN({},e,fa.linkProp(e))}))),fs=h4("heatmapsLayer",dI),fA=Object.assign.apply(Object,hW(["heatmapsData","heatmapPoints","heatmapPointLat","heatmapPointLng","heatmapPointWeight","heatmapBandwidth","heatmapColorFn","heatmapColorSaturation","heatmapBaseAltitude","heatmapTopAltitude","heatmapsTransitionDuration"].map(function(e){return hN({},e,fs.linkProp(e))}))),fl=h4("hexedPolygonsLayer",dF),fu=Object.assign.apply(Object,hW(["hexPolygonsData","hexPolygonGeoJsonGeometry","hexPolygonColor","hexPolygonAltitude","hexPolygonResolution","hexPolygonMargin","hexPolygonUseDots","hexPolygonCurvatureResolution","hexPolygonDotResolution","hexPolygonsTransitionDuration"].map(function(e){return hN({},e,fl.linkProp(e))}))),fc=h4("polygonsLayer",dU),fh=Object.assign.apply(Object,hW(["polygonsData","polygonGeoJsonGeometry","polygonCapColor","polygonCapMaterial","polygonSideColor","polygonSideMaterial","polygonStrokeColor","polygonAltitude","polygonCapCurvatureResolution","polygonsTransitionDuration"].map(function(e){return hN({},e,fc.linkProp(e))}))),fd=h4("pathsLayer",dj),ff=Object.assign.apply(Object,hW(["pathsData","pathPoints","pathPointLat","pathPointLng","pathPointAlt","pathResolution","pathColor","pathStroke","pathDashLength","pathDashGap","pathDashInitialGap","pathDashAnimateTime","pathTransitionDuration"].map(function(e){return hN({},e,fd.linkProp(e))}))),fp=h4("tilesLayer",dX),fm=Object.assign.apply(Object,hW(["tilesData","tileLat","tileLng","tileAltitude","tileWidth","tileHeight","tileUseGlobeProjection","tileMaterial","tileCurvatureResolution","tilesTransitionDuration"].map(function(e){return hN({},e,fp.linkProp(e))}))),fg=h4("labelsLayer",dZ),fv=Object.assign.apply(Object,hW(["labelsData","labelLat","labelLng","labelAltitude","labelRotation","labelText","labelSize","labelTypeFace","labelColor","labelResolution","labelIncludeDot","labelDotRadius","labelDotOrientation","labelsTransitionDuration"].map(function(e){return hN({},e,fg.linkProp(e))}))),f_=h4("ringsLayer",d0),fy=Object.assign.apply(Object,hW(["ringsData","ringLat","ringLng","ringAltitude","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod"].map(function(e){return hN({},e,f_.linkProp(e))}))),fx=h4("htmlElementsLayer",d2),fb=Object.assign.apply(Object,hW(["htmlElementsData","htmlLat","htmlLng","htmlAltitude","htmlElement","htmlTransitionDuration"].map(function(e){return hN({},e,fx.linkProp(e))}))),fM=h4("objectsLayer",d4),fw=Object.assign.apply(Object,hW(["objectsData","objectLat","objectLng","objectAltitude","objectRotation","objectFacesSurface","objectThreeObject"].map(function(e){return hN({},e,fM.linkProp(e))}))),fE=h4("customLayer",d5),fS=Object.assign.apply(Object,hW(["customLayerData","customThreeObject","customThreeObjectUpdate"].map(function(e){return hN({},e,fE.linkProp(e))}))),fT=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Object,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=/*#__PURE__*/function(t){hB(i,t);var r=hV(i);function i(){var t;hI(this,i);for(var a=arguments.length,o=Array(a),s=0;s<a;s++)o[s]=arguments[s];return(t=r.call.apply(r,[this].concat(o))).__kapsuleInstance=e.apply(void 0,o).apply(void 0,[].concat(hW(n?[hH(t)]:[]),o)),t}return hU(i)}(t);return Object.keys(e()).forEach(function(e){return r.prototype[e]=function(){var t,n=(t=this.__kapsuleInstance)[e].apply(t,arguments);return n===this.__kapsuleInstance?this// chain based on this class, not the kapsule obj
:n}}),r}(st({props:hO(hO(hO(hO(hO(hO(hO(hO(hO(hO(hO(hO(hO(hO({onGlobeReady:{triggerUpdate:!1},rendererSize:{default:new d6.Vector2(window.innerWidth,window.innerHeight),onChange:function(e,t){t.pathsLayer.rendererSize(e)},triggerUpdate:!1}},d9),fn),fi),fo),fA),fh),fu),ff),fm),fv),fy),fb),fw),fS),methods:hO({getGlobeRadius:h5,getCoords:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return h6.apply(void 0,n)},toGeoCoords:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return h8.apply(void 0,n)},setPointOfView:function(e,t,n){var r=void 0;if(t){var i,a,o,s=h5(),A=n?t.clone().sub(n):t;r=function(e){void 0===i&&(i=A.length()),// check if it's behind plane of globe's visible area
// maxSurfacePosAngle === undefined && (maxSurfacePosAngle = Math.acos(globeRadius / povDist));
// return pov.angleTo(pos) > maxSurfacePosAngle;
// more sophisticated method that checks also pos altitude
void 0===a&&(a=Math.sqrt(Math.pow(i,2)-Math.pow(s,2))),void 0===o&&(o=Math.acos(a/i));var t=A.distanceTo(e);if(t<a)return!1;// pos is closer than visible edge of globe
var n=e.length();return Math.acos((Math.pow(i,2)+Math.pow(t,2)-Math.pow(n,2))/(2*i*t))<o;// pos is within globe's visible area cone
}}// pass behind globe checker for layers that need it
e.layersThatNeedBehindGlobeChecker.forEach(function(e){return e.isBehindGlobe(r)})},pauseAnimation:function(e){return null!==e.animationFrameRequestId&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),e.pausableLayers.forEach(function(e){var t;return null===(t=e.pauseAnimation)||void 0===t?void 0:t.call(e)}),this},resumeAnimation:function(e){return null===e.animationFrameRequestId&&this._animationCycle(),e.pausableLayers.forEach(function(e){var t;return null===(t=e.resumeAnimation)||void 0===t?void 0:t.call(e)}),this},_animationCycle:function(e){e.animationFrameRequestId=requestAnimationFrame(this._animationCycle),sn.update()},_destructor:function(e){this.pauseAnimation(),e.destructableLayers.forEach(function(e){return e._destructor()})}},fe),stateInit:function(){var e={globeLayer:dn(),pointsLayer:dd(),arcsLayer:dv(),hexBinLayer:db(),heatmapsLayer:dI(),polygonsLayer:dU(),hexedPolygonsLayer:dF(),pathsLayer:dj(),tilesLayer:dX(),labelsLayer:dZ(),ringsLayer:d0(),htmlElementsLayer:d2(),objectsLayer:d4(),customLayer:d5()};return hO(hO({},e),{},{layersThatNeedBehindGlobeChecker:Object.values(e).filter(function(e){return e.hasOwnProperty("isBehindGlobe")}),destructableLayers:Object.values(e).filter(function(e){return e.hasOwnProperty("_destructor")}),pausableLayers:Object.values(e).filter(function(e){return e.hasOwnProperty("pauseAnimation")})})},init:function(e,t,n){var r=n.animateIn,i=void 0===r||r,a=n.waitForGlobeReady;// Clear the scene
h3(e),// Main three object to manipulate
e.add(t.scene=new d6.Group),t.scene.visible=!1,// Add all layers groups
d8.forEach(function(e){var n=new d6.Group;t.scene.add(n),t[e](n)});var o=function(){if(i){// Animate build-in just once
t.scene.scale.set(1e-6,1e-6,1e-6),new sn.Tween({k:1e-6}).to({k:1},600).easing(sn.Easing.Quadratic.Out).onUpdate(function(e){var n=e.k;return t.scene.scale.set(n,n,n)}).start();var e=new d6.Vector3(0,1,0);new sn.Tween({rot:2*Math.PI}).to({rot:0},1200).easing(sn.Easing.Quintic.Out).onUpdate(function(n){var r=n.rot;return t.scene.setRotationFromAxisAngle(e,r)}).start()}t.scene.visible=!0,t.onGlobeReady&&t.onGlobeReady()};void 0===a||a?t.globeLayer.onReady(o):o(),// Kick-off animation cycle
this._animationCycle()},update:function(e){}}),(window.THREE?window.THREE:{Group:iN}).Group,!0);const fC={type:"change"},fR={type:"start"},fP={type:"end"};class fL extends W{constructor(e,t){super();let n=this,r={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4};this.object=e,this.domElement=t,this.domElement.style.touchAction="none",// API
this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA"/*A*/,"KeyS"/*S*/,"KeyD"/*D*/],this.mouseButtons={LEFT:U.ROTATE,MIDDLE:U.DOLLY,RIGHT:U.PAN},// internals
this.target=new eL;let i=new eL,a=1,o=r.NONE,s=r.NONE,A=0,l=0,u=0,c=new eL,h=new eo,d=new eo,f=new eL,p=new eo,m=new eo,g=new eo,v=new eo,_=[],y={};// for reset
this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.up0=this.object.up.clone(),this.zoom0=this.object.zoom,// methods
this.handleResize=function(){let e=n.domElement.getBoundingClientRect(),t=n.domElement.ownerDocument.documentElement;n.screen.left=e.left+window.pageXOffset-t.clientLeft,n.screen.top=e.top+window.pageYOffset-t.clientTop,n.screen.width=e.width,n.screen.height=e.height};let x=function(){let e=new eo;return function(t,r){return e.set((t-n.screen.left)/n.screen.width,(r-n.screen.top)/n.screen.height),e}}(),b=function(){let e=new eo;return function(t,r){return e.set((t-.5*n.screen.width-n.screen.left)/(.5*n.screen.width),(n.screen.height+2*(n.screen.top-r))/n.screen.width// screen.width intentional
),e}}();// listeners
function M(e){!1!==n.enabled&&(0===_.length&&(n.domElement.setPointerCapture(e.pointerId),n.domElement.addEventListener("pointermove",w),n.domElement.addEventListener("pointerup",E)),_.push(e),"touch"===e.pointerType?function(e){if(D(e),1===_.length)o=r.TOUCH_ROTATE,d.copy(b(_[0].pageX,_[0].pageY)),h.copy(d);else{o=r.TOUCH_ZOOM_PAN;let e=_[0].pageX-_[1].pageX,t=_[0].pageY-_[1].pageY;l=A=Math.sqrt(e*e+t*t);let n=(_[0].pageX+_[1].pageX)/2,i=(_[0].pageY+_[1].pageY)/2;g.copy(x(n,i)),v.copy(g)}n.dispatchEvent(fR)}(e):function(e){if(o===r.NONE)switch(e.button){case n.mouseButtons.LEFT:o=r.ROTATE;break;case n.mouseButtons.MIDDLE:o=r.ZOOM;break;case n.mouseButtons.RIGHT:o=r.PAN}let t=s!==r.NONE?s:o;t!==r.ROTATE||n.noRotate?t!==r.ZOOM||n.noZoom?t!==r.PAN||n.noPan||(g.copy(x(e.pageX,e.pageY)),v.copy(g)):(p.copy(x(e.pageX,e.pageY)),m.copy(p)):(d.copy(b(e.pageX,e.pageY)),h.copy(d)),n.dispatchEvent(fR)}(e))}function w(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){if(D(e),1===_.length)h.copy(d),d.copy(b(e.pageX,e.pageY));else{let t=function(e){let t=e.pointerId===_[0].pointerId?_[1]:_[0];return y[t.pointerId]}(e),n=e.pageX-t.x,r=e.pageY-t.y;l=Math.sqrt(n*n+r*r);let i=(e.pageX+t.x)/2,a=(e.pageY+t.y)/2;v.copy(x(i,a))}}(e):function(e){let t=s!==r.NONE?s:o;t!==r.ROTATE||n.noRotate?t!==r.ZOOM||n.noZoom?t!==r.PAN||n.noPan||v.copy(x(e.pageX,e.pageY)):m.copy(x(e.pageX,e.pageY)):(h.copy(d),d.copy(b(e.pageX,e.pageY)))}(e))}function E(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){switch(_.length){case 0:o=r.NONE;break;case 1:o=r.TOUCH_ROTATE,d.copy(b(e.pageX,e.pageY)),h.copy(d);break;case 2:o=r.TOUCH_ZOOM_PAN;for(let t=0;t<_.length;t++)if(_[t].pointerId!==e.pointerId){let e=y[_[t].pointerId];d.copy(b(e.x,e.y)),h.copy(d);break}}n.dispatchEvent(fP)}(e):(o=r.NONE,n.dispatchEvent(fP)),//
L(e),0===_.length&&(n.domElement.releasePointerCapture(e.pointerId),n.domElement.removeEventListener("pointermove",w),n.domElement.removeEventListener("pointerup",E)))}function S(e){L(e)}function T(e){!1!==n.enabled&&(window.removeEventListener("keydown",T),s===r.NONE&&(e.code!==n.keys[r.ROTATE]||n.noRotate?e.code!==n.keys[r.ZOOM]||n.noZoom?e.code!==n.keys[r.PAN]||n.noPan||(s=r.PAN):s=r.ZOOM:s=r.ROTATE))}function C(){!1!==n.enabled&&(s=r.NONE,window.addEventListener("keydown",T))}function R(e){if(!1!==n.enabled&&!0!==n.noZoom){switch(e.preventDefault(),e.deltaMode){case 2:// Zoom in pages
p.y-=.025*e.deltaY;break;case 1:// Zoom in lines
p.y-=.01*e.deltaY;break;default:// undefined, 0, assume pixels
p.y-=25e-5*e.deltaY}n.dispatchEvent(fR),n.dispatchEvent(fP)}}function P(e){!1!==n.enabled&&e.preventDefault()}function L(e){delete y[e.pointerId];for(let t=0;t<_.length;t++)if(_[t].pointerId==e.pointerId){_.splice(t,1);return}}function D(e){let t=y[e.pointerId];void 0===t&&(t=new eo,y[e.pointerId]=t),t.set(e.pageX,e.pageY)}this.rotateCamera=function(){let e=new eL,t=new eP,r=new eL,i=new eL,a=new eL,o=new eL;return function(){o.set(d.x-h.x,d.y-h.y,0);let s=o.length();s?(c.copy(n.object.position).sub(n.target),r.copy(c).normalize(),i.copy(n.object.up).normalize(),a.crossVectors(i,r).normalize(),i.setLength(d.y-h.y),a.setLength(d.x-h.x),o.copy(i.add(a)),e.crossVectors(o,c).normalize(),s*=n.rotateSpeed,t.setFromAxisAngle(e,s),c.applyQuaternion(t),n.object.up.applyQuaternion(t),f.copy(e),u=s):!n.staticMoving&&u&&(u*=Math.sqrt(1-n.dynamicDampingFactor),c.copy(n.object.position).sub(n.target),t.setFromAxisAngle(f,u),c.applyQuaternion(t),n.object.up.applyQuaternion(t)),h.copy(d)}}(),this.zoomCamera=function(){let e;o===r.TOUCH_ZOOM_PAN?(e=A/l,A=l,n.object.isPerspectiveCamera?c.multiplyScalar(e):n.object.isOrthographicCamera?(n.object.zoom=ea.clamp(n.object.zoom/e,n.minZoom,n.maxZoom),a!==n.object.zoom&&n.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(1!=(e=1+(m.y-p.y)*n.zoomSpeed)&&e>0&&(n.object.isPerspectiveCamera?c.multiplyScalar(e):n.object.isOrthographicCamera?(n.object.zoom=ea.clamp(n.object.zoom/e,n.minZoom,n.maxZoom),a!==n.object.zoom&&n.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),n.staticMoving?p.copy(m):p.y+=(m.y-p.y)*this.dynamicDampingFactor)},this.panCamera=function(){let e=new eo,t=new eL,r=new eL;return function(){if(e.copy(v).sub(g),e.lengthSq()){if(n.object.isOrthographicCamera){let t=(n.object.right-n.object.left)/n.object.zoom/n.domElement.clientWidth,r=(n.object.top-n.object.bottom)/n.object.zoom/n.domElement.clientWidth;e.x*=t,e.y*=r}e.multiplyScalar(c.length()*n.panSpeed),r.copy(c).cross(n.object.up).setLength(e.x),r.add(t.copy(n.object.up).setLength(e.y)),n.object.position.add(r),n.target.add(r),n.staticMoving?g.copy(v):g.add(e.subVectors(v,g).multiplyScalar(n.dynamicDampingFactor))}}}(),this.checkDistances=function(){n.noZoom&&n.noPan||(c.lengthSq()>n.maxDistance*n.maxDistance&&(n.object.position.addVectors(n.target,c.setLength(n.maxDistance)),p.copy(m)),c.lengthSq()<n.minDistance*n.minDistance&&(n.object.position.addVectors(n.target,c.setLength(n.minDistance)),p.copy(m)))},this.update=function(){c.subVectors(n.object.position,n.target),n.noRotate||n.rotateCamera(),n.noZoom||n.zoomCamera(),n.noPan||n.panCamera(),n.object.position.addVectors(n.target,c),n.object.isPerspectiveCamera?(n.checkDistances(),n.object.lookAt(n.target),i.distanceToSquared(n.object.position)>1e-6&&(n.dispatchEvent(fC),i.copy(n.object.position))):n.object.isOrthographicCamera?(n.object.lookAt(n.target),(i.distanceToSquared(n.object.position)>1e-6||a!==n.object.zoom)&&(n.dispatchEvent(fC),i.copy(n.object.position),a=n.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type")},this.reset=function(){o=r.NONE,s=r.NONE,n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.up.copy(n.up0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),c.subVectors(n.object.position,n.target),n.object.lookAt(n.target),n.dispatchEvent(fC),i.copy(n.object.position),a=n.object.zoom},this.dispose=function(){n.domElement.removeEventListener("contextmenu",P),n.domElement.removeEventListener("pointerdown",M),n.domElement.removeEventListener("pointercancel",S),n.domElement.removeEventListener("wheel",R),n.domElement.removeEventListener("pointermove",w),n.domElement.removeEventListener("pointerup",E),window.removeEventListener("keydown",T),window.removeEventListener("keyup",C)},this.domElement.addEventListener("contextmenu",P),this.domElement.addEventListener("pointerdown",M),this.domElement.addEventListener("pointercancel",S),this.domElement.addEventListener("wheel",R,{passive:!1}),window.addEventListener("keydown",T),window.addEventListener("keyup",C),this.handleResize(),// force an update at start
this.update()}}// OrbitControls performs orbiting, dollying (zooming), and panning.
// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).
//
//    Orbit - left mouse / touch: one-finger move
//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish
//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move
const fD={type:"change"},fO={type:"start"},fI={type:"end"},fq=new e6,fU=new nT,fN=Math.cos(70*ea.DEG2RAD);class fB extends W{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",// Set to false to disable this control
this.enabled=!0,// "target" sets the location of focus, where the object orbits around
this.target=new eL,// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect
this.cursor=new eL,// How far you can dolly in and out ( PerspectiveCamera only )
this.minDistance=0,this.maxDistance=1/0,// How far you can zoom in and out ( OrthographicCamera only )
this.minZoom=0,this.maxZoom=1/0,// Limit camera target within a spherical area around the cursor
this.minTargetRadius=0,this.maxTargetRadius=1/0,// How far you can orbit vertically, upper and lower limits.
// Range is 0 to Math.PI radians.
this.minPolarAngle=0,this.maxPolarAngle=Math.PI,// How far you can orbit horizontally, upper and lower limits.
// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )
this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,// Set to true to enable damping (inertia)
// If damping is enabled, you must call controls.update() in your animation loop
this.enableDamping=!1,this.dampingFactor=.05,// This option actually enables dollying in and out; left as "zoom" for backwards compatibility.
// Set to false to disable zooming
this.enableZoom=!0,this.zoomSpeed=1,// Set to false to disable rotating
this.enableRotate=!0,this.rotateSpeed=1,// Set to false to disable panning
this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,// Set to true to automatically rotate around the target
// If auto-rotate is enabled, you must call controls.update() in your animation loop
this.autoRotate=!1,this.autoRotateSpeed=2,// The four arrow keys
this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},// Mouse buttons
this.mouseButtons={LEFT:U.ROTATE,MIDDLE:U.DOLLY,RIGHT:U.PAN},// Touch fingers
this.touches={ONE:N.ROTATE,TWO:N.DOLLY_PAN},// for reset
this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,// the target DOM element for key events
this._domElementKeyEvents=null,//
// public methods
//
this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",Q),this._domElementKeyEvents=e},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Q),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(fD),n.update(),i=r.NONE},// this method is exposed, but perhaps it would be better if we can make it private...
this.update=function(){let t=new eL,u=new eP().setFromUnitVectors(e.up,new eL(0,1,0)),c=u.clone().invert(),h=new eL,d=new eP,f=new eL,p=2*Math.PI;return function(m=null){let g=n.object.position;t.copy(g).sub(n.target),// rotate offset to "y-axis-is-up" space
t.applyQuaternion(u),// angle from z-axis around y-axis
o.setFromVector3(t),n.autoRotate&&i===r.NONE&&E(null!==m?2*Math.PI/60*n.autoRotateSpeed*m:2*Math.PI/60/60*n.autoRotateSpeed),n.enableDamping?(o.theta+=s.theta*n.dampingFactor,o.phi+=s.phi*n.dampingFactor):(o.theta+=s.theta,o.phi+=s.phi);// restrict theta to be between desired limits
let v=n.minAzimuthAngle,b=n.maxAzimuthAngle;isFinite(v)&&isFinite(b)&&(v<-Math.PI?v+=p:v>Math.PI&&(v-=p),b<-Math.PI?b+=p:b>Math.PI&&(b-=p),v<=b?o.theta=Math.max(v,Math.min(b,o.theta)):o.theta=o.theta>(v+b)/2?Math.max(v,o.theta):Math.min(b,o.theta)),// restrict phi to be between desired limits
o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),!0===n.enableDamping?n.target.addScaledVector(l,n.dampingFactor):n.target.add(l),// Limit the target distance from the cursor to create a sphere around the center of interest
n.target.sub(n.cursor),n.target.clampLength(n.minTargetRadius,n.maxTargetRadius),n.target.add(n.cursor),n.zoomToCursor&&x||n.object.isOrthographicCamera?o.radius=O(o.radius):o.radius=O(o.radius*A),t.setFromSpherical(o),// rotate offset back to "camera-up-vector-is-up" space
t.applyQuaternion(c),g.copy(n.target).add(t),n.object.lookAt(n.target),!0===n.enableDamping?(s.theta*=1-n.dampingFactor,s.phi*=1-n.dampingFactor,l.multiplyScalar(1-n.dampingFactor)):(s.set(0,0,0),l.set(0,0,0));// adjust camera position
let M=!1;if(n.zoomToCursor&&x){let r=null;if(n.object.isPerspectiveCamera){// move the camera down the pointer ray
// this method avoids floating point error
let e=t.length();r=O(e*A);let i=e-r;n.object.position.addScaledVector(_,i),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){// adjust the ortho camera position based on zoom changes
let e=new eL(y.x,y.y,0);e.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/A)),n.object.updateProjectionMatrix(),M=!0;let i=new eL(y.x,y.y,0);i.unproject(n.object),n.object.position.sub(i).add(e),n.object.updateMatrixWorld(),r=t.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;// handle the placement of the target
null!==r&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(r).add(n.object.position):(// get the ray and translation plane to compute target
fq.origin.copy(n.object.position),fq.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(fq.direction))<fN?e.lookAt(n.target):(fU.setFromNormalAndCoplanarPoint(n.object.up,n.target),fq.intersectPlane(fU,n.target))))}else n.object.isOrthographicCamera&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/A)),n.object.updateProjectionMatrix(),M=!0);return(// update condition is:
// min(camera displacement, camera rotation in radians)^2 > EPS
// using small-angle approximation cos(x/2) = 1 - x^2 / 8
A=1,x=!1,!!(M||h.distanceToSquared(n.object.position)>a||8*(1-d.dot(n.object.quaternion))>a||f.distanceToSquared(n.target)>0)&&(n.dispatchEvent(fD),h.copy(n.object.position),d.copy(n.object.quaternion),f.copy(n.target),M=!1,!0))}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",Y),n.domElement.removeEventListener("pointerdown",V),n.domElement.removeEventListener("pointercancel",W),n.domElement.removeEventListener("wheel",X),n.domElement.removeEventListener("pointermove",j),n.domElement.removeEventListener("pointerup",W),null!==n._domElementKeyEvents&&(n._domElementKeyEvents.removeEventListener("keydown",Q),n._domElementKeyEvents=null);//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?
};//
// internals
//
let n=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},i=r.NONE,a=1e-6,o=new oT,s=new oT,A=1,l=new eL,u=new eo,c=new eo,h=new eo,d=new eo,f=new eo,p=new eo,m=new eo,g=new eo,v=new eo,_=new eL,y=new eo,x=!1,b=[],M={};function w(){return Math.pow(.95,n.zoomSpeed)}function E(e){s.theta-=e}function S(e){s.phi-=e}let T=function(){let e=new eL;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),l.add(e)}}(),C=function(){let e=new eL;return function(t,r){!0===n.screenSpacePanning?e.setFromMatrixColumn(r,1):(e.setFromMatrixColumn(r,0),e.crossVectors(n.object.up,e)),e.multiplyScalar(t),l.add(e)}}(),R=function(){let e=new eL;return function(t,r){let i=n.domElement;if(n.object.isPerspectiveCamera){// perspective
let a=n.object.position;e.copy(a).sub(n.target);let o=e.length();// we use only clientHeight here so aspect ratio does not distort speed
T(2*t*// half of the fov is center to top of screen
(o*=Math.tan(n.object.fov/2*Math.PI/180))/i.clientHeight,n.object.matrix),C(2*r*o/i.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(// orthographic
T(t*(n.object.right-n.object.left)/n.object.zoom/i.clientWidth,n.object.matrix),C(r*(n.object.top-n.object.bottom)/n.object.zoom/i.clientHeight,n.object.matrix)):(// camera neither orthographic nor perspective
console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function P(e){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?A/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function L(e){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?A*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function D(e){if(!n.zoomToCursor)return;x=!0;let t=n.domElement.getBoundingClientRect(),r=e.clientX-t.left,i=e.clientY-t.top,a=t.width,o=t.height;y.x=r/a*2-1,y.y=-(2*(i/o))+1,_.set(y.x,y.y,1).unproject(n.object).sub(n.object.position).normalize()}function O(e){return Math.max(n.minDistance,Math.min(n.maxDistance,e))}//
// event callbacks - update the object state
//
function I(e){u.set(e.clientX,e.clientY)}function q(e){d.set(e.clientX,e.clientY)}function B(){if(1===b.length)u.set(b[0].pageX,b[0].pageY);else{let e=.5*(b[0].pageX+b[1].pageX),t=.5*(b[0].pageY+b[1].pageY);u.set(e,t)}}function k(){if(1===b.length)d.set(b[0].pageX,b[0].pageY);else{let e=.5*(b[0].pageX+b[1].pageX),t=.5*(b[0].pageY+b[1].pageY);d.set(e,t)}}function F(){let e=b[0].pageX-b[1].pageX,t=b[0].pageY-b[1].pageY,n=Math.sqrt(e*e+t*t);m.set(0,n)}function z(e){if(1==b.length)c.set(e.pageX,e.pageY);else{let t=K(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);c.set(n,r)}h.subVectors(c,u).multiplyScalar(n.rotateSpeed);let t=n.domElement;E(2*Math.PI*h.x/t.clientHeight),S(2*Math.PI*h.y/t.clientHeight),u.copy(c)}function G(e){if(1===b.length)f.set(e.pageX,e.pageY);else{let t=K(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);f.set(n,r)}p.subVectors(f,d).multiplyScalar(n.panSpeed),R(p.x,p.y),d.copy(f)}function H(e){let t=K(e),r=e.pageX-t.x,i=e.pageY-t.y,a=Math.sqrt(r*r+i*i);g.set(0,a),v.set(0,Math.pow(g.y/m.y,n.zoomSpeed)),P(v.y),m.copy(g)}//
// event handlers - FSM: listen for events and reset state
//
function V(e){!1!==n.enabled&&(0===b.length&&(n.domElement.setPointerCapture(e.pointerId),n.domElement.addEventListener("pointermove",j),n.domElement.addEventListener("pointerup",W)),b.push(e),"touch"===e.pointerType?function(e){switch(Z(e),b.length){case 1:switch(n.touches.ONE){case N.ROTATE:if(!1===n.enableRotate)return;B(),i=r.TOUCH_ROTATE;break;case N.PAN:if(!1===n.enablePan)return;k(),i=r.TOUCH_PAN;break;default:i=r.NONE}break;case 2:switch(n.touches.TWO){case N.DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;n.enableZoom&&F(),n.enablePan&&k(),i=r.TOUCH_DOLLY_PAN;break;case N.DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;n.enableZoom&&F(),n.enableRotate&&B(),i=r.TOUCH_DOLLY_ROTATE;break;default:i=r.NONE}break;default:i=r.NONE}i!==r.NONE&&n.dispatchEvent(fO)}(e):function(e){let t;switch(e.button){case 0:t=n.mouseButtons.LEFT;break;case 1:t=n.mouseButtons.MIDDLE;break;case 2:t=n.mouseButtons.RIGHT;break;default:t=-1}switch(t){case U.DOLLY:if(!1===n.enableZoom)return;D(e),m.set(e.clientX,e.clientY),i=r.DOLLY;break;case U.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enablePan)return;q(e),i=r.PAN}else{if(!1===n.enableRotate)return;I(e),i=r.ROTATE}break;case U.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enableRotate)return;I(e),i=r.ROTATE}else{if(!1===n.enablePan)return;q(e),i=r.PAN}break;default:i=r.NONE}i!==r.NONE&&n.dispatchEvent(fO)}(e))}function j(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){switch(Z(e),i){case r.TOUCH_ROTATE:if(!1===n.enableRotate)return;z(e),n.update();break;case r.TOUCH_PAN:if(!1===n.enablePan)return;G(e),n.update();break;case r.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;n.enableZoom&&H(e),n.enablePan&&G(e),n.update();break;case r.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;n.enableZoom&&H(e),n.enableRotate&&z(e),n.update();break;default:i=r.NONE}}(e):function(e){switch(i){case r.ROTATE:if(!1===n.enableRotate)return;!function(e){c.set(e.clientX,e.clientY),h.subVectors(c,u).multiplyScalar(n.rotateSpeed);let t=n.domElement;E(2*Math.PI*h.x/t.clientHeight),S(2*Math.PI*h.y/t.clientHeight),u.copy(c),n.update()}(e);break;case r.DOLLY:if(!1===n.enableZoom)return;g.set(e.clientX,e.clientY),v.subVectors(g,m),v.y>0?P(w()):v.y<0&&L(w()),m.copy(g),n.update();break;case r.PAN:if(!1===n.enablePan)return;f.set(e.clientX,e.clientY),p.subVectors(f,d).multiplyScalar(n.panSpeed),R(p.x,p.y),d.copy(f),n.update()}}(e))}function W(e){(function(e){delete M[e.pointerId];for(let t=0;t<b.length;t++)if(b[t].pointerId==e.pointerId){b.splice(t,1);return}})(e),0===b.length&&(n.domElement.releasePointerCapture(e.pointerId),n.domElement.removeEventListener("pointermove",j),n.domElement.removeEventListener("pointerup",W)),n.dispatchEvent(fI),i=r.NONE}function X(e){!1!==n.enabled&&!1!==n.enableZoom&&i===r.NONE&&(e.preventDefault(),n.dispatchEvent(fO),D(e),e.deltaY<0?L(w()):e.deltaY>0&&P(w()),n.update(),n.dispatchEvent(fI))}function Q(e){!1!==n.enabled&&!1!==n.enablePan&&function(e){let t=!1;switch(e.code){case n.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?S(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):R(0,n.keyPanSpeed),t=!0;break;case n.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?S(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):R(0,-n.keyPanSpeed),t=!0;break;case n.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?E(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):R(n.keyPanSpeed,0),t=!0;break;case n.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?E(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):R(-n.keyPanSpeed,0),t=!0}t&&(// prevent the browser from scrolling on cursor keys
e.preventDefault(),n.update())}(e)}function Y(e){!1!==n.enabled&&e.preventDefault()}function Z(e){let t=M[e.pointerId];void 0===t&&(t=new eo,M[e.pointerId]=t),t.set(e.pageX,e.pageY)}function K(e){let t=e.pointerId===b[0].pointerId?b[1]:b[0];return M[t.pointerId]}//
n.domElement.addEventListener("contextmenu",Y),n.domElement.addEventListener("pointerdown",V),n.domElement.addEventListener("pointercancel",W),n.domElement.addEventListener("wheel",X,{passive:!1}),// force an update at start
this.update()}}const fk={type:"change"};class fF extends W{constructor(e,t){super(),this.object=e,this.domElement=t,// API
// Set to false to disable this control
this.enabled=!0,this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1;// disable default target object behavior
// internals
let n=this,r=new eP,i=new eL;this.tmpQuaternion=new eP,this.status=0,this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this.moveVector=new eL(0,0,0),this.rotationVector=new eL(0,0,0),this.keydown=function(e){if(!e.altKey&&!1!==this.enabled){switch(e.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this.moveState.forward=1;break;case"KeyS":this.moveState.back=1;break;case"KeyA":this.moveState.left=1;break;case"KeyD":this.moveState.right=1;break;case"KeyR":this.moveState.up=1;break;case"KeyF":this.moveState.down=1;break;case"ArrowUp":this.moveState.pitchUp=1;break;case"ArrowDown":this.moveState.pitchDown=1;break;case"ArrowLeft":this.moveState.yawLeft=1;break;case"ArrowRight":this.moveState.yawRight=1;break;case"KeyQ":this.moveState.rollLeft=1;break;case"KeyE":this.moveState.rollRight=1}this.updateMovementVector(),this.updateRotationVector()}},this.keyup=function(e){if(!1!==this.enabled){switch(e.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this.moveState.forward=0;break;case"KeyS":this.moveState.back=0;break;case"KeyA":this.moveState.left=0;break;case"KeyD":this.moveState.right=0;break;case"KeyR":this.moveState.up=0;break;case"KeyF":this.moveState.down=0;break;case"ArrowUp":this.moveState.pitchUp=0;break;case"ArrowDown":this.moveState.pitchDown=0;break;case"ArrowLeft":this.moveState.yawLeft=0;break;case"ArrowRight":this.moveState.yawRight=0;break;case"KeyQ":this.moveState.rollLeft=0;break;case"KeyE":this.moveState.rollRight=0}this.updateMovementVector(),this.updateRotationVector()}},this.pointerdown=function(e){if(!1!==this.enabled){if(this.dragToLook)this.status++;else{switch(e.button){case 0:this.moveState.forward=1;break;case 2:this.moveState.back=1}this.updateMovementVector()}}},this.pointermove=function(e){if(!1!==this.enabled&&(!this.dragToLook||this.status>0)){let t=this.getContainerDimensions(),n=t.size[0]/2,r=t.size[1]/2;this.moveState.yawLeft=-(e.pageX-t.offset[0]-n)/n,this.moveState.pitchDown=(e.pageY-t.offset[1]-r)/r,this.updateRotationVector()}},this.pointerup=function(e){if(!1!==this.enabled){if(this.dragToLook)this.status--,this.moveState.yawLeft=this.moveState.pitchDown=0;else{switch(e.button){case 0:this.moveState.forward=0;break;case 2:this.moveState.back=0}this.updateMovementVector()}this.updateRotationVector()}},this.pointercancel=function(){!1!==this.enabled&&(this.dragToLook?(this.status=0,this.moveState.yawLeft=this.moveState.pitchDown=0):(this.moveState.forward=0,this.moveState.back=0,this.updateMovementVector()),this.updateRotationVector())},this.contextMenu=function(e){!1!==this.enabled&&e.preventDefault()},this.update=function(e){if(!1===this.enabled)return;let t=e*n.movementSpeed,a=e*n.rollSpeed;n.object.translateX(n.moveVector.x*t),n.object.translateY(n.moveVector.y*t),n.object.translateZ(n.moveVector.z*t),n.tmpQuaternion.set(n.rotationVector.x*a,n.rotationVector.y*a,n.rotationVector.z*a,1).normalize(),n.object.quaternion.multiply(n.tmpQuaternion),(i.distanceToSquared(n.object.position)>1e-6||8*(1-r.dot(n.object.quaternion))>1e-6)&&(n.dispatchEvent(fk),r.copy(n.object.quaternion),i.copy(n.object.position))},this.updateMovementVector=function(){let e=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right,this.moveVector.y=-this.moveState.down+this.moveState.up,this.moveVector.z=-e+this.moveState.back;//console.log( 'move:', [ this.moveVector.x, this.moveVector.y, this.moveVector.z ] );
},this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp,this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft,this.rotationVector.z=-this.moveState.rollRight+this.moveState.rollLeft;//console.log( 'rotate:', [ this.rotationVector.x, this.rotationVector.y, this.rotationVector.z ] );
},this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}},this.dispose=function(){this.domElement.removeEventListener("contextmenu",a),this.domElement.removeEventListener("pointerdown",s),this.domElement.removeEventListener("pointermove",o),this.domElement.removeEventListener("pointerup",A),this.domElement.removeEventListener("pointercancel",l),window.removeEventListener("keydown",u),window.removeEventListener("keyup",c)};let a=this.contextMenu.bind(this),o=this.pointermove.bind(this),s=this.pointerdown.bind(this),A=this.pointerup.bind(this),l=this.pointercancel.bind(this),u=this.keydown.bind(this),c=this.keyup.bind(this);this.domElement.addEventListener("contextmenu",a),this.domElement.addEventListener("pointerdown",s),this.domElement.addEventListener("pointermove",o),this.domElement.addEventListener("pointerup",A),this.domElement.addEventListener("pointercancel",l),window.addEventListener("keydown",u),window.addEventListener("keyup",c),this.updateMovementVector(),this.updateRotationVector()}}/**
 * Full-screen textured quad shader
 */const fz={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:/* glsl */`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:/* glsl */`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class fG{constructor(){this.isPass=!0,// if set to true, the pass is processed by the composer
this.enabled=!0,// if set to true, the pass indicates to swap read and write buffer after rendering
this.needsSwap=!0,// if set to true, the pass clears its buffer before rendering
this.clear=!1,// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.
this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}// Helper for passes that need to fill the viewport with a single quad.
const fH=new nV(-1,1,1,-1,0,1),fV=new // https://github.com/mrdoob/three.js/pull/21358
class extends t3{constructor(){super(),this.setAttribute("position",new tY([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new tY([0,2,0,0,2,0],2))}};class fj{constructor(e){this._mesh=new nc(fV,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,fH)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class fW extends fG{constructor(e,t){super(),this.textureID=void 0!==t?t:"tDiffuse",e instanceof nv?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=ng.clone(e.uniforms),this.material=new nv({name:void 0!==e.name?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new fj(this.material)}render(e,t,n/*, deltaTime, maskActive */){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?e.setRenderTarget(null):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil)),this.fsQuad.render(e)}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class fX extends fG{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n/*, deltaTime, maskActive */){let r,i;let a=e.getContext(),o=e.state;// don't update color or depth
o.buffers.color.setMask(!1),o.buffers.depth.setMask(!1),// lock buffers
o.buffers.color.setLocked(!0),o.buffers.depth.setLocked(!0),this.inverse?(r=0,i=1):(r=1,i=0),o.buffers.stencil.setTest(!0),o.buffers.stencil.setOp(a.REPLACE,a.REPLACE,a.REPLACE),o.buffers.stencil.setFunc(a.ALWAYS,r,4294967295),o.buffers.stencil.setClear(i),o.buffers.stencil.setLocked(!0),// draw into the stencil buffer
e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),// unlock color and depth buffer and make them writable for subsequent rendering/clearing
o.buffers.color.setLocked(!1),o.buffers.depth.setLocked(!1),o.buffers.color.setMask(!0),o.buffers.depth.setMask(!0),// only render where stencil is set to 1
o.buffers.stencil.setLocked(!1),o.buffers.stencil.setFunc(a.EQUAL,1,4294967295),o.buffers.stencil.setOp(a.KEEP,a.KEEP,a.KEEP),o.buffers.stencil.setLocked(!0)}}class fQ extends fG{constructor(){super(),this.needsSwap=!1}render(e/*, writeBuffer, readBuffer, deltaTime, maskActive */){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class fY{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),void 0===t){let n=e.getSize(new eo);this._width=n.width,this._height=n.height,(t=new eC(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:1016})).texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new fW(fz),this.copyPass.material.blending=0,this.clock=new oc}swapBuffers(){let e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){let t=this.passes.indexOf(e);-1!==t&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){// deltaTime value is in seconds
void 0===e&&(e=this.clock.getDelta());let t=this.renderer.getRenderTarget(),n=!1;for(let t=0,r=this.passes.length;t<r;t++){let r=this.passes[t];if(!1!==r.enabled){if(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(t),r.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),r.needsSwap){if(n){let t=this.renderer.getContext(),n=this.renderer.state.buffers.stencil;//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );
n.setFunc(t.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),//context.stencilFunc( context.EQUAL, 1, 0xffffffff );
n.setFunc(t.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==fX&&(r instanceof fX?n=!0:r instanceof fQ&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(void 0===e){let t=this.renderer.getSize(new eo);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,(e=this.renderTarget1.clone()).setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;let n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(let e=0;e<this.passes.length;e++)this.passes[e].setSize(n,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class fZ extends fG{constructor(e,t,n=null,r=null,i=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=i,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new tk}render(e,t,n/*, deltaTime, maskActive */){let r,i;let a=e.autoClear;e.autoClear=!1,null!==this.overrideMaterial&&(i=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),null!==this.clearColor&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor)),null!==this.clearAlpha&&(r=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),!0==this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),!0===this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),null!==this.clearColor&&e.setClearColor(this._oldClearColor),null!==this.clearAlpha&&e.setClearAlpha(r),null!==this.overrideMaterial&&(this.scene.overrideMaterial=i),e.autoClear=a}}function fK(){return(fK=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function fJ(e,t){return(fJ=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function f$(e){return(f$=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f0(e,t,n){return(f0=!function(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}()?function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&fJ(i,n.prototype),i}:Reflect.construct.bind()).apply(null,arguments)}function f1(e){var t="function"==typeof Map?new Map:void 0;return(f1=function(e){if(null===e||!function(e){try{return -1!==Function.toString.call(e).indexOf("[native code]")}catch(t){return"function"==typeof e}}(e))return e;if("function"!=typeof e)throw TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return f0(e,arguments,f$(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),fJ(n,e)})(e)}/**
 * Create an error file out of errors.md for development and a simple web link to the full errors
 * in production mode.
 * @private
 */var f2=/*#__PURE__*/function(e){function t(t){return function(e){if(void 0===e)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+t+" for more information.")||this)}return t.prototype=Object.create(e.prototype),t.prototype.constructor=t,fJ(t,e),t}(f1(Error));function f3(e){return Math.round(255*e)}function f4(e,t,n){return f3(e)+","+f3(t)+","+f3(n)}function f5(e,t,n,r){if(void 0===r&&(r=f4),0===t)return r(n,n,n);// formulae from https://en.wikipedia.org/wiki/HSL_and_HSV
var i=(e%360+360)%360/60,a=(1-Math.abs(2*n-1))*t,o=a*(1-Math.abs(i%2-1)),s=0,A=0,l=0;i>=0&&i<1?(s=a,A=o):i>=1&&i<2?(s=o,A=a):i>=2&&i<3?(A=a,l=o):i>=3&&i<4?(A=o,l=a):i>=4&&i<5?(s=o,l=a):i>=5&&i<6&&(s=a,l=o);var u=n-a/2;return r(s+u,A+u,l+u)}var f6={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},f8=/^#[a-fA-F0-9]{6}$/,f7=/^#[a-fA-F0-9]{8}$/,f9=/^#[a-fA-F0-9]{3}$/,pe=/^#[a-fA-F0-9]{4}$/,pt=/^rgb\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*\)$/i,pn=/^rgb(?:a)?\(\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,)?\s*(\d{1,3})\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i,pr=/^hsl\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,pi=/^hsl(?:a)?\(\s*(\d{0,3}[.]?[0-9]+(?:deg)?)\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,)?\s*(\d{1,3}[.]?[0-9]?)%\s*(?:,|\/)\s*([-+]?\d*[.]?\d+[%]?)\s*\)$/i;/**
 * Returns an RgbColor or RgbaColor object. This utility function is only useful
 * if want to extract a color component. With the color util `toColorString` you
 * can convert a RgbColor or RgbaColor object back to a string.
 *
 * @example
 * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1
 * const color1 = parseToRgb('rgb(255, 0, 0)');
 * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2
 * const color2 = parseToRgb('hsla(210, 10%, 40%, 0.75)');
 */function pa(e){if("string"!=typeof e)throw new f2(3);var t=/**
 * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.
 * @private
 */function(e){if("string"!=typeof e)return e;var t=e.toLowerCase();return f6[t]?"#"+f6[t]:e}(e);if(t.match(f8))return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16)};if(t.match(f7)){var n=parseFloat((parseInt(""+t[7]+t[8],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16),alpha:n}}if(t.match(f9))return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16)};if(t.match(pe)){var r=parseFloat((parseInt(""+t[4]+t[4],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16),alpha:r}}var i=pt.exec(t);if(i)return{red:parseInt(""+i[1],10),green:parseInt(""+i[2],10),blue:parseInt(""+i[3],10)};var a=pn.exec(t.substring(0,50));if(a)return{red:parseInt(""+a[1],10),green:parseInt(""+a[2],10),blue:parseInt(""+a[3],10),alpha:parseFloat(""+a[4])>1?parseFloat(""+a[4])/100:parseFloat(""+a[4])};var o=pr.exec(t);if(o){var s="rgb("+f5(parseInt(""+o[1],10),parseInt(""+o[2],10)/100,parseInt(""+o[3],10)/100)+")",A=pt.exec(s);if(!A)throw new f2(4,t,s);return{red:parseInt(""+A[1],10),green:parseInt(""+A[2],10),blue:parseInt(""+A[3],10)}}var l=pi.exec(t.substring(0,50));if(l){var u="rgb("+f5(parseInt(""+l[1],10),parseInt(""+l[2],10)/100,parseInt(""+l[3],10)/100)+")",c=pt.exec(u);if(!c)throw new f2(4,t,u);return{red:parseInt(""+c[1],10),green:parseInt(""+c[2],10),blue:parseInt(""+c[3],10),alpha:parseFloat(""+l[4])>1?parseFloat(""+l[4])/100:parseFloat(""+l[4])}}throw new f2(5)}var po=function(e){return 7===e.length&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e};function ps(e){var t=e.toString(16);return 1===t.length?"0"+t:t}function pA(e){return ps(Math.round(255*e))}/**
 * Returns a string value for the color. The returned result is the smallest possible hex notation.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: rgb(255, 205, 100),
 *   background: rgb({ red: 255, green: 205, blue: 100 }),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${rgb(255, 205, 100)};
 *   background: ${rgb({ red: 255, green: 205, blue: 100 })};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#ffcd64";
 *   background: "#ffcd64";
 * }
 */function pl(e,t,n){if("number"==typeof e&&"number"==typeof t&&"number"==typeof n)return po("#"+ps(e)+ps(t)+ps(n));if("object"==typeof e&&void 0===t&&void 0===n)return po("#"+ps(e.red)+ps(e.green)+ps(e.blue));throw new f2(6)}var pu=// Type definitions taken from https://github.com/gcanti/flow-static-land/blob/master/src/Fun.js
// eslint-disable-next-line no-unused-vars
// eslint-disable-next-line no-unused-vars
// eslint-disable-next-line no-redeclare
function e(t,n,r){return function(){// eslint-disable-next-line prefer-rest-params
var i=r.concat(Array.prototype.slice.call(arguments));return i.length>=n?t.apply(this,i):e(t,n,i)}}// eslint-disable-next-line no-redeclare
(r=/**
 * Increases the opacity of a color. Its range for the amount is between 0 to 1.
 *
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: opacify(0.1, 'rgba(255, 255, 255, 0.9)');
 *   background: opacify(0.2, 'hsla(0, 0%, 100%, 0.5)'),
 *   background: opacify('0.5', 'rgba(255, 0, 0, 0.2)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${opacify(0.1, 'rgba(255, 255, 255, 0.9)')};
 *   background: ${opacify(0.2, 'hsla(0, 0%, 100%, 0.5)')},
 *   background: ${opacify('0.5', 'rgba(255, 0, 0, 0.2)')},
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#fff";
 *   background: "rgba(255,255,255,0.7)";
 *   background: "rgba(255,0,0,0.7)";
 * }
 */function(e,t){if("transparent"===t)return t;var n=pa(t),r="number"==typeof n.alpha?n.alpha:1;return(/**
 * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.
 *
 * Can also be used to fade a color by passing a hex value or named CSS color along with an alpha value.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: rgba(255, 205, 100, 0.7),
 *   background: rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 }),
 *   background: rgba(255, 205, 100, 1),
 *   background: rgba('#ffffff', 0.4),
 *   background: rgba('black', 0.7),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${rgba(255, 205, 100, 0.7)};
 *   background: ${rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 })};
 *   background: ${rgba(255, 205, 100, 1)};
 *   background: ${rgba('#ffffff', 0.4)};
 *   background: ${rgba('black', 0.7)};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "rgba(255,205,100,0.7)";
 *   background: "rgba(255,205,100,0.7)";
 *   background: "#ffcd64";
 *   background: "rgba(255,255,255,0.4)";
 *   background: "rgba(0,0,0,0.7)";
 * }
 */function(e,t,n,r){if("string"==typeof e&&"number"==typeof t){var i=pa(e);return"rgba("+i.red+","+i.green+","+i.blue+","+t+")"}if("number"==typeof e&&"number"==typeof t&&"number"==typeof n&&"number"==typeof r)return r>=1?pl(e,t,n):"rgba("+e+","+t+","+n+","+r+")";if("object"==typeof e&&void 0===t&&void 0===n&&void 0===r)return e.alpha>=1?pl(e.red,e.green,e.blue):"rgba("+e.red+","+e.green+","+e.blue+","+e.alpha+")";throw new f2(7)}(fK({},n,{alpha:Math.max(0,Math.min(1,(100*r+100*parseFloat(e))/100))})))}// prettier-ignore
,r.length,[]),sn=I("8PNKb");function pc(e){return function(e){if(Array.isArray(e))return pd(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||ph(e)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ph(e,t){if(e){if("string"==typeof e)return pd(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return pd(e,t)}}function pd(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===n&&r.firstChild?r.insertBefore(i,r.firstChild):r.appendChild(i),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(document.createTextNode(e))}}(".scene-nav-info {\n  bottom: 5px;\n  width: 100%;\n  text-align: center;\n  color: slategrey;\n  opacity: 0.7;\n  font-size: 10px;\n}\n\n.scene-tooltip {\n  top: 0;\n  color: lavender;\n  font-size: 15px;\n}\n\n.scene-nav-info, .scene-tooltip {\n  position: absolute;\n  font-family: sans-serif;\n  pointer-events: none;\n  user-select: none;\n}\n\n.scene-container canvas:focus {\n  outline: none;\n}");var pf=window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{WebGLRenderer:iV,Scene:class extends tb{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t}},PerspectiveCamera:ny,Raycaster:class{constructor(e,t,n=0,r=1/0){this.ray=new e6(e,t),// direction is assumed to be normalized (for accurate distance calculations)
this.near=n,this.far=r,this.camera=null,this.layers=new tA,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){// direction is assumed to be normalized (for accurate distance calculations)
this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return oS(e,this,n,t),n.sort(oE),n}intersectObjects(e,t=!0,n=[]){for(let r=0,i=e.length;r<i;r++)oS(e[r],this,n,t);return n.sort(oE),n}},SRGBColorSpace:B,TextureLoader:oi,Vector2:eo,Vector3:eL,Box3:eI,Color:tk,Mesh:nc,SphereGeometry:aX,MeshBasicMaterial:tH,BackSide:1,EventDispatcher:W,MOUSE:U,Quaternion:eP,Spherical:oT,Clock:oc},pp=st({props:{width:{default:window.innerWidth,onChange:function(e,t,n){isNaN(e)&&(t.width=n)}},height:{default:window.innerHeight,onChange:function(e,t,n){isNaN(e)&&(t.height=n)}},backgroundColor:{default:"#000011"},backgroundImageUrl:{},onBackgroundImageLoaded:{},showNavInfo:{default:!0},skyRadius:{default:5e4},objects:{default:[]},lights:{default:[]},enablePointerInteraction:{default:!0,onChange:function(e,t){// Reset hover state
t.hoverObj=null,t.toolTipElem&&(t.toolTipElem.innerHTML="")},triggerUpdate:!1},lineHoverPrecision:{default:1,triggerUpdate:!1},hoverOrderComparator:{default:function(){return -1},triggerUpdate:!1},// keep existing order by default
hoverFilter:{default:function(){return!0},triggerUpdate:!1},// exclude objects from interaction
tooltipContent:{triggerUpdate:!1},hoverDuringDrag:{default:!1,triggerUpdate:!1},clickAfterDrag:{default:!1,triggerUpdate:!1},onHover:{default:function(){},triggerUpdate:!1},onClick:{default:function(){},triggerUpdate:!1},onRightClick:{triggerUpdate:!1}},methods:{tick:function(e){if(e.initialised){if(e.controls.update&&e.controls.update(e.clock.getDelta()),e.postProcessingComposer?e.postProcessingComposer.render()// if using postprocessing, switch the output to it
:e.renderer.render(e.scene,e.camera),e.extraRenderers.forEach(function(t){return t.render(e.scene,e.camera)}),e.enablePointerInteraction){// Update tooltip and trigger onHover events
var t=null;if(e.hoverDuringDrag||!e.isPointerDragging){var n=this.intersectingObjects(e.pointerPos.x,e.pointerPos.y).filter(function(t){return e.hoverFilter(t.object)}).sort(function(t,n){return e.hoverOrderComparator(t.object,n.object)}),r=n.length?n[0]:null;t=r?r.object:null,e.intersectionPoint=r?r.point:null}t!==e.hoverObj&&(e.onHover(t,e.hoverObj),e.toolTipElem.innerHTML=t&&Ax(e.tooltipContent)(t)||"",e.hoverObj=t)}sn.update()}return this},getPointerPos:function(e){var t=e.pointerPos;return{x:t.x,y:t.y}},cameraPosition:function(e,t,n,r){var i=e.camera;// Setter
if(t&&e.initialised){var a=n||{x:0,y:0,z:0};if(r){var o=Object.assign({},i.position),s=u();new sn.Tween(o).to(t,r).easing(sn.Easing.Quadratic.Out).onUpdate(A).start(),// Face direction in 1/3rd of time
new sn.Tween(s).to(a,r/3).easing(sn.Easing.Quadratic.Out).onUpdate(l).start()}else // no animation
A(t),l(a);return this}// Getter
return Object.assign({},i.position,{lookAt:u()});//
function A(e){var t=e.x,n=e.y,r=e.z;void 0!==t&&(i.position.x=t),void 0!==n&&(i.position.y=n),void 0!==r&&(i.position.z=r)}function l(t){var n=new pf.Vector3(t.x,t.y,t.z);e.controls.target?e.controls.target=n:i.lookAt(n);// note: lookAt may be overridden by other controls in some cases
}function u(){return Object.assign(new pf.Vector3(0,0,-1e3).applyQuaternion(i.quaternion).add(i.position))}},zoomToFit:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,r=arguments.length,i=Array(r>3?r-3:0),a=3;a<r;a++)i[a-3]=arguments[a];return this.fitToBbox(this.getBbox.apply(this,i),t,n)},fitToBbox:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10,i=e.camera;if(t){var a=new pf.Vector3(0,0,0),o=2*Math.max.apply(Math,pc(Object.entries(t).map(function(e){var t=function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a,o,s=[],A=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;A=!1}else for(;!(A=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);A=!0);}catch(e){l=!0,i=e}finally{try{if(!A&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(l)throw i}}return s}}(e,2)||ph(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return Math.max.apply(Math,pc(r.map(function(e){return Math.abs(a[n]-e)})))})))/Math.atan((1-2*r/e.height)*i.fov*Math.PI/180),s=o/i.aspect,A=Math.max(o,s);// reset camera aim to center
if(A>0){var l=a.clone().sub(i.position).normalize().multiplyScalar(-A);this.cameraPosition(l,a,n)}}return this},getBbox:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){return!0},n=new pf.Box3(new pf.Vector3(0,0,0),new pf.Vector3(0,0,0)),r=e.objects.filter(t);return r.length?(r.forEach(function(e){return n.expandByObject(e)}),Object.assign.apply(Object,pc(["x","y","z"].map(function(e){var t,r,i,a;return t={},r=e,i=[n.min[e],n.max[e]],(r="symbol"==typeof(a=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(r,"string"))?a:String(a))in t?Object.defineProperty(t,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[r]=i,t})))):null},getScreenCoords:function(e,t,n,r){var i=new pf.Vector3(t,n,r);return i.project(this.camera()),{// align relative pos to canvas dimensions
x:(i.x+1)*e.width/2,y:-(i.y-1)*e.height/2}},getSceneCoords:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=new pf.Vector2(t/e.width*2-1,-(2*(n/e.height))+1),a=new pf.Raycaster;return a.setFromCamera(i,e.camera),Object.assign({},a.ray.at(r,new pf.Vector3))},intersectingObjects:function(e,t,n){var r=new pf.Vector2(t/e.width*2-1,-(2*(n/e.height))+1),i=new pf.Raycaster;return i.params.Line.threshold=e.lineHoverPrecision,i.setFromCamera(r,e.camera),i.intersectObjects(e.objects,!0)},renderer:function(e){return e.renderer},scene:function(e){return e.scene},camera:function(e){return e.camera},postProcessingComposer:function(e){return e.postProcessingComposer},controls:function(e){return e.controls},tbControls:function(e){return e.controls}// to be deprecated
},stateInit:function(){return{scene:new pf.Scene,camera:new pf.PerspectiveCamera,clock:new pf.Clock}},init:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.controlType,i=void 0===r?"trackball":r,a=n.rendererConfig,o=n.extraRenderers,s=n.waitForLoadComplete;// Wipe DOM
e.innerHTML="",// Add relative container
e.appendChild(t.container=document.createElement("div")),t.container.className="scene-container",t.container.style.position="relative",// Add nav info section
t.container.appendChild(t.navInfo=document.createElement("div")),t.navInfo.className="scene-nav-info",t.navInfo.textContent=({orbit:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",trackball:"Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan",fly:"WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw"})[i]||"",t.navInfo.style.display=t.showNavInfo?null:"none",// Setup tooltip
t.toolTipElem=document.createElement("div"),t.toolTipElem.classList.add("scene-tooltip"),t.container.appendChild(t.toolTipElem),// Capture pointer coords on move or touchstart
t.pointerPos=new pf.Vector2,t.pointerPos.x=-2,t.pointerPos.y=-2,["pointermove","pointerdown"].forEach(function(e){return t.container.addEventListener(e,function(n){if(// track click state
"pointerdown"===e&&(t.isPointerPressed=!0),// detect point drag
!t.isPointerDragging&&"pointermove"===n.type&&(n.pressure>0||t.isPointerPressed// ev.pressure always 0 on Safari, so we used the isPointerPressed tracker
)&&("touch"!==n.pointerType||void 0===n.movementX||[n.movementX,n.movementY].some(function(e){return Math.abs(e)>1})// relax drag trigger sensitivity on touch events
)&&(t.isPointerDragging=!0),t.enablePointerInteraction){// update the pointer pos
var r,i,a,o=(r=t.container.getBoundingClientRect(),i=window.pageXOffset||document.documentElement.scrollLeft,a=window.pageYOffset||document.documentElement.scrollTop,{top:r.top+a,left:r.left+i});t.pointerPos.x=n.pageX-o.left,t.pointerPos.y=n.pageY-o.top,// Move tooltip
t.toolTipElem.style.top="".concat(t.pointerPos.y,"px"),t.toolTipElem.style.left="".concat(t.pointerPos.x,"px"),// adjust horizontal position to not exceed canvas boundaries
t.toolTipElem.style.transform="translate(-".concat(t.pointerPos.x/t.width*100,"%, ").concat(t.height-t.pointerPos.y<100?"calc(-100% - 8px)":"21px",")")}},{passive:!0})}),// Handle click events on objs
t.container.addEventListener("pointerup",function(e){t.isPointerPressed=!1,(!t.isPointerDragging||(t.isPointerDragging=!1,t.clickAfterDrag))&&requestAnimationFrame(function(){0===e.button&&t.onClick(t.hoverObj||null,e,t.intersectionPoint),2===e.button&&t.onRightClick&&t.onRightClick(t.hoverObj||null,e,t.intersectionPoint)})},{passive:!0,capture:!0}),t.container.addEventListener("contextmenu",function(e){t.onRightClick&&e.preventDefault();// prevent default contextmenu behavior and allow pointerup to fire instead
}),// Setup renderer, camera and controls
t.renderer=new pf.WebGLRenderer(Object.assign({antialias:!0,alpha:!0},void 0===a?{}:a)),t.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),t.container.appendChild(t.renderer.domElement),// Setup extra renderers
t.extraRenderers=void 0===o?[]:o,t.extraRenderers.forEach(function(e){// overlay them on top of main renderer
e.domElement.style.position="absolute",e.domElement.style.top="0px",e.domElement.style.pointerEvents="none",t.container.appendChild(e.domElement)}),// configure post-processing composer
t.postProcessingComposer=new fY(t.renderer),t.postProcessingComposer.addPass(new fZ(t.scene,t.camera)),// configure controls
t.controls=new({trackball:fL,orbit:fB,fly:fF})[i](t.camera,t.renderer.domElement),"fly"===i&&(t.controls.movementSpeed=300,t.controls.rollSpeed=Math.PI/6,t.controls.dragToLook=!0),("trackball"===i||"orbit"===i)&&(t.controls.minDistance=.1,t.controls.maxDistance=t.skyRadius,t.controls.addEventListener("start",function(){t.controlsEngaged=!0}),t.controls.addEventListener("change",function(){t.controlsEngaged&&(t.controlsDragging=!0)}),t.controls.addEventListener("end",function(){t.controlsEngaged=!1,t.controlsDragging=!1})),[t.renderer,t.postProcessingComposer].concat(pc(t.extraRenderers)).forEach(function(e){return e.setSize(t.width,t.height)}),t.camera.aspect=t.width/t.height,t.camera.updateProjectionMatrix(),t.camera.position.z=1e3,// add sky
t.scene.add(t.skysphere=new pf.Mesh),t.skysphere.visible=!1,t.loadComplete=t.scene.visible=!(void 0===s||s),window.scene=t.scene},update:function(e,t){if(e.width&&e.height&&(t.hasOwnProperty("width")||t.hasOwnProperty("height"))&&(e.container.style.width="".concat(e.width,"px"),e.container.style.height="".concat(e.height,"px"),[e.renderer,e.postProcessingComposer].concat(pc(e.extraRenderers)).forEach(function(t){return t.setSize(e.width,e.height)}),e.camera.aspect=e.width/e.height,e.camera.updateProjectionMatrix()),t.hasOwnProperty("skyRadius")&&e.skyRadius&&(e.controls.hasOwnProperty("maxDistance")&&t.skyRadius&&(e.controls.maxDistance=Math.min(e.controls.maxDistance,e.skyRadius)),e.camera.far=2.5*e.skyRadius,e.camera.updateProjectionMatrix(),e.skysphere.geometry=new pf.SphereGeometry(e.skyRadius)),t.hasOwnProperty("backgroundColor")){var n=pa(e.backgroundColor).alpha;void 0===n&&(n=1),e.renderer.setClearColor(new pf.Color(pu(1,e.backgroundColor)),n)}//
function r(){e.loadComplete=e.scene.visible=!0}t.hasOwnProperty("backgroundImageUrl")&&(e.backgroundImageUrl?new pf.TextureLoader().load(e.backgroundImageUrl,function(t){t.colorSpace=pf.SRGBColorSpace,e.skysphere.material=new pf.MeshBasicMaterial({map:t,side:pf.BackSide}),e.skysphere.visible=!0,// triggered when background image finishes loading (asynchronously to allow 1 frame to load texture)
e.onBackgroundImageLoaded&&setTimeout(e.onBackgroundImageLoaded),e.loadComplete||r()}):(e.skysphere.visible=!1,e.skysphere.material.map=null,e.loadComplete||r())),t.hasOwnProperty("showNavInfo")&&(e.navInfo.style.display=e.showNavInfo?null:"none"),t.hasOwnProperty("lights")&&((t.lights||[]).forEach(function(t){return e.scene.remove(t)}),e.lights.forEach(function(t){return e.scene.add(t)})),t.hasOwnProperty("objects")&&((t.objects||[]).forEach(function(t){return e.scene.remove(t)}),e.objects.forEach(function(t){return e.scene.add(t)}))}}),sn=I("8PNKb");function pm(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function pg(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?pm(Object(n),!0).forEach(function(t){pv(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):pm(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function pv(e,t,n){var r;return(t="symbol"==typeof(r=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"))?r:String(r))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p_(e){return function(e){if(Array.isArray(e))return py(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return py(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return py(e,t)}}(e)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function py(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function px(e,t){var n=new t;// To extract defaults
return n._destructor&&n._destructor(),{linkProp:function(t){// link property config
return{default:n[t](),onChange:function(n,r){r[e][t](n)},triggerUpdate:!1}},linkMethod:function(t){// link method pass-through
return function(n){for(var r=n[e],i=arguments.length,a=Array(i>1?i-1:0),o=1;o<i;o++)a[o-1]=arguments[o];var s=r[t].apply(r,a);return s===r?this// chain based on the parent object, not the inner kapsule
:s}}}}!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],i=document.createElement("style");i.type="text/css","top"===n&&r.firstChild?r.insertBefore(i,r.firstChild):r.appendChild(i),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(document.createTextNode(e))}}(".scene-container .clickable {\n  cursor: pointer;\n}");var pb=["rendererConfig","waitForGlobeReady"],pM=pg(pg({},window.THREE?window.THREE// Prefer consumption from global THREE, if exists
:{AmbientLight:class extends oa{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}},DirectionalLight:class extends oa{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(tb.DEFAULT_UP),this.updateMatrix(),this.target=new tb,this.shadow=new ou}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},Vector2:eo}),{},{CSS2DRenderer:class{constructor(e={}){let t,n,r,i;let a=this,o={objects:new WeakMap},s=void 0!==e.element?e.element:document.createElement("div");s.style.overflow="hidden",this.domElement=s,this.getSize=function(){return{width:t,height:n}},this.render=function(e,t){!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),oD.copy(t.matrixWorldInverse),oO.multiplyMatrices(t.projectionMatrix,oD),function e(t,n,A){if(t.isCSS2DObject){oL.setFromMatrixPosition(t.matrixWorld),oL.applyMatrix4(oO);let e=!0===t.visible&&oL.z>=-1&&oL.z<=1&&!0===t.layers.test(A.layers);if(t.element.style.display=!0===e?"":"none",!0===e){t.onBeforeRender(a,n,A);let e=t.element;e.style.transform="translate("+-100*t.center.x+"%,"+-100*t.center.y+"%)translate("+(oL.x*r+r)+"px,"+(-oL.y*i+i)+"px)",e.parentNode!==s&&s.appendChild(e),t.onAfterRender(a,n,A)}let l={distanceToCameraSquared:(oI.setFromMatrixPosition(A.matrixWorld),oq.setFromMatrixPosition(t.matrixWorld),oI.distanceToSquared(oq))};o.objects.set(t,l)}for(let r=0,i=t.children.length;r<i;r++)e(t.children[r],n,A)}(e,e,t),function(e){let t=(function(e){let t=[];return e.traverse(function(e){e.isCSS2DObject&&t.push(e)}),t})(e).sort(function(e,t){if(e.renderOrder!==t.renderOrder)return t.renderOrder-e.renderOrder;let n=o.objects.get(e).distanceToCameraSquared,r=o.objects.get(t).distanceToCameraSquared;return n-r}),n=t.length;for(let e=0,r=t.length;e<r;e++)t[e].element.style.zIndex=n-e}(e)},this.setSize=function(e,a){t=e,n=a,r=t/2,i=n/2,s.style.width=e+"px",s.style.height=a+"px"}}}}),pw=px("globe",fT),pE=Object.assign.apply(Object,p_(["globeImageUrl","bumpImageUrl","showGlobe","showGraticules","showAtmosphere","atmosphereColor","atmosphereAltitude","onGlobeReady","pointsData","pointLat","pointLng","pointColor","pointAltitude","pointRadius","pointResolution","pointsMerge","pointsTransitionDuration","arcsData","arcStartLat","arcStartLng","arcEndLat","arcEndLng","arcColor","arcAltitude","arcAltitudeAutoScale","arcStroke","arcCurveResolution","arcCircularResolution","arcDashLength","arcDashGap","arcDashInitialGap","arcDashAnimateTime","arcsTransitionDuration","polygonsData","polygonGeoJsonGeometry","polygonCapColor","polygonCapMaterial","polygonSideColor","polygonSideMaterial","polygonStrokeColor","polygonAltitude","polygonCapCurvatureResolution","polygonsTransitionDuration","pathsData","pathPoints","pathPointLat","pathPointLng","pathPointAlt","pathResolution","pathColor","pathStroke","pathDashLength","pathDashGap","pathDashInitialGap","pathDashAnimateTime","pathTransitionDuration","heatmapsData","heatmapPoints","heatmapPointLat","heatmapPointLng","heatmapPointWeight","heatmapBandwidth","heatmapColorFn","heatmapColorSaturation","heatmapBaseAltitude","heatmapTopAltitude","heatmapsTransitionDuration","hexBinPointsData","hexBinPointLat","hexBinPointLng","hexBinPointWeight","hexBinResolution","hexMargin","hexTopCurvatureResolution","hexTopColor","hexSideColor","hexAltitude","hexBinMerge","hexTransitionDuration","hexPolygonsData","hexPolygonGeoJsonGeometry","hexPolygonColor","hexPolygonAltitude","hexPolygonResolution","hexPolygonMargin","hexPolygonUseDots","hexPolygonCurvatureResolution","hexPolygonDotResolution","hexPolygonsTransitionDuration","tilesData","tileLat","tileLng","tileAltitude","tileWidth","tileHeight","tileUseGlobeProjection","tileMaterial","tileCurvatureResolution","tilesTransitionDuration","ringsData","ringLat","ringLng","ringAltitude","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelRotation","labelText","labelSize","labelTypeFace","labelColor","labelResolution","labelIncludeDot","labelDotRadius","labelDotOrientation","labelsTransitionDuration","htmlElementsData","htmlLat","htmlLng","htmlAltitude","htmlElement","htmlTransitionDuration","objectsData","objectLat","objectLng","objectAltitude","objectRotation","objectFacesSurface","objectThreeObject","customLayerData","customThreeObject","customThreeObjectUpdate"].map(function(e){return pv({},e,pw.linkProp(e))}))),pS=Object.assign.apply(Object,p_(["globeMaterial","getGlobeRadius","getCoords","toGeoCoords"].map(function(e){return pv({},e,pw.linkMethod(e))}))),pT=px("renderObjs",pp),pC=Object.assign.apply(Object,p_(["width","height","backgroundColor","backgroundImageUrl","enablePointerInteraction"].map(function(e){return pv({},e,pT.linkProp(e))}))),pR=Object.assign.apply(Object,p_(["lights","postProcessingComposer"].map(function(e){return pv({},e,pT.linkMethod(e))}))),pP=st({props:pg(pg({onZoom:{triggerUpdate:!1},onGlobeClick:{triggerUpdate:!1},onGlobeRightClick:{triggerUpdate:!1},pointLabel:{default:"name",triggerUpdate:!1},onPointClick:{triggerUpdate:!1},onPointRightClick:{triggerUpdate:!1},onPointHover:{triggerUpdate:!1},arcLabel:{default:"name",triggerUpdate:!1},onArcClick:{triggerUpdate:!1},onArcRightClick:{triggerUpdate:!1},onArcHover:{triggerUpdate:!1},polygonLabel:{default:"name",triggerUpdate:!1},onPolygonClick:{triggerUpdate:!1},onPolygonRightClick:{triggerUpdate:!1},onPolygonHover:{triggerUpdate:!1},pathLabel:{default:"name",triggerUpdate:!1},onPathClick:{triggerUpdate:!1},onPathRightClick:{triggerUpdate:!1},onPathHover:{triggerUpdate:!1},onHeatmapClick:{triggerUpdate:!1},onHeatmapRightClick:{triggerUpdate:!1},onHeatmapHover:{triggerUpdate:!1},hexLabel:{triggerUpdate:!1},onHexClick:{triggerUpdate:!1},onHexRightClick:{triggerUpdate:!1},onHexHover:{triggerUpdate:!1},hexPolygonLabel:{triggerUpdate:!1},onHexPolygonClick:{triggerUpdate:!1},onHexPolygonRightClick:{triggerUpdate:!1},onHexPolygonHover:{triggerUpdate:!1},tileLabel:{default:"name",triggerUpdate:!1},onTileClick:{triggerUpdate:!1},onTileRightClick:{triggerUpdate:!1},onTileHover:{triggerUpdate:!1},labelLabel:{triggerUpdate:!1},onLabelClick:{triggerUpdate:!1},onLabelRightClick:{triggerUpdate:!1},onLabelHover:{triggerUpdate:!1},objectLabel:{default:"name",triggerUpdate:!1},onObjectClick:{triggerUpdate:!1},onObjectRightClick:{triggerUpdate:!1},onObjectHover:{triggerUpdate:!1},customLayerLabel:{default:"name",triggerUpdate:!1},onCustomLayerClick:{triggerUpdate:!1},onCustomLayerRightClick:{triggerUpdate:!1},onCustomLayerHover:{triggerUpdate:!1},pointerEventsFilter:{default:function(){return!0},triggerUpdate:!1,onChange:function(e,t){return t.renderObjs.hoverFilter(function(t){return e(t,t.__data)})}},lineHoverPrecision:{default:.2,triggerUpdate:!1,onChange:function(e,t){return t.renderObjs.lineHoverPrecision(e)}}},pE),pC),methods:pg(pg({pauseAnimation:function(e){var t;return null!==e.animationFrameRequestId&&(cancelAnimationFrame(e.animationFrameRequestId),e.animationFrameRequestId=null),null===(t=e.globe)||void 0===t||t.pauseAnimation(),this},resumeAnimation:function(e){var t;return null===e.animationFrameRequestId&&this._animationCycle(),null===(t=e.globe)||void 0===t||t.resumeAnimation(),this},_animationCycle:function(e){// Frame cycle
e.renderObjs.tick(),e.animationFrameRequestId=requestAnimationFrame(this._animationCycle)},pointOfView:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=e.globe.toGeoCoords(e.renderObjs.cameraPosition());// Getter
if(void 0===t.lat&&void 0===t.lng&&void 0===t.altitude)return r;// Setter
var i=Object.assign({},r,t);if(["lat","lng","altitude"].forEach(function(e){return i[e]=+i[e]}),n){// Avoid rotating more than 180deg longitude
for(;r.lng-i.lng>180;)r.lng-=360;for(;r.lng-i.lng<-180;)r.lng+=360;new sn.Tween(r).to(i,n).easing(sn.Easing.Cubic.InOut).onUpdate(a).start()}else a(i);return this;function a(t){var n=t.lat,r=t.lng,i=t.altitude;e.renderObjs.cameraPosition(e.globe.getCoords(n,r,i))}},getScreenCoords:function(e){for(var t,n=arguments.length,r=Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];var a=(t=e.globe).getCoords.apply(t,r);return e.renderObjs.getScreenCoords(a.x,a.y,a.z)},toGlobeCoords:function(e,t,n){var r=e.renderObjs.intersectingObjects(t,n).find(function(e){return"globe"===e.object.__globeObjType});if(!r)return null;// coords outside globe
var i=e.globe.toGeoCoords(r.point);return{lat:i.lat,lng:i.lng}},scene:function(e){return e.renderObjs.scene()},// Expose scene
camera:function(e){return e.renderObjs.camera()},// Expose camera
renderer:function(e){return e.renderObjs.renderer()},// Expose renderer
controls:function(e){return e.renderObjs.controls()},// Expose controls
_destructor:function(e){e.globe._destructor(),this.pauseAnimation(),this.pointsData([]),this.arcsData([]),this.polygonsData([]),this.pathsData([]),this.heatmapsData([]),this.hexBinPointsData([]),this.hexPolygonsData([]),this.tilesData([]),this.labelsData([]),this.htmlElementsData([]),this.objectsData([]),this.customLayerData([])}},pS),pR),stateInit:function(e){var t=e.rendererConfig,n=e.waitForGlobeReady,r=void 0===n||n,i=new fT(pg({waitForGlobeReady:r},function(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}(e,pb)));return{globe:i,renderObjs:pp({controlType:"orbit",rendererConfig:t,waitForLoadComplete:r,extraRenderers:[new pM.CSS2DRenderer]// Used in HTML elements layer
}).skyRadius(500*i.getGlobeRadius()).showNavInfo(!1).objects([i])// Populate scene
.lights([new pM.AmbientLight(13421772,Math.PI),new pM.DirectionalLight(16777215,.6*Math.PI)])}},init:function(e,t){var n=this;// Wipe DOM
e.innerHTML="",// Add relative container
e.appendChild(t.container=document.createElement("div")),t.container.style.position="relative";// Add renderObjs
var r=document.createElement("div");t.container.appendChild(r),t.renderObjs(r),// inject renderer size on three-globe
t.globe.rendererSize(t.renderObjs.renderer().getSize(new pM.Vector2)),// set initial distance
this.pointOfView({altitude:2.5});// calibrate orbit controls
var i=t.globe.getGlobeRadius(),a=t.renderObjs.controls();a.minDistance=1.01*i,a.maxDistance=100*i,a.enablePan=!1,a.enableDamping=!0,a.dampingFactor=.1,a.rotateSpeed=.3,a.zoomSpeed=.3,a.addEventListener("change",function(){// adjust controls speed based on altitude
var e=n.pointOfView();a.rotateSpeed=.2*e.altitude,a.zoomSpeed=(e.altitude+1)*.1,// Update three-globe pov when camera moves, for proper hiding of elements
t.globe.setPointOfView(t.renderObjs.camera().position),t.onZoom&&t.onZoom(e)});// config renderObjs
var o=function(e){// recurse up object chain until finding the globe object
for(var t=e;t&&!t.hasOwnProperty("__globeObjType");)t=t.parent;return t},s={point:function(e){return e},arc:function(e){return e},polygon:function(e){return e.data},path:function(e){return e},heatmap:function(e){return e},hexbin:function(e){return e},hexPolygon:function(e){return e},tile:function(e){return e},label:function(e){return e},object:function(e){return e},custom:function(e){return e}};t.renderObjs.renderer().useLegacyLights=!1,t.renderObjs.hoverOrderComparator(function(e,t){var n=o(e),r=o(t),i=function(e){return!e};return i(n)-i(r)}).tooltipContent(function(e){var n={point:t.pointLabel,arc:t.arcLabel,polygon:t.polygonLabel,path:t.pathLabel,hexbin:t.hexLabel,hexPolygon:t.hexPolygonLabel,tile:t.tileLabel,label:t.labelLabel,object:t.objectLabel,custom:t.customLayerLabel},r=o(e),i=r&&r.__globeObjType;return r&&i&&n.hasOwnProperty(i)&&s.hasOwnProperty(i)&&Ax(n[i])(s[i](r.__data))||""}).onHover(function(e){// Update tooltip and trigger onHover events
var n={point:t.onPointHover,arc:t.onArcHover,polygon:t.onPolygonHover,path:t.onPathHover,heatmap:t.onHeatmapHover,hexbin:t.onHexHover,hexPolygon:t.onHexPolygonHover,tile:t.onTileHover,label:t.onLabelHover,object:t.onObjectHover,custom:t.onCustomLayerHover},r={globe:t.onGlobeClick,point:t.onPointClick,arc:t.onArcClick,polygon:t.onPolygonClick,path:t.onPathClick,heatmap:t.onHeatmapClick,hexbin:t.onHexClick,hexPolygon:t.onHexPolygonClick,tile:t.onTileClick,label:t.onLabelClick,object:t.onObjectClick,custom:t.onCustomLayerClick},i=o(e);if(// ignore non-recognised obj types
i&&!n.hasOwnProperty(i.__globeObjType)&&(i=null),i!==t.hoverObj){var a=t.hoverObj?t.hoverObj.__globeObjType:null,A=t.hoverObj?s[a](t.hoverObj.__data):null,l=i?i.__globeObjType:null,u=i?s[l](i.__data):null;a&&a!==l&&n[a]&&n[a](null,A),l&&n[l]&&n[l](u,a===l?A:null),// set pointer if hovered object is clickable
t.renderObjs.renderer().domElement.classList[l&&r[l]?"add":"remove"]("clickable"),t.hoverObj=i}}).onClick(function(e,r,i){if(e){// Handle click events on objects
var a={globe:t.onGlobeClick,point:t.onPointClick,arc:t.onArcClick,polygon:t.onPolygonClick,path:t.onPathClick,heatmap:t.onHeatmapClick,hexbin:t.onHexClick,hexPolygon:t.onHexPolygonClick,tile:t.onTileClick,label:t.onLabelClick,object:t.onObjectClick,custom:t.onCustomLayerClick},A=o(e),l=A.__globeObjType;if(A&&a.hasOwnProperty(l)&&a[l]){var u=[r];// include click coords
if("globe"===l){var c=n.toGeoCoords(i),h=c.lat,d=c.lng;u.unshift({lat:h,lng:d})}else u.push(n.toGeoCoords(i));s.hasOwnProperty(l)&&u.unshift(s[l](A.__data)),a[l].apply(a,u)}}// ignore background clicks
}).onRightClick(function(e,r,i){if(e){// Handle right-click events
var a={globe:t.onGlobeRightClick,point:t.onPointRightClick,arc:t.onArcRightClick,polygon:t.onPolygonRightClick,path:t.onPathRightClick,heatmap:t.onHeatmapRightClick,hexbin:t.onHexRightClick,hexPolygon:t.onHexPolygonRightClick,tile:t.onTileRightClick,label:t.onLabelRightClick,object:t.onObjectRightClick,custom:t.onCustomLayerRightClick},A=o(e),l=A.__globeObjType;if(A&&a.hasOwnProperty(l)&&a[l]){var u=[r];// include click coords
if("globe"===l){var c=n.toGeoCoords(i),h=c.lat,d=c.lng;u.unshift({lat:h,lng:d})}else u.push(n.toGeoCoords(i));s.hasOwnProperty(l)&&u.unshift(s[l](A.__data)),a[l].apply(a,u)}}// ignore background clicks
}),//
// Kick-off renderer
this._animationCycle()}}),pL={},pD={};function pO(e){return Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+'] || ""'}).join(",")+"}")}// Compute unique columns in order of discovery.
function pI(e){var t=Object.create(null),n=[];return e.forEach(function(e){for(var r in e)r in t||n.push(t[r]=r)}),n}function pq(e,t){var n=e+"",r=n.length;return r<t?Array(t-r+1).join(0)+n:n}var pU=function(e){var t=RegExp('["'+e+"\n\r]"),n=e.charCodeAt(0);function r(e,t){var r,i=[],a=e.length,o=0,s=0,A=a<=0,l=!1;// current token followed by EOL?
function u(){if(A)return pD;if(l)return l=!1,pL;// Unescape quotes.
var t,r,i=o;if(34===e.charCodeAt(i)){for(;o++<a&&34!==e.charCodeAt(o)||34===e.charCodeAt(++o););return(t=o)>=a?A=!0:10===(r=e.charCodeAt(o++))?l=!0:13===r&&(l=!0,10===e.charCodeAt(o)&&++o),e.slice(i+1,t-1).replace(/""/g,'"')}// Find next delimiter or newline.
for(;o<a;){if(10===(r=e.charCodeAt(t=o++)))l=!0;else if(13===r)l=!0,10===e.charCodeAt(o)&&++o;else if(r!==n)continue;return e.slice(i,t)}// Return last token before EOF.
return A=!0,e.slice(i,a)}for(10===e.charCodeAt(a-1)&&--a,13===e.charCodeAt(a-1)&&--a;(r=u())!==pD;){for(var c=[];r!==pL&&r!==pD;)c.push(r),r=u();t&&null==(c=t(c,s++))||i.push(c)}return i}function i(t,n){return t.map(function(t){return n.map(function(e){return o(t[e])}).join(e)})}function a(t){return t.map(o).join(e)}function o(e){var n,r,i,a,o,s;return null==e?"":e instanceof Date?(r=(n=e).getUTCHours(),i=n.getUTCMinutes(),a=n.getUTCSeconds(),o=n.getUTCMilliseconds(),isNaN(n)?"Invalid Date":((s=n.getUTCFullYear())<0?"-"+pq(-s,6):s>9999?"+"+pq(s,6):pq(s,4))+"-"+pq(n.getUTCMonth()+1,2)+"-"+pq(n.getUTCDate(),2)+(o?"T"+pq(r,2)+":"+pq(i,2)+":"+pq(a,2)+"."+pq(o,3)+"Z":a?"T"+pq(r,2)+":"+pq(i,2)+":"+pq(a,2)+"Z":i||r?"T"+pq(r,2)+":"+pq(i,2)+"Z":"")):t.test(e+="")?'"'+e.replace(/"/g,'""')+'"':e}return{parse:function(e,t){var n,i,a=r(e,function(e,r){var a;if(n)return n(e,r-1);i=e,n=t?(a=pO(e),function(n,r){return t(a(n),r,e)}):pO(e)});return a.columns=i||[],a},parseRows:r,format:function(t,n){return null==n&&(n=pI(t)),[n.map(o).join(e)].concat(i(t,n)).join("\n")},formatBody:function(e,t){return null==t&&(t=pI(e)),i(e,t).join("\n")},formatRows:function(e){return e.map(a).join("\n")},formatRow:a,formatValue:o}}(","),pN=pU.parse;pU.parseRows,pU.format,pU.formatBody,pU.formatRows,pU.formatRow,pU.formatValue;var pB={};pB=new URL("demonstrations.12a8174c.csv",import.meta.url).toString();const pk=pP();// label layer
fetch(/*@__PURE__*/n(pB)).then(e=>e.text()).then(e=>{let t=pN(e,({lat:e,lng:t,location:n,figure:r,video:i})=>({lat:+e,lng:+t,figure:+r||1,location:n,video:i}));console.info("csvData",t),pk(document.getElementById("globe")).pointOfView({lat:10}).globeImageUrl("//unpkg.com/three-globe/example/img/earth-night.jpg").backgroundImageUrl("//unpkg.com/three-globe/example/img/night-sky.png").labelColor(()=>"rgba(255, 255, 255, 0.50)")// .labelResolution(2)
.labelsData(t).labelLat(e=>e.lat).labelLng(e=>e.lng).labelDotRadius(e=>.4*e.figure).labelSize(e=>.4*e.figure).labelLabel(e=>{var t=new URL(e.video).searchParams.get("v"),n=`https://www.youtube-nocookie.com/embed/${t}?rel=0&autoplay=1&mute=1`;return`<iframe src=${n} width="400" height="315" frameborder="0"></iframe>`}).onLabelHover(e=>n.autoRotate=!n.autoRotate)// TODO: move label to onHover?
.labelText(e=>e.location.split(",").pop());let n=pk.controls();n.autoRotate=!0,n.autoRotateSpeed=.6,n.maxDistance=720,n.minDistance=144;// globe.onGlobeClick((_)=>controls.autoRotate = !controls.autoRotate);
});//# sourceMappingURL=index.1efbe0e9.js.map

//# sourceMappingURL=index.1efbe0e9.js.map
